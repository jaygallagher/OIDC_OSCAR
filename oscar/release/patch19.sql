-- patch sql  for build 932 and newer
-- updated July 18, 2022 with Dennis' cleanup code
-- updated Dec 5, 2022 with DeleteIndex procedure
-- disabled strict mode
-- this is the delta from May 1, 2019 containing more recent updates
-- this is used in debs numbered 1 and newer in the OSCAR 19 series

-- oscar_15_to_oscar_19.sql aka patch 1 sql is the delta from OSCAR 15 to OSCAR 19 which contains updates up to update-2019-04-10.sql
-- note that statements in this SQL need to be able to be re-run without throwing an error

-- disable strict mode if present for this session
SET @@SQL_MODE = REPLACE(@@SQL_MODE, 'STRICT_TRANS_TABLES', '');

DELIMITER $$

DROP PROCEDURE IF EXISTS `CreateIndex` $$
CREATE PROCEDURE `CreateIndex`
(
    given_table    VARCHAR(64),
    given_unique   VARCHAR(64),
    given_index    VARCHAR(64),
    given_columns  VARCHAR(64)

)
theStart:BEGIN

    DECLARE TableIsThere INTEGER;
    DECLARE IndexIsThere INTEGER;

    SELECT COUNT(1) INTO TableIsThere
    FROM INFORMATION_SCHEMA.STATISTICS
    WHERE table_schema = DATABASE()
    AND   table_name   = given_table;

    IF TableIsThere = 0 THEN
        SELECT CONCAT(given_database,'.',given_table, 
	' does not exist.  Unable to add ', given_index) CreateIndexMessage;
	LEAVE theStart;
    ELSE

	    SELECT COUNT(1) INTO IndexIsThere
	    FROM INFORMATION_SCHEMA.STATISTICS
	    WHERE table_schema = DATABASE()
	    AND   table_name   = given_table
	    AND   index_name   = given_index;

	    IF IndexIsThere = 0 THEN
		SET @sqlstmt = CONCAT('CREATE ',given_unique,' INDEX ',given_index,' ON ',
		DATABASE(),'.',given_table,' (',given_columns,')');
		PREPARE st FROM @sqlstmt;
		EXECUTE st;
		DEALLOCATE PREPARE st;
	    ELSE
		SELECT CONCAT('Index ',given_index,' Already Exists ON Table ',
		DATABASE(),'.',given_table) CreateIndexMessage;
	    END IF;

	END IF;

END $$
DELIMITER ;


DELIMITER $$
DROP PROCEDURE IF EXISTS `DeleteIndex` $$
CREATE PROCEDURE DeleteIndex(
    given_table    VARCHAR(64),
    given_idx      VARCHAR(64)
)

theStart:BEGIN

    DECLARE TableIsThere INTEGER;
    DECLARE IdxIsThere INTEGER;

    SELECT COUNT(1) INTO TableIsThere
    FROM INFORMATION_SCHEMA.STATISTICS
    WHERE table_schema = DATABASE()
    AND   table_name   = given_table;

    IF TableIsThere = 0 THEN
        SELECT CONCAT(DATABASE(),'.',given_table, 
	' does not exist.  Unable to delete ', given_idx) DeleteIndexMessage;
	LEAVE theStart;
    ELSE
        SET IdxIsThere = (  SELECT COUNT(*) 
                    FROM INFORMATION_SCHEMA.STATISTICS
                    WHERE   TABLE_SCHEMA = DATABASE() AND 
                            TABLE_NAME = given_table AND 
                            INDEX_NAME = given_idx );
        IF IdxIsThere = 1 THEN
 		    SET @sqlstmt = CONCAT('ALTER TABLE ',DATABASE(),'.',given_table,' DROP INDEX ',given_idx);
		    PREPARE st FROM @sqlstmt;
		    EXECUTE st;
		    DEALLOCATE PREPARE st;
	    ELSE
		    SELECT CONCAT('Index ',given_idx,' doesnt exist ON Table ',
		    DATABASE(),'.',given_table) DeleteIndexMessage;
	    END IF;
	 END IF;

END $$
DELIMITER ;

DELIMITER $$
DROP PROCEDURE IF EXISTS add_column $$
CREATE PROCEDURE add_column
(
    given_table    VARCHAR(64),
    given_column   VARCHAR(64),
    given_defin    VARCHAR(64)
)

theStart:BEGIN

    DECLARE TableIsThere INTEGER;
    DECLARE ColumnIsThere INTEGER;

    SELECT COUNT(1) INTO TableIsThere
    FROM INFORMATION_SCHEMA.STATISTICS
    WHERE table_schema = DATABASE()
    AND   table_name   = given_table;

    IF TableIsThere = 0 THEN
        SELECT CONCAT(DATABASE(),'.',given_table, 
	' does not exist.  Unable to add ', given_column) add_columnMessage;
	LEAVE theStart;
    ELSE
        SET ColumnIsThere = (  SELECT COUNT(*) 
                    FROM INFORMATION_SCHEMA.COLUMNS
                    WHERE   TABLE_SCHEMA = DATABASE() AND 
                            TABLE_NAME = given_table AND 
                            COLUMN_NAME = given_column );
        IF ColumnIsThere = 0 THEN
 		    SET @sqlstmt = CONCAT('ALTER TABLE ',DATABASE(),'.',given_table,' ADD ',given_column,' ', given_defin);
		    PREPARE st FROM @sqlstmt;
		    EXECUTE st;
		    DEALLOCATE PREPARE st;
	    ELSE
		    SELECT CONCAT('Column ',given_column,' Already Exists ON Table ',
		    DATABASE(),'.',given_table) add_columnMessage;
	    END IF;
	 END IF;
END $$
DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS patch_database $$
CREATE PROCEDURE patch_database()
BEGIN

-- add a column safely update-2019-05-03.sql
IF NOT EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='senderEmail' AND TABLE_NAME='fax_config') ) THEN
    ALTER TABLE `fax_config` ADD `senderEmail` varchar(255);
END IF;

-- add a column safely from Dennis's fix for update-2019-03-28.sql
IF NOT EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='code' AND TABLE_NAME='oscar_msg_type') ) THEN
    ALTER TABLE `oscar_msg_type` ADD `code` varchar(255);
    UPDATE `oscar_msg_type` SET `code` = 'GENERAL_TYPE' WHERE `type` = 2;
    UPDATE `oscar_msg_type` SET `code` = 'OSCAR_REVIEW_TYPE' WHERE `type` = 1;
END IF;
IF NOT EXISTS( (SELECT * FROM `oscar_msg_type` WHERE `type`='3') ) THEN
    INSERT INTO `oscar_msg_type`(`type`, `description`, `code`) VALUES (3, 'Integrator Message', 'INTEGRATOR_TYPE');
END IF;

-- update-2019-06-13.sql
IF NOT EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='lifetime' AND TABLE_NAME='ServiceClient') ) THEN
    ALTER TABLE `ServiceClient` ADD `lifetime` int;
    UPDATE `ServiceClient` SET `lifetime` = -1 WHERE `lifetime` IS NULL;
END IF;

IF NOT EXISTS( (SELECT * FROM `report_letters` WHERE `report_name`='PAP 1 - 2019') ) THEN

    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'PAP 1 - 2019', 'pap-initial.jrxml', , '2019-06-18 01:14:43', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'PAP 2 - 2019', 'pap-second.jrxml', , '2019-06-18 01:15:01', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES('999998', 'Imm 1 - 2019', 'Immunization-Initial.jrxml', , '2019-06-18 01:15:29', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES('999998', 'Imm 2 - 2019', 'dtap-ipv-hib-second.jrxml', , '2019-06-18 01:15:43', '0');
    INSERT INTO `report_letters` (`provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'MAM 1 - 2019', 'mammogram-initial.jrxml', , '2019-06-18 01:15:58', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'MAM 2 - 2019', 'mammogram-second.jrxml', , '2019-06-18 01:16:13', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'FOBT 1 - 2019', 'fobt-initial.jrxml', , '2019-06-18 01:16:30', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'FOBT 2 - 2019', 'fobt-second.jrxml', , '2019-06-18 01:16:43', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'Flu 1 - 2019', 'flu-initial.jrxml', , '2019-06-18 01:17:26', '0');
    INSERT INTO `report_letters` ( `provider_no`, `report_name`, `file_name`, `report_file`, `date_time`, `archive`) VALUES( '999998', 'Flu 2 - 2019', 'flu-second.jrxml', , '2019-06-18 01:17:38', '0');
    
END IF;


-- for BC update-2019-06-23.sql 
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='billing_unit' AND TABLE_NAME='billingmaster') ) THEN
    ALTER TABLE `billingmaster` MODIFY `billing_unit` varchar(3);
END IF;

-- update-2019-07-12.sql

IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingAddress' AND TABLE_NAME='demographic') ) THEN
    ALTER TABLE `demographic` CHANGE `mailingAddress` `residentialAddress` varchar(60);
END IF;
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingCity' AND TABLE_NAME='demographic') ) THEN
    ALTER TABLE `demographic` CHANGE `mailingCity` `residentialCity` varchar(50);
END IF;
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingProvince' AND TABLE_NAME='demographic') ) THEN
    ALTER TABLE `demographic` CHANGE `mailingProvince` `residentialProvince` varchar(20);
END IF;
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingPostal' AND TABLE_NAME='demographic') ) THEN
    ALTER TABLE `demographic` CHANGE `mailingPostal` `residentialPostal` varchar(9);
END IF;


IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingAddress' AND TABLE_NAME='demographicArchive') ) THEN
    ALTER TABLE `demographicArchive` CHANGE `mailingAddress` `residentialAddress` varchar(60);
END IF;
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingCity' AND TABLE_NAME='demographicArchive') ) THEN
    ALTER TABLE `demographicArchive` CHANGE `mailingCity` `residentialCity` varchar(50);
END IF;
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingProvince' AND TABLE_NAME='demographicArchive') ) THEN
    ALTER TABLE `demographicArchive` CHANGE `mailingProvince` `residentialProvince` varchar(20);
END IF;
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='mailingPostal' AND TABLE_NAME='demographicArchive') ) THEN
    ALTER TABLE `demographicArchive` CHANGE `mailingPostal` `residentialPostal` varchar(9);
END IF;


-- update-2019-10-30.sql
IF NOT EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE()
        AND COLUMN_NAME='consentToUseEmailForCare' AND TABLE_NAME='demographic') ) THEN
    ALTER TABLE `demographic` ADD `consentToUseEmailForCare` tinyint(1);
END IF;

-- update-2019-09-23.sql
IF NOT EXISTS( (SELECT * FROM `ctl_doctype` WHERE `module`='demographic' AND `doctype`='econsult') ) THEN
    INSERT INTO `ctl_doctype`(`module`, `doctype`, `status`) VALUES ('demographic', 'econsult', 'A');
END IF;

-- update-2019-12-01.sql
IF NOT EXISTS( (SELECT * FROM `measurementType` WHERE `type`='MDRC' ) ) THEN
    IF EXISTS (SELECT id FROM validations WHERE name='yes/no' limit 1) THEN
        INSERT INTO `measurementType` (`type`, `typeDisplayName`, `typeDescription`, `measuringInstruction`, `createDate`, `validation`) VALUES
   ( 'MDRC', 'Med Rec', 'Med Rec', 'Completed', now(),(SELECT id FROM validations WHERE name='yes/no' limit 1));
    END IF;
END IF;

-- update-2019-07-22.sql
IF NOT EXISTS( (SELECT * FROM `OscarJobType` WHERE `name`='DashboardTrending') ) THEN
    INSERT INTO `OscarJobType` VALUES (\N,'DashboardTrending','','org.oscarehr.integration.dashboard.DashboardTrendingJob',1,now());
END IF;

-- update-2021-03-06.sql
IF NOT EXISTS( (SELECT * FROM `secObjPrivilege` WHERE `objectName`='_dashboardChgUser') ) THEN
    INSERT INTO `secObjPrivilege` VALUES('doctor','_dashboardChgUser','o',0,'999998');
    INSERT INTO `secObjPrivilege` VALUES('admin','_dashboardChgUser','x',0,'999998');
END IF;

-- update-2020-05-08.sql for ON AR 2017
IF NOT EXISTS( (SELECT * FROM `encounterForm` WHERE `form_name`='ON AR 2017') ) THEN
    INSERT INTO `encounterForm` (`form_name`,`form_value`,`form_table`,`hidden`) VALUES ('ON AR 2017','../form/formAR2017Record1.jsp?demographic_no=','formONAR2017','0');
END IF;

-- update-2021-10-20.sql for BCAR 2020
IF NOT EXISTS( (SELECT * FROM `encounterForm` WHERE `form_name`='BC-AR 2020') ) THEN
    INSERT INTO `encounterForm` (`form_name`,`form_value`,`form_table`,`hidden`) VALUES ('BC-AR 2020', '../form/formBCAR2020pg1.jsp?demographic_no=', 'formBCAR2020', 1);
END IF;

-- update-2022-05-01.sql for Rourke 2017
IF NOT EXISTS( (SELECT * FROM `encounterForm` WHERE `form_name`='Rourke2017') ) THEN
    INSERT INTO `encounterForm` (`form_name`,`form_value`,`form_table`,`hidden`) VALUES ('Rourke2017', '../form/formrourke2017complete.jsp?demographic_no=', 'formRourke2017', 1);
END IF;

-- update-2022-06-24.sql for preferredPhone apconfig.xml
IF EXISTS( (SELECT * FROM `eform` WHERE `form_html` LIKE "%phone_best%" ) ) THEN
    UPDATE `eform` SET `form_html` = REPLACE(`form_html`,"phone_best","preferredPhone");
    UPDATE `eform_data` SET `form_data` = REPLACE(`form_data`,"phone_best","preferredPhone");
END IF;

-- phc add PHQ9 and GAD7 scores Jan 25, 2022
IF NOT EXISTS( (SELECT * FROM `measurementType` WHERE `type`='PHQ9' ) ) THEN
    IF EXISTS (SELECT id FROM validations WHERE name='Numeric Value: 0 to 50' limit 1) THEN
        INSERT INTO `measurementType` (`type`, `typeDisplayName`, `typeDescription`, `measuringInstruction`, `createDate`, `validation`) VALUES
   ( 'PHQ9', 'PHQ9 score', 'PHQ9 score', 'score', now(),(SELECT id FROM validations WHERE name='Numeric Value: 0 to 50' limit 1));
        INSERT INTO `measurementType` (`type`, `typeDisplayName`, `typeDescription`, `measuringInstruction`, `createDate`, `validation`) VALUES
   ( 'GAD7', 'GAD7 score', 'GAD7 score', 'score', now(),(SELECT id FROM validations WHERE name='Numeric Value: 0 to 50' limit 1));
    END IF;
END IF;

-- default indicator dashboard
IF NOT EXISTS( (SELECT * FROM `indicatorTemplate` WHERE `framework`='OSCAR EMR') ) THEN

        -- DELETE FROM `dashboard` WHERE `description` LIKE 'OSCAR Pane%';
        -- DELETE FROM `dashboard` WHERE `description` LIKE 'DoBC Panel';
        -- DELETE FROM `indicatorTemplate` WHERE `framework`='DoBC CPQI PSP Panel';
        -- DELETE FROM `indicatorTemplate` WHERE `dashboardid` > 18;
        
        SET @oscardoc_provider_no='999998';
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('A: Panel','OSCAR Panel - Active Pts, Assigned Provider, Pt Contact Info',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId1 = LAST_INSERT_ID();
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('B: Lifestyle','OSCAR Panel - Obesity, Smoking, Drugs, Alcohol, Chronic Pain',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId2 = LAST_INSERT_ID();       
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('C: Preventions','OSCAR Panel - CRC, Mammography',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId3 = LAST_INSERT_ID();        
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('D: Geriatrics','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId4 = LAST_INSERT_ID();         
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('E: Mental Health','OSCAR Panel - Depression, Anxiety',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId5 = LAST_INSERT_ID();         
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('F: Diabetes','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId6 = LAST_INSERT_ID();
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('G: Cardiovascular','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId7 = LAST_INSERT_ID();       
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('H: Rheumatology','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId8 = LAST_INSERT_ID();        
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('I: Respirology','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId9 = LAST_INSERT_ID();         
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('J: GI','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId10 = LAST_INSERT_ID();        
        INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) 
                VALUES ('K: Renal','OSCAR Panel',@oscardoc_provider_no,NOW(),1,0);
        SET @dashboardId11 = LAST_INSERT_ID();       
        
        

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
            VALUES (@dashboardId1,'Active Patients','General',"Patient Population",'DoBC CPQI PSP Panel','2017-08-02','Number of active patients in the practice last seen < 3 years, 3-5 years, 5+ years and never seen.','','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Patient Population</subCategory>\n		<name>Active Patients</name>\n		<definition>Number of active patients in the practice last seen &lt; 3 years, 3-5 years, 5+ years and never seen.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.THREE) AS \"Number Active, Seen within 3 years\",\n	SUM(fin.FIVETHREE) AS \"Number Active, Seen 3-5 years ago\",\n	SUM(fin.FIVEPLUS) AS \"Number Active, not seen in 5+ years\",\n	SUM(fin.NONE) AS \"Number Active, no documented encounter\"\nFROM (\n	SELECT\n		IF( DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(cmn.observation_date) ) ,1 ,0 ) AS THREE, \n		IF(  DATE_SUB(CURDATE() , INTERVAL 5 YEAR) &lt;= DATE( MAX(cmn.observation_date) ) AND\n		DATE( MAX(cmn.observation_date) ) &lt; DATE_SUB(CURDATE(), INTERVAL 3 YEAR), 1,0 ) AS FIVETHREE,\n		IF( DATE( MAX( cmn.observation_date ) ) &lt; DATE_SUB(CURDATE() , INTERVAL 5 YEAR) ,1 ,0 ) AS FIVEPLUS,\n		IF( cmn.note_id IS NULL ,1, 0 ) AS NONE\n	FROM demographic d\n	LEFT JOIN casemgmt_note cmn\n	ON (  d.demographic_no = cmn.demographic_no AND cmn.signed = 1 AND cmn.provider_no != \'-1\'  )\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n	GROUP BY d.demographic_no HAVING count(d.demographic_no) > -1\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />	\n			<column id=\"lastEncounter\" name=\"IF(MAX(cmn.observation_date) IS NOT NULL,MAX(cmn.observation_date),\'\')\" title=\"Last Encounter\" primary=\"false\" />\n			<column id=\"patientStatus\" name=\"d.patient_status\" title=\"Patient Status\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />	\n			<column id=\"lastEncounter\" name=\"IF(MAX(cmn.observation_date) IS NOT NULL,MAX(cmn.observation_date),\'\')\" title=\"Last Encounter\" primary=\"false\" />\n			<column id=\"patientStatus\" name=\"d.patient_status\" title=\"Patient Status\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"patientStatusUpdate\" name=\"Set Patient Inactive\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n    d.*,\n    d.patient_status AS pt_status,\n    max(cmn.observation_date) as last_encounter\nFROM demographic d\nLEFT JOIN casemgmt_note cmn\nON (  d.demographic_no = cmn.demographic_no AND cmn.signed = 1 AND cmn.provider_no != \'-1\'  )\nWHERE d.provider_no LIKE \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\nGROUP BY d.demographic_no HAVING count(d.demographic_no) > -1			\n		</query>\n	</drillDownQuery>	\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId1,'No Assigned Primary','General','Patient Population','DoBC CPQI PSP Panel','2017-08-02','# of active patients without an assigned primary',' i)  # of active patients without an assigned primary\n		  ii) # all active patients for all providers\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Patient Population</subCategory>\n		<name>No Assigned Primary</name>\n		<definition># of active patients without an assigned primary\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  i)  # of active patients without an assigned primary\n		  ii) # all active patients for all providers\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.NO_ASSIGNED_PRIMARY) AS \"Number Active, No Assigned Primary\",\n	SUM(fin.OTHER_PATIENTS) AS \"Number Active, Assigned Primary\"\nFROM (\n	SELECT\n		IF( d.provider_no IS NULL OR d.provider_no = \'\' OR p.provider_no IS NULL ,1 ,0 ) AS NO_ASSIGNED_PRIMARY,\n		IF( d.provider_no IS NOT NULL AND d.provider_no != \'\' AND p.provider_no is NOT NULL,1 ,0 ) AS OTHER_PATIENTS\n	FROM demographic d\n	LEFT JOIN provider p\n	ON d.provider_no = p.provider_no\n	WHERE d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone#\" primary=\"false\" />\n			<column id=\"provider\" name=\"d.provider_no\" title=\"Missing/Invalid Provider\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n		        <column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n		        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone#\" primary=\"false\" />\n			<column id=\"provider\" name=\"d.provider_no\" title=\"Missing/Invalid Provider\" primary=\"false\" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\nd.*\nFROM demographic d\nLEFT JOIN provider p\nON d.provider_no = p.provider_no\nWHERE d.patient_status LIKE ${pstatus}\nAND (d.provider_no IS NULL OR d.provider_no = \'\' OR p.provider_no IS NULL)\nORDER BY d.provider_no DESC;\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId1,'Patient Contact','General','Patient Population','DoBC CPQI PSP Panel','2017-08-02','# of active patients with incomplete contact information in comparison to # all active patients','i)  # of active patients with incomplete contact information\n		  ii) # of active patients with contact information\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Patient Population</subCategory>\n		<name>Patient Contact</name>\n		<definition># of active patients with incomplete contact information in comparison to # all active patients\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  i)  # of active patients with incomplete contact information\n		  ii) # of active patients with contact information\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.INCOMPLETE_CONTACT_INFO) AS \"Active, Incomplete Contact Information\",\n	SUM(fin.HAS_CONTACT_INFO) AS \"Active, With Contact Information\"\nFROM (\n	SELECT\n		IF( (LENGTH(phone) &lt; LENGTH(\"###-###-####\") AND LENGTH(phone2) &lt; LENGTH(\"###-###-####\") AND LENGTH(e.value) &lt; LENGTH(\"###-###-####\")) OR (address is NULL OR address=\"\") OR (city is NULL OR city=\"\") ,1 ,0 ) AS INCOMPLETE_CONTACT_INFO,\n		IF( (LENGTH(phone) &lt; LENGTH(\"###-###-####\") AND LENGTH(phone2) &lt; LENGTH(\"###-###-####\") AND LENGTH(e.value) &lt; LENGTH(\"###-###-####\")) OR (address is NULL OR address=\"\") OR (city is NULL OR city=\"\") ,0 ,1 ) AS HAS_CONTACT_INFO\n	FROM demographic d\n	LEFT JOIN demographicExt e ON d.demographic_no=e.demographic_no AND\n	  e.key_val=\'demo_cell\' AND e.date_time=(SELECT MAX(de.date_time) FROM demographicExt de WHERE e.demographic_no=de.demographic_no)\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"phone\" name=\"IF(d.phone IS NULL OR d.phone=\'\', \'N/A\', d.phone )\" title=\"Phone(H)\" primary=\"false\" />\n			<column id=\"phone2\" name=\"IF(d.phone2 IS NULL OR d.phone2=\'\', \'N/A\', d.phone2)\" title=\"Phone(W)\" primary=\"false\" />\n			<column id=\"phone3\" name=\"IF(e.value IS NULL OR e.value=\'\', \'N/A\', e.value)\" title=\"Cell Phone\" primary=\"false\" />\n			<column id=\"address\" name=\"IF(d.address IS NULL OR d.address=\'\', \'N/A\', d.address )\" title=\"Address\" primary=\"false\" />\n			<column id=\"city\" name=\"IF(d.city IS NULL OR d.city=\'\', \'N/A\', d.city )\" title=\"City\" primary=\"false\" />\n\n		</displayColumns>\n		<exportColumns>\n		        <column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n		  	<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"phone\" name=\"IF(d.phone IS NULL OR d.phone=\'\', \'N/A\', d.phone )\" title=\"Phone(H)\" primary=\"false\" />\n			<column id=\"phone2\" name=\"IF(d.phone2 IS NULL OR d.phone2=\'\', \'N/A\', d.phone2)\" title=\"Phone(W)\" primary=\"false\" />\n			<column id=\"phone3\" name=\"IF(e.value IS NULL OR e.value=\'\', \'N/A\', e.value)\" title=\"Cell Phone\" primary=\"false\" />\n			<column id=\"address\" name=\"IF(d.address IS NULL OR d.address=\'\', \'N/A\', d.address )\" title=\"Address\" primary=\"false\" />\n			<column id=\"city\" name=\"IF(d.city IS NULL OR d.city=\'\', \'N/A\', d.city )\" title=\"City\" primary=\"false\" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\nd.*\nFROM demographic d\nLEFT JOIN demographicExt e ON d.demographic_no=e.demographic_no AND e.key_val=\'demo_cell\'\n  AND e.date_time=(SELECT MAX(de.date_time) FROM demographicExt de WHERE e.demographic_no=de.demographic_no)	\nWHERE d.provider_no LIKE \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\nAND ((LENGTH(phone) &lt; LENGTH(\"###-###-####\") AND LENGTH(phone2) &lt; LENGTH(\"###-###-####\" ) AND LENGTH(e.value) &lt; LENGTH(\"###-###-####\")) OR (address is NULL OR address=\"\") OR (city is NULL OR city=\"\"));\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`)
	        VALUES (@dashboardId1, 'Active Patients', 'General', 'Patient Population', 'DoBC CPQI PSP Panel', '2021-03-03', '# of active patients with missing email or phone', '# of active patients missing phone address or email', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>PHC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Patient Population</subCategory>\n		<name>Phone and eMail Contact Information</name>\n		<definition># of active patients with incomplete contact information in comparison to # all active patients\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>03-03-2021</frameworkVersion>\n		<notes>\n		  # of active patients missing phone address or email\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.INCOMPLETE_CONTACT_INFO) AS "Active, Incomplete Contact Information",\n	SUM(fin.HAS_CONTACT_INFO) AS "Active, With Contact Information"\nFROM (\n	SELECT\n		IF( (LENGTH(phone) &lt; LENGTH("###-###-####") OR LENGTH(e.value) &lt; LENGTH("###-###-####")) OR (address is NULL OR address="") OR (city is NULL OR city="") OR (email is NULL OR email="")  ,1 ,0 ) AS INCOMPLETE_CONTACT_INFO,\n		IF( (LENGTH(phone) &lt; LENGTH("###-###-####") OR LENGTH(e.value) &lt; LENGTH("###-###-####")) OR (address is NULL OR address="") OR (city is NULL OR city="") OR (email is NULL OR email="")  ,0 ,1 ) AS HAS_CONTACT_INFO\n	FROM demographic d\n	LEFT JOIN demographicExt e ON d.demographic_no=e.demographic_no AND\n	  e.key_val=\'demo_cell\' AND e.date_time=(SELECT MAX(de.date_time) FROM demographicExt de WHERE e.demographic_no=de.demographic_no)\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />	\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n		</params>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Date of Birth (mm-dd-yy)" primary="false" />\n			<column id="age" name="TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )" title="Age" primary="false" />\n			<column id="phone" name="IF(d.phone IS NULL OR d.phone=\'\', \'N/A\', d.phone )" title="Phone(H)" primary="false" />\n			<column id="phone2" name="IF(d.phone2 IS NULL OR d.phone2=\'\', \'N/A\', d.phone2)" title="Phone(W)" primary="false" />\n			<column id="phone3" name="IF(e.value IS NULL OR e.value=\'\', \'N/A\', e.value)" title="Cell Phone" primary="false" />\n			<column id="address" name="IF(d.address IS NULL OR d.address=\'\', \'N/A\', d.address )" title="Address" primary="false" />\n			<column id="city" name="IF(d.city IS NULL OR d.city=\'\', \'N/A\', d.city )" title="City" primary="false" />\n			<column id="email" name="IF(d.email IS NULL OR d.email=\'\', \'N/A\', d.email )" title="email" primary="false" />\n		</displayColumns>\n		<exportColumns>\n		        <column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n		  	<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n                        <column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Date of Birth (mm-dd-yy)" primary="false" />\n			<column id="age" name="TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )" title="Age" primary="false" />\n			<column id="phone" name="IF(d.phone IS NULL OR d.phone=\'\', \'N/A\', d.phone )" title="Phone(H)" primary="false" />\n			<column id="phone2" name="IF(d.phone2 IS NULL OR d.phone2=\'\', \'N/A\', d.phone2)" title="Phone(W)" primary="false" />\n			<column id="phone3" name="IF(e.value IS NULL OR e.value=\'\', \'N/A\', e.value)" title="Cell Phone" primary="false" />\n			<column id="address" name="IF(d.address IS NULL OR d.address=\'\', \'N/A\', d.address )" title="Address" primary="false" />\n			<column id="city" name="IF(d.city IS NULL OR d.city=\'\', \'N/A\', d.city )" title="City" primary="false" />\n			<column id="email" name="IF(d.email IS NULL OR d.email=\'\', \'N/A\', d.email )" title="email" primary="false" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\nd.*\nFROM demographic d\nLEFT JOIN demographicExt e ON d.demographic_no=e.demographic_no AND e.key_val=\'demo_cell\'\n  AND e.date_time=(SELECT MAX(de.date_time) FROM demographicExt de WHERE e.demographic_no=de.demographic_no)	\nWHERE d.provider_no LIKE \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\nAND ((LENGTH(phone) &lt; LENGTH("###-###-####") AND LENGTH(phone2) &lt; LENGTH("###-###-####" ) AND LENGTH(e.value) &lt; LENGTH("###-###-####")) OR (address is NULL OR address="") OR (city is NULL OR city="") OR (email is NULL OR email=""));\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0', 0, NULL, NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
            VALUES (@dashboardId1,'Patient Status (Seen/Billed)','General','Patient Population','DoBC CPQI PSP Panel','2017-08-02','Number of active patients in the practice seen within last 3 years and number not seen in last 3 years.','','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Patient Population</subCategory>\n		<name>Patient Status (Seen/Billed)</name>\n		<definition>Number of active patients in the practice seen within last 3 years and number not seen in last 3 years.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"billingCodeExcluded\" name=\"Billing Code Excluded\" value=\"\'03333\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.THREE) AS \"Number Active, Seen/Billed within 3 years\",\n	SUM(fin.NOT_SEEN_THREE) AS \"Number Active, Not seen/billed within 3 years\"\nFROM (\n	SELECT\n	  IF( DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(cmn.observation_date) ) OR\n	    DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(b.service_date) ) ,1 ,0 ) AS THREE,\n	  IF( DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(cmn.observation_date) ) OR\n	    DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(b.service_date) ) ,0 ,1 ) AS NOT_SEEN_THREE\n	FROM demographic d\n	LEFT JOIN casemgmt_note cmn\n	ON ( d.demographic_no = cmn.demographic_no AND cmn.signed = 1 AND cmn.provider_no != \'-1\'  )\n	LEFT JOIN billingmaster b\n	ON ( d.demographic_no = b.demographic_no AND b.dx_code1 != ${billingCodeExcluded} )\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n	GROUP BY d.demographic_no HAVING count(d.demographic_no) > -1\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"billingCodeExcluded\" name=\"Billing Code Excluded\" value=\"\'03333\'\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%Y-%m-%d\' )\" title=\"Date of Birth (yy-mm-dd)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />	\n			<column id=\"lastEncounter\" name=\'IF(MAX(cmn.observation_date) IS NOT NULL,DATE_FORMAT(MAX(cmn.observation_date),\"%Y%m%d\"),\"\")\' title=\"Last Encounter (yymmdd)\" primary=\"false\" />\n			<column id=\"lastBilling\" name=\"IF(MAX(b.service_date) IS NOT NULL,MAX(b.service_date),\'\')\" title=\"Last Billing (yymmdd)\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%Y-%m-%d\' )\" title=\"Date of Birth (yy-mm-dd)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />	\n			<column id=\"lastEncounter\" name=\'IF(MAX(cmn.observation_date) IS NOT NULL,DATE_FORMAT(MAX(cmn.observation_date),\"%Y%m%d\"),\"\")\' title=\"Last Encounter (yymmdd)\" primary=\"false\" />\n			<column id=\"lastBilling\" name=\"IF(MAX(b.service_date) IS NOT NULL,MAX(b.service_date),\'\')\" title=\"Last Billing (yymmdd)\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"patientStatusUpdate\" name=\"Set Patient Inactive\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n    d.*,\n    d.patient_status AS pt_status,\n    max(cmn.observation_date) as last_encounter,\n    max(b.service_date) as last_billing\nFROM demographic d\nLEFT JOIN casemgmt_note cmn\nON (  d.demographic_no = cmn.demographic_no AND cmn.signed = 1 AND cmn.provider_no != \'-1\'  )\nLEFT JOIN billingmaster b\nON ( d.demographic_no = b.demographic_no AND b.dx_code1 != ${billingCodeExcluded} )\nWHERE d.provider_no LIKE \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\nGROUP BY d.demographic_no HAVING count(d.demographic_no) > -1\nORDER BY MAX(cmn.observation_date) ASC, MAX(b.service_date) ASC, d.demographic_no ASC\n		</query>\n	</drillDownQuery>	\n</indicatorTemplateXML>\n',b'1',b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
             VALUES (@dashboardId1,'Age and Gender Histogram Report','General','Patient Population','DoBC CPQI PSP Panel','08-02-2022','Age and Gender Histogram report (5 year intervals)', 'Age and Gender Histogram report (5 year intervals)\n		', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Patient Population</subCategory>\n		<name>Age and Gender Histogram Report</name>\n		<definition>Age and Gender Histogram report (5 year intervals)</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<graphType>bar</graphType>\n		<notes>\n		  Age and Gender Histogram report (5 year intervals)\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	IF( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.gender = \'M\' AND (0 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() ) &lt; 20 )) THEN 1 ELSE 0 END) , 0) AS \"M0-19\",\n	IF( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.gender = \'M\' AND (20 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() ) &lt; 60 )) THEN 1 ELSE 0 END) , 0) AS \"M20-59\",\n	IF( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.gender = \'M\' AND (60 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() ) &lt; 999 )) THEN 1 ELSE 0 END) , 0) AS \"M60+\",\n	IF( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.gender = \'F\' AND (0 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() ) &lt; 20 )) THEN 1 ELSE 0 END) , 0) AS \"F0-19\",\n	IF( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.gender = \'F\' AND (20 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() ) &lt; 60 )) THEN 1 ELSE 0 END) , 0) AS \"F20-59\",\n	IF( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.gender = \'F\' AND (60 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(fin.year,\'-\',fin.month,\'-\',fin.day) ), CURDATE() ) &lt; 999 )) THEN 1 ELSE 0 END) , 0) AS \"F60+\"\nFROM (\nSELECT\nd.demographic_no as patient, d.year_of_birth as year, d.month_of_birth as month, d.date_of_birth as day, d.sex as gender\nFROM\ndemographic d\nWHERE d.provider_no LIKE \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n			<column id=\'M0-4\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (0 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 5 )) THEN 1 ELSE 0 END) , 0)\" title=\"M0-4\" primary=\"false\" />\n			<column id=\'M5-9\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (5 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 10 )) THEN 1 ELSE 0 END) , 0)\" title=\"M5-9\" primary=\"false\" />\n			<column id=\'M10-14\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (10 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 15 )) THEN 1 ELSE 0 END) , 0)\" title=\"M10-14\" primary=\"false\" />\n			<column id=\'M15-20\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (15 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 20 )) THEN 1 ELSE 0 END) , 0)\" title=\"M15-19\" primary=\"false\" />\n			<column id=\'M20-24\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (20 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 25 )) THEN 1 ELSE 0 END) , 0)\" title=\"M20-29\" primary=\"false\" />\n			<column id=\'M25-29\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (25 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 30 )) THEN 1 ELSE 0 END) , 0)\" title=\"M20-29\" primary=\"false\" />\n			<column id=\'M30-34\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (30 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 35 )) THEN 1 ELSE 0 END) , 0)\" title=\"M30-34\" primary=\"false\" />\n			<column id=\'M35-39\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (35 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 40 )) THEN 1 ELSE 0 END) , 0)\" title=\"M35-39\" primary=\"false\" />\n			<column id=\'M40-44\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (40 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 45 )) THEN 1 ELSE 0 END) , 0)\" title=\"M40-44\" primary=\"false\" />\n			<column id=\'M45-49\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (45 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 50 )) THEN 1 ELSE 0 END) , 0)\" title=\"M45-49\" primary=\"false\" />\n			<column id=\'M50-54\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (50 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 55 )) THEN 1 ELSE 0 END) , 0)\" title=\"M50-54\" primary=\"false\" />\n			<column id=\'M55-59\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (55 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 60 )) THEN 1 ELSE 0 END) , 0)\" title=\"M55-59\" primary=\"false\" />\n			<column id=\'M60-64\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (60 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 65 )) THEN 1 ELSE 0 END) , 0)\" title=\"M60-64\" primary=\"false\" />\n			<column id=\'M65-69\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (65 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 70 )) THEN 1 ELSE 0 END) , 0)\" title=\"M65-69\" primary=\"false\" />\n			<column id=\'M70-74\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (70 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 75 )) THEN 1 ELSE 0 END) , 0)\" title=\"M70-74\" primary=\"false\" />\n			<column id=\'M75-79\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (75 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 80 )) THEN 1 ELSE 0 END) , 0)\" title=\"M75-79\" primary=\"false\" />\n			<column id=\'M80-84\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (80 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 85 )) THEN 1 ELSE 0 END) , 0)\" title=\"M80-84\" primary=\"false\" />\n			<column id=\'M85-89\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (85 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 90 )) THEN 1 ELSE 0 END) , 0)\" title=\"M85-89\" primary=\"false\" />\n			<column id=\'M90-94\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (90 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 95 )) THEN 1 ELSE 0 END) , 0)\" title=\"M90-94\" primary=\"false\" />\n			<column id=\'M95-99\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (95 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 100 )) THEN 1 ELSE 0 END) , 0)\" title=\"M95-99\" primary=\"false\" />\n			<column id=\'M100-104\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (100 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 105 )) THEN 1 ELSE 0 END) , 0)\" title=\"M100-104\" primary=\"false\" />\n			<column id=\'M105-109\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (105 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 110 )) THEN 1 ELSE 0 END) , 0)\" title=\"M105-109\" primary=\"false\" />\n			<column id=\'M110-114\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (110 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 115 )) THEN 1 ELSE 0 END) , 0)\" title=\"M110-114\" primary=\"false\" />\n			<column id=\'M115-119\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (115 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 120 )) THEN 1 ELSE 0 END) , 0)\" title=\"M115-119\" primary=\"false\" />\n			<column id=\'M120-124\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (120 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 125 )) THEN 1 ELSE 0 END) , 0)\" title=\"M120-124\" primary=\"false\" />\n			<column id=\'M125+\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (125 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 999 )) THEN 1 ELSE 0 END) , 0)\" title=\"M125+\" primary=\"false\" />\n			\n			<column id=\'F0-4\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (0 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 5 )) THEN 1 ELSE 0 END) , 0)\" title=\"F0-4\" primary=\"false\" />\n			<column id=\'F5-9\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (5 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 10 )) THEN 1 ELSE 0 END) , 0)\" title=\"F5-9\" primary=\"false\" />\n			<column id=\'F10-14\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (10 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 15 )) THEN 1 ELSE 0 END) , 0)\" title=\"F10-14\" primary=\"false\" />\n			<column id=\'F15-20\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (15 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 20 )) THEN 1 ELSE 0 END) , 0)\" title=\"F15-19\" primary=\"false\" />\n			<column id=\'F20-24\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (20 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 25 )) THEN 1 ELSE 0 END) , 0)\" title=\"F20-29\" primary=\"false\" />\n			<column id=\'F25-29\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (25 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 30 )) THEN 1 ELSE 0 END) , 0)\" title=\"F20-29\" primary=\"false\" />\n			<column id=\'F30-34\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (30 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 35 )) THEN 1 ELSE 0 END) , 0)\" title=\"F30-34\" primary=\"false\" />\n			<column id=\'F35-39\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (35 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 40 )) THEN 1 ELSE 0 END) , 0)\" title=\"F35-39\" primary=\"false\" />\n			<column id=\'F40-44\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (40 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 45 )) THEN 1 ELSE 0 END) , 0)\" title=\"F40-44\" primary=\"false\" />\n			<column id=\'F45-49\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (45 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 50 )) THEN 1 ELSE 0 END) , 0)\" title=\"F45-49\" primary=\"false\" />\n			<column id=\'F50-54\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (50 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 55 )) THEN 1 ELSE 0 END) , 0)\" title=\"F50-54\" primary=\"false\" />\n			<column id=\'F55-59\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (55 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 60 )) THEN 1 ELSE 0 END) , 0)\" title=\"F55-59\" primary=\"false\" />\n			<column id=\'F60-64\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (60 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 65 )) THEN 1 ELSE 0 END) , 0)\" title=\"F60-64\" primary=\"false\" />\n			<column id=\'F65-69\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (65 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 70 )) THEN 1 ELSE 0 END) , 0)\" title=\"F65-69\" primary=\"false\" />\n			<column id=\'F70-74\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (70 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 75 )) THEN 1 ELSE 0 END) , 0)\" title=\"F70-74\" primary=\"false\" />\n			<column id=\'F75-79\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (75 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 80 )) THEN 1 ELSE 0 END) , 0)\" title=\"F75-79\" primary=\"false\" />\n			<column id=\'F80-84\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (80 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 85 )) THEN 1 ELSE 0 END) , 0)\" title=\"F80-84\" primary=\"false\" />\n			<column id=\'F85-89\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (85 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 90 )) THEN 1 ELSE 0 END) , 0)\" title=\"F85-89\" primary=\"false\" />\n			<column id=\'F90-94\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (90 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 95 )) THEN 1 ELSE 0 END) , 0)\" title=\"F90-94\" primary=\"false\" />\n			<column id=\'F95-99\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (95 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 100 )) THEN 1 ELSE 0 END) , 0)\" title=\"F95-99\" primary=\"false\" />\n			<column id=\'F100-104\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (100 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 105 )) THEN 1 ELSE 0 END) , 0)\" title=\"F100-104\" primary=\"false\" />\n			<column id=\'F105-109\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (105 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 110 )) THEN 1 ELSE 0 END) , 0)\" title=\"F105-109\" primary=\"false\" />\n			<column id=\'F110-114\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (110 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 115 )) THEN 1 ELSE 0 END) , 0)\" title=\"F110-114\" primary=\"false\" />\n			<column id=\'F115-119\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (115 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 120 )) THEN 1 ELSE 0 END) , 0)\" title=\"F115-119\" primary=\"false\" />\n			<column id=\'F120-124\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (120 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 125 )) THEN 1 ELSE 0 END) , 0)\" title=\"F120-124\" primary=\"false\" />\n			<column id=\'F125+\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (125 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 999 )) THEN 1 ELSE 0 END) , 0)\" title=\"F125+\" primary=\"false\" />\n			\n		</displayColumns>\n		<exportColumns>\n			<column id=\'M0-4\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (0 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 5 )) THEN 1 ELSE 0 END) , 0)\" title=\"M0-4\" primary=\"false\" />\n			<column id=\'M5-9\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (5 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 10 )) THEN 1 ELSE 0 END) , 0)\" title=\"M5-9\" primary=\"false\" />\n			<column id=\'M10-14\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (10 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 15 )) THEN 1 ELSE 0 END) , 0)\" title=\"M10-14\" primary=\"false\" />\n			<column id=\'M15-20\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (15 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 20 )) THEN 1 ELSE 0 END) , 0)\" title=\"M15-19\" primary=\"false\" />\n			<column id=\'M20-24\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (20 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 25 )) THEN 1 ELSE 0 END) , 0)\" title=\"M20-29\" primary=\"false\" />\n			<column id=\'M25-29\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (25 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 30 )) THEN 1 ELSE 0 END) , 0)\" title=\"M20-29\" primary=\"false\" />\n			<column id=\'M30-34\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (30 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 35 )) THEN 1 ELSE 0 END) , 0)\" title=\"M30-34\" primary=\"false\" />\n			<column id=\'M35-39\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (35 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 40 )) THEN 1 ELSE 0 END) , 0)\" title=\"M35-39\" primary=\"false\" />\n			<column id=\'M40-44\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (40 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 45 )) THEN 1 ELSE 0 END) , 0)\" title=\"M40-44\" primary=\"false\" />\n			<column id=\'M45-49\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (45 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 50 )) THEN 1 ELSE 0 END) , 0)\" title=\"M45-49\" primary=\"false\" />\n			<column id=\'M50-54\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (50 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 55 )) THEN 1 ELSE 0 END) , 0)\" title=\"M50-54\" primary=\"false\" />\n			<column id=\'M55-59\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (55 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 60 )) THEN 1 ELSE 0 END) , 0)\" title=\"M55-59\" primary=\"false\" />\n			<column id=\'M60-64\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (60 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 65 )) THEN 1 ELSE 0 END) , 0)\" title=\"M60-64\" primary=\"false\" />\n			<column id=\'M65-69\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (65 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 70 )) THEN 1 ELSE 0 END) , 0)\" title=\"M65-69\" primary=\"false\" />\n			<column id=\'M70-74\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (70 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 75 )) THEN 1 ELSE 0 END) , 0)\" title=\"M70-74\" primary=\"false\" />\n			<column id=\'M75-79\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (75 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 80 )) THEN 1 ELSE 0 END) , 0)\" title=\"M75-79\" primary=\"false\" />\n			<column id=\'M80-84\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (80 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 85 )) THEN 1 ELSE 0 END) , 0)\" title=\"M80-84\" primary=\"false\" />\n			<column id=\'M85-89\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (85 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 90 )) THEN 1 ELSE 0 END) , 0)\" title=\"M85-89\" primary=\"false\" />\n			<column id=\'M90-94\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (90 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 95 )) THEN 1 ELSE 0 END) , 0)\" title=\"M90-94\" primary=\"false\" />\n			<column id=\'M95-99\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (95 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 100 )) THEN 1 ELSE 0 END) , 0)\" title=\"M95-99\" primary=\"false\" />\n			<column id=\'M100-104\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (100 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 105 )) THEN 1 ELSE 0 END) , 0)\" title=\"M100-104\" primary=\"false\" />\n			<column id=\'M105-109\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (105 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 110 )) THEN 1 ELSE 0 END) , 0)\" title=\"M105-109\" primary=\"false\" />\n			<column id=\'M110-114\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (110 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 115 )) THEN 1 ELSE 0 END) , 0)\" title=\"M110-114\" primary=\"false\" />\n			<column id=\'M115-119\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (115 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 120 )) THEN 1 ELSE 0 END) , 0)\" title=\"M115-119\" primary=\"false\" />\n			<column id=\'M120-124\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (120 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 125 )) THEN 1 ELSE 0 END) , 0)\" title=\"M120-124\" primary=\"false\" />\n			<column id=\'M125+\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'M\' AND (125 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 999 )) THEN 1 ELSE 0 END) , 0)\" title=\"M125+\" primary=\"false\" />\n			\n			<column id=\'F0-4\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (0 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 5 )) THEN 1 ELSE 0 END) , 0)\" title=\"F0-4\" primary=\"false\" />\n			<column id=\'F5-9\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (5 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 10 )) THEN 1 ELSE 0 END) , 0)\" title=\"F5-9\" primary=\"false\" />\n			<column id=\'F10-14\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (10 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 15 )) THEN 1 ELSE 0 END) , 0)\" title=\"F10-14\" primary=\"false\" />\n			<column id=\'F15-20\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (15 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 20 )) THEN 1 ELSE 0 END) , 0)\" title=\"F15-19\" primary=\"false\" />\n			<column id=\'F20-24\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (20 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 25 )) THEN 1 ELSE 0 END) , 0)\" title=\"F20-29\" primary=\"false\" />\n			<column id=\'F25-29\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (25 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 30 )) THEN 1 ELSE 0 END) , 0)\" title=\"F20-29\" primary=\"false\" />\n			<column id=\'F30-34\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (30 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 35 )) THEN 1 ELSE 0 END) , 0)\" title=\"F30-34\" primary=\"false\" />\n			<column id=\'F35-39\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (35 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 40 )) THEN 1 ELSE 0 END) , 0)\" title=\"F35-39\" primary=\"false\" />\n			<column id=\'F40-44\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (40 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 45 )) THEN 1 ELSE 0 END) , 0)\" title=\"F40-44\" primary=\"false\" />\n			<column id=\'F45-49\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (45 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 50 )) THEN 1 ELSE 0 END) , 0)\" title=\"F45-49\" primary=\"false\" />\n			<column id=\'F50-54\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (50 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 55 )) THEN 1 ELSE 0 END) , 0)\" title=\"F50-54\" primary=\"false\" />\n			<column id=\'F55-59\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (55 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 60 )) THEN 1 ELSE 0 END) , 0)\" title=\"F55-59\" primary=\"false\" />\n			<column id=\'F60-64\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (60 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 65 )) THEN 1 ELSE 0 END) , 0)\" title=\"F60-64\" primary=\"false\" />\n			<column id=\'F65-69\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (65 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 70 )) THEN 1 ELSE 0 END) , 0)\" title=\"F65-69\" primary=\"false\" />\n			<column id=\'F70-74\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (70 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 75 )) THEN 1 ELSE 0 END) , 0)\" title=\"F70-74\" primary=\"false\" />\n			<column id=\'F75-79\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (75 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 80 )) THEN 1 ELSE 0 END) , 0)\" title=\"F75-79\" primary=\"false\" />\n			<column id=\'F80-84\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (80 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 85 )) THEN 1 ELSE 0 END) , 0)\" title=\"F80-84\" primary=\"false\" />\n			<column id=\'F85-89\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (85 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 90 )) THEN 1 ELSE 0 END) , 0)\" title=\"F85-89\" primary=\"false\" />\n			<column id=\'F90-94\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (90 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 95 )) THEN 1 ELSE 0 END) , 0)\" title=\"F90-94\" primary=\"false\" />\n			<column id=\'F95-99\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (95 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 100 )) THEN 1 ELSE 0 END) , 0)\" title=\"F95-99\" primary=\"false\" />\n			<column id=\'F100-104\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (100 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 105 )) THEN 1 ELSE 0 END) , 0)\" title=\"F100-104\" primary=\"false\" />\n			<column id=\'F105-109\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (105 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 110 )) THEN 1 ELSE 0 END) , 0)\" title=\"F105-109\" primary=\"false\" />\n			<column id=\'F110-114\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (110 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 115 )) THEN 1 ELSE 0 END) , 0)\" title=\"F110-114\" primary=\"false\" />\n			<column id=\'F115-119\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (115 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 120 )) THEN 1 ELSE 0 END) , 0)\" title=\"F115-119\" primary=\"false\" />\n			<column id=\'F120-124\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (120 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 125 )) THEN 1 ELSE 0 END) , 0)\" title=\"F120-124\" primary=\"false\" />\n			<column id=\'F125+\' name=\"IF( COUNT(d.demographic_no) &gt; 0, SUM( CASE WHEN (d.sex = \'F\' AND (125 &lt;= TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )) AND (TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() ) &lt; 999 )) THEN 1 ELSE 0 END) , 0)\" title=\"F125+\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n    d.*,\n    d.patient_status AS pt_status\nFROM demographic d\nWHERE d.provider_no LIKE \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0', 0, NULL, NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId1,'Aggregated Active Patients Report','General','Patient Population','DoBC CPQI PSP Panel','2017-08-02','# of patients that have been seen in the last 3 years in comparison to # all active patients','\n		  i) # of active patients that have been seen in the last 3 year\n		  ii) # of active patients not seen in the last 3 years\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Aggregated Population</subCategory>\n		<name>Aggregated Active Patients Report</name>\n		<definition># of patients that have been seen in the last 3 years in comparison to # all active patients</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  i) # of active patients that have been seen in the last 3 year\n		  ii) # of active patients not seen in the last 3 years\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.THREE) AS \"Number Active, Seen within 3 years\",\n	SUM(fin.ALL_PATIENTS)-SUM(fin.THREE) AS \"Number Active, Not seen within 3 years\"\nFROM (\n	SELECT\n		IF( DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(cmn.observation_date) ) ,1 ,0 ) AS THREE, \n		IF( TRUE, 1, 0) AS ALL_PATIENTS\n	FROM demographic d\n	LEFT JOIN casemgmt_note cmn\n	ON (  d.demographic_no = cmn.demographic_no AND cmn.signed = 1 AND cmn.provider_no != \'-1\'  )\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n	GROUP BY d.demographic_no HAVING count(d.demographic_no) > -1\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n		        <column id=\"seen3yrs\" name=\"SUM(fin.THREE)\" title=\"Active Seen Within Last 3 Years\" primary=\"false\" />\n		  	<column id=\"allActive\" name=\"SUM(fin.ALL_PATIENTS)\" title=\"Active Patient Total\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n		        <column id=\"seen3yrs\" name=\"SUM(fin.THREE)\" title=\"Active Seen Within Last 3 Years\" primary=\"false\" />\n		  	<column id=\"allActive\" name=\"SUM(fin.ALL_PATIENTS)\" title=\"Active Patient Total\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\nfin.*\nFROM (\n	SELECT\n		IF( DATE_SUB(CURDATE() , INTERVAL 3 YEAR) &lt;= DATE( MAX(cmn.observation_date) ) ,1 ,0 ) AS THREE, \n		IF( TRUE, 1, 0) AS ALL_PATIENTS\n	FROM demographic d\n	LEFT JOIN casemgmt_note cmn\n	ON (  d.demographic_no = cmn.demographic_no AND cmn.signed = 1 AND cmn.provider_no != \'-1\'  )\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n	GROUP BY d.demographic_no HAVING count(d.demographic_no) > -1\n) fin;\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId1,'Aggregated No Assigned Primary','General','Patient Population','DoBC CPQI PSP Panel','2017-08-02','# of active patients without an assigned primary','i)  # of active patients without an assigned primary\n		  ii) # all active patients for all providers\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Aggregated Population</subCategory>\n		<name>Aggregated No Assigned Primary</name>\n		<definition># of active patients without an assigned primary\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  i)  # of active patients without an assigned primary\n		  ii) # all active patients for all providers\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.NO_ASSIGNED_PRIMARY) AS \"Number Active, No Assigned Primary\",\n	SUM(fin.OTHER_PATIENTS) AS \"Number Active, Assigned Primary\"\nFROM (\n	SELECT\n		IF( d.provider_no IS NULL OR d.provider_no = \'\' OR p.provider_no IS NULL ,1 ,0 ) AS NO_ASSIGNED_PRIMARY,\n		IF( d.provider_no IS NOT NULL AND d.provider_no != \'\' AND p.provider_no is NOT NULL,1 ,0 ) AS OTHER_PATIENTS\n	FROM demographic d\n	LEFT JOIN provider p\n	ON d.provider_no = p.provider_no\n	WHERE d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n		        <column id=\"noProvider\" name=\"SUM(fin.NO_ASSIGNED_PRIMARY)\" title=\"Active Without Assigned Primary\" primary=\"false\" />\n		  	<column id=\"allActive\" name=\"SUM(fin.ALLACTIVE)\" title=\"Active Patient Total\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n		        <column id=\"noProvider\" name=\"SUM(fin.NO_ASSIGNED_PRIMARY)\" title=\"Active Without Contact Info\" primary=\"false\" />\n		  	<column id=\"allActive\" name=\"SUM(fin.ALLACTIVE)\" title=\"Active Patient Total\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\nfin.*\nFROM (\n	SELECT\n		IF( d.provider_no IS NULL OR d.provider_no = \'\' OR p.provider_no IS NULL ,1 ,0 ) AS NO_ASSIGNED_PRIMARY,\n		IF( true, 1, 0 ) AS ALLACTIVE\n	FROM demographic d\n	LEFT JOIN provider p\n	ON d.provider_no = p.provider_no\n	WHERE d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId1,'Aggregated Patient Contact','General','Patient Population','DoBC CPQI PSP Panel','2017-08-02','# of active patients with incomplete contact information in comparison to # all active patients\n		','\n		  i)  # of active patients with incomplete contact information\n		  ii) # of active patients with contact information\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>General (Click on the chart to see details)</category>\n		<subCategory>Aggregated Population</subCategory>\n		<name>Aggregated Patient Contact</name>\n		<definition># of active patients with incomplete contact information in comparison to # all active patients\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  i)  # of active patients with incomplete contact information\n		  ii) # of active patients with contact information\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.INCOMPLETE_CONTACT_INFO) AS \"Active, Incomplete Contact Information\",\n	SUM(fin.HAS_CONTACT_INFO) AS \"Active, With Contact Information\"\nFROM (\n	SELECT\n		IF( (LENGTH(phone) &lt; LENGTH(\"###-###-####\") AND LENGTH(phone2) &lt; LENGTH(\"###-###-####\") AND LENGTH(e.value) &lt; LENGTH(\"###-###-####\")) OR (address is NULL OR address=\"\") OR (city is NULL OR city=\"\") ,1 ,0 ) AS INCOMPLETE_CONTACT_INFO,\n		IF( (LENGTH(phone) &lt; LENGTH(\"###-###-####\") AND LENGTH(phone2) &lt; LENGTH(\"###-###-####\") AND LENGTH(e.value) &lt; LENGTH(\"###-###-####\")) OR (address is NULL OR address=\"\") OR (city is NULL OR city=\"\") ,0 ,1 ) AS HAS_CONTACT_INFO\n	FROM demographic d\n	LEFT JOIN demographicExt e ON d.demographic_no=e.demographic_no AND\n	  e.key_val=\'demo_cell\' AND e.date_time=(SELECT MAX(de.date_time) FROM demographicExt de WHERE e.demographic_no=de.demographic_no)\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n		        <column id=\"incompleteContact\" name=\"SUM(fin.INCOMPLETE_CONTACT_INFO)\" title=\"Active, Incomplete Contact Info\" primary=\"false\" />\n		  	<column id=\"allActive\" name=\"SUM(fin.ALLACTIVE)\" title=\"Active Patient Total\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n		        <column id=\"incompleteContact\" name=\"SUM(fin.INCOMPLETE_CONTACT_INFO)\" title=\"Active, Incomplete Contact Info\" primary=\"false\" />\n		  	<column id=\"allActive\" name=\"SUM(fin.ALLACTIVE)\" title=\"Active Patient Total\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\nfin.*\nFROM (\n	SELECT\n		IF( (LENGTH(phone) &lt; LENGTH(\"###-###-####\") AND LENGTH(phone2) &lt; LENGTH(\"###-###-####\") AND LENGTH(e.value) &lt; LENGTH(\"###-###-####\")) OR (address is NULL OR address=\"\") OR (city is NULL OR city=\"\") ,1 ,0 ) AS INCOMPLETE_CONTACT_INFO,\n		IF( true, 1, 0 ) AS ALLACTIVE\n	FROM demographic d\n	LEFT JOIN demographicExt e ON d.demographic_no=e.demographic_no AND e.key_val=\'demo_cell\'\n	  AND e.date_time=(SELECT MAX(de.date_time) FROM demographicExt de WHERE e.demographic_no=de.demographic_no)\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n	) fin\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId1,'Active Patients Excluded from One or More Indicators','Utility','Patient Population','DoBC CPQI PSP Panel','2018-08-01','Active patients that are currently excluded from one or more indicators','\n		  Patients that are excluded together with the indicator from which they have been excluded.\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>Utility</category>\n		<subCategory>Patient Population</subCategory>\n		<name>Active Patients Excluded from One or More Indicators</name>\n		<definition>Active patients that are currently excluded from one or more indicators</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2018-08-21</frameworkVersion>\n		<notes>\n		  Patients that are excluded together with the indicator from which they have been excluded.\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>2017-08-02</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n		  <!-- Indicator SQL Query here -->\nSELECT\n	SUM(fin.CURRENT) AS \"Current Exclusions\",\n	SUM(fin.NOT_CURRENT) AS \"Expired Exclusions\"\nFROM (\n	SELECT\n		IF( DATE_SUB(CURDATE() , INTERVAL 1 YEAR) &lt;= DATE( dext.date_time ) ,1 ,0 ) AS CURRENT, \n		IF( DATE_SUB(CURDATE() , INTERVAL 1 YEAR) &lt;= DATE( dext.date_time ) ,0 ,1 ) AS NOT_CURRENT\n	FROM demographic d\n	LEFT JOIN demographicExt dext\n	ON (  d.demographic_no = dext.demographic_no )\n	WHERE d.provider_no LIKE \'${provider}\'\n	AND dext.provider_no LIKE \'${provider}\'\n	AND d.patient_status LIKE ${pstatus}\n	AND dext.key_val = \"excludeIndicator\"\n) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"DOB (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />	\n			<column id=\"indicatorId\" name=\"value\" title=\"Indicator (Name|Category|SubCategory)\" primary=\"false\" />\n			<column id=\"exclusionStatus\" name=\"IF(DATE_SUB(CURDATE(),INTERVAL 1 YEAR) &lt;= DATE(dext.date_time) ,\'Active\' ,\'Expired\')\" title=\"Exclusion\" primary=\"false\" />\n			<column id=\"dateExcluded\" name=\"dext.date_time\" title=\"Date Excluded\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n                        <column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"DOB (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />	\n			<column id=\"indicatorId\" name=\"value\" title=\"Indicator (Name|Category|SubCategory)\" primary=\"false\" />\n			<column id=\"exclusionStatus\" name=\"IF(DATE_SUB(CURDATE(),INTERVAL 1 YEAR) &lt;= DATE(dext.date_time) ,\'Active\' ,\'Expired\')\" title=\"Exclusion\" primary=\"false\" />\n			<column id=\"dateExcluded\" name=\"dext.date_time\" title=\"Date Excluded\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n    d.*,\n    d.patient_status AS pt_status,\n    dext.date_time as exclusion_date\nFROM demographic d\nLEFT JOIN demographicExt dext\nON (  d.demographic_no = dext.demographic_no )\nWHERE d.provider_no LIKE \'${provider}\'\nAND dext.provider_no like \'${provider}\'\nAND d.patient_status LIKE ${pstatus}\nAND dext.key_val = \"excludeIndicator\"\nORDER BY dext.date_time DESC, d.demographic_no ASC\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
    VALUES (@dashboardId1, 'Patient Status All', 'Prac. Management', 'Patient Status', 'OSCAR EMR', '2022-02-02', '% of patients (Rostered and non-Rostered) in the practice based on their status, including last visit.', '', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n<author>Trinity Healthcare Technologies</author>\n<uid></uid>\n<heading>\n<category>General (Click on the chart to see details)</category>\n<subCategory>Patient Population</subCategory>\n<name>All Patients</name>\n<metricSetName>OntarioMD Patient Status</metricSetName>\n                <metricLabel></metricLabel>\n<definition>% of patients (Rostered and non-Rostered) in the practice based on their status, including last visit.</definition>\n<framework>OSCAR EMR</framework>\n<frameworkVersion>02-14-2018</frameworkVersion>\n<notes>All Patients and Roster Status</notes>\n<graphType>table</graphType>\n</heading>\n<indicatorQuery>\n<version>02-14-2018</version>\n<params>\n<!-- \nUse this parameter in the query as ${provider}\nThis parameter should be used for fetching patient\'s assigned to a MRP.\nie: WHERE demographic.provider_no = ${provider}\n-->\n<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n</params>\n<query>\n<!-- Indicator SQL Query here -->\nSELECT\n\n-- PERCENT OF TOTAL PATIENTS NOTED AS ACTIVE SEEN WITHIN 12 MONTHS (latest visit &lt;= 12 months)\nIF( COUNT(fin.patient) > 0, \nSUM( IF( fin.pt_status = \'AC\' and DATEDIFF(CURDATE(),fin.last_visit) &lt;= 365  , 1, 0) )\n, 0 ) AS \"Active, Seen within 12 months\",\n\n-- PERCENT OF TOTAL PATIENTS NOTED AS ACTIVE SEEN 12-24 MONTHS AGO (latest visit &gt; 12 months and &lt; 24 months)\nIF( COUNT(fin.patient) > 0, \n SUM( IF( fin.pt_status = \'AC\' and DATEDIFF(CURDATE(),fin.last_visit) > 365 and DATEDIFF(CURDATE(),fin.last_visit) &lt;= 730  , 1, 0) )\n, 0 ) AS \"Active, Seen 12-24 months ago\",\n\n-- PERCENT OF TOTAL PATIENTS NOTED AS ACTIVE NOT SEEN WITHIN 24 MONTHS (latest visit &gt; 24 months)\nIF( COUNT(fin.patient) > 0, \nSUM( IF( fin.pt_status = \'AC\' and (DATEDIFF(CURDATE(),fin.last_visit) > 730 OR fin.last_visit IS NULL)  , 1, 0) )\n, 0 ) AS \"Active, not seen in 24 months\",\n\n-- PERCENT OF TOTAL PATIENTS NOTED AS INACTIVE\nIF( COUNT(fin.patient) > 0, \n SUM( IF( fin.pt_status = \'IN\' , 1, 0) )\n, 0 ) AS \"Inactive\",\n\n-- PERCENT OF TOTAL PATIENTS NOTED AS DECEASED\nIF( COUNT(fin.patient) > 0, \n  SUM( IF( fin.pt_status = \'DE\' , 1, 0) )\n, 0 ) AS \"Deceased\",\n\n-- PERCENT OF TOTAL PATIENTS NOTED AS OTHER (not active, not inactive, not deceased, not deleted?)\nIF( COUNT(fin.patient) > 0, \n  SUM( IF( fin.pt_status NOT IN (\'AC\',\'DE\',\'IN\') , 1, 0) )\n, 0 ) AS \"Other Patient Status\"\n\n\nFROM (\nSELECT\nd.demographic_no AS patient,\nd.patient_status AS pt_status,\napp1.appointment_date as last_visit\nFROM demographic d\n\n\n-- Notations for last visit in appointments\nLEFT JOIN ( \n	SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n    FROM appointment a, demographic d\n    WHERE a.demographic_no = d.demographic_no\n    AND d.provider_no = \'${provider}\'\n    AND NOW() >= DATE(a.appointment_date)\n    AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n    AND a.demographic_no > 0\n    GROUP BY a.demographic_no\n) app1 \nON (d.demographic_no = app1.demographic_no)\n\nWHERE d.provider_no = \'${provider}\'\n) fin\n</query>\n</indicatorQuery>\n<drillDownQuery>\n<version>02-14-2018</version>\n<params>\n<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n</params>\n<displayColumns>\n<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Patient DOB (mm-dd-yyyy)\" primary=\"false\" />\n<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Patient Age\" primary=\"false\" />\n                        <column id=\"phonenumber\" name=\"IFNULL( d.phone, \'\')\" title=\"Patient Phone Number\" primary=\"false\" />\n<column id=\"rosterStatus\" name=\"IFNULL( d.roster_status, \'\') \" title=\"Roster Status\" primary=\"false\" />\n<column id=\"rosteredDate\" name=\"IF(d.roster_date IS NOT NULL, DATE_FORMAT( d.roster_date, \'%m-%d-%Y\'), \'\')\" title=\"Rostered Date (mm-dd-yyyy)\" primary=\"false\" />\n<column id=\"lastVisit\" name=\"IF(app1.appointment_date IS NOT NULL, DATE_FORMAT( app1.appointment_date, \'%m-%d-%Y\'),\'\')\" title=\"Date of Last Visit (mm-dd-yyyy)\" primary=\"false\" />\n</displayColumns>\n<exportColumns>\n<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Patient DOB (mm-dd-yyyy)\" primary=\"false\" />\n                        <column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Patient Age\" primary=\"false\" />   \n                        <column id=\"phonenumber\" name=\"IFNULL( d.phone, \'\')\" title=\"Patient Phone Number\" primary=\"false\" />\n                        <column id=\"rosterStatus\" name=\"IFNULL( d.roster_status, \'\') \" title=\"Roster Status\" primary=\"false\" />\n                        <column id=\"rosteredDate\" name=\"IF(d.roster_date IS NOT NULL, DATE_FORMAT( d.roster_date, \'%m-%d-%Y\'), \'\')\" title=\"Rostered Date (mm-dd-yyyy)\" primary=\"false\" />\n<column id=\"lastVisit\" name=\"IF(app1.appointment_date IS NOT NULL, DATE_FORMAT( app1.appointment_date, \'%m-%d-%Y\'),\'\')\" title=\"Date of Last Visit (mm-dd-yyyy)\" primary=\"false\" />\n\n</exportColumns>\n<query>\n<!-- Drilldown SQL Query here -->\n\nSELECT\nd.*,\nd.patient_status AS pt_status\nFROM demographic d\n\n\n-- Notations for last visit in appointments\nLEFT JOIN (\n	SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n    FROM appointment a, demographic d\n    WHERE a.demographic_no = d.demographic_no\n    AND d.provider_no = \'${provider}\'\n    AND NOW() >= DATE(a.appointment_date)\n    AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n    AND a.demographic_no > 0\n    GROUP BY a.demographic_no\n) app1 \nON (d.demographic_no = app1.demographic_no)\n\nWHERE d.provider_no = \'${provider}\'\n\n</query>\n</drillDownQuery>\n<shared>true</shared>\n<sharedMetricSetName>OntarioMD Patient Status</sharedMetricSetName>\n<sharedMetricDataId>Status</sharedMetricDataId>\n<sharedMappings>\n<sharedMapping fromLabel=\"% Active, Seen within 12 months\" toLabel=\"Active, seen this year\"/>\n<sharedMapping fromLabel=\"% Active, Seen 12-24 months ago\" toLabel=\"Active, seen within 1-2 yrs\"/>\n<sharedMapping fromLabel=\"% Active, not seen in 24 months\" toLabel=\"Active, not seen in 2+ yrs\"/>\n<sharedMapping fromLabel=\"% Inactive\" toLabel=\"Inactive\"/>\n<sharedMapping fromLabel=\"% Deceased\" toLabel=\"Deceased\"/>\n<sharedMapping fromLabel=\"% Other Patient Status\" toLabel=\"Other\"/>\n</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Patient Status');


        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId2,'Consider Alcohol Dependence Syndrome','CDM','Alcohol Dependence Syndrome','DoBC CPQI PSP Panel','2017-08-02','Patients with alcohol dependence syndrome dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Alcohol Dependence Syndrome dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 66590003 OR starting with 303\nAND with >=2 Bills with the ICD9 diagnosis code starting with 303 in the last 3 years\"\n		  ii) Alcohol Dependence Syndrome dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 66590003 OR starting with 303\nAND with >=2 Visit Encounters with Snomed diagnosis code 66590003 or the ICD9 diagnosis code starting with 303 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Alcohol Dependence Syndrome</subCategory>\n		<name>Consider Alcohol Dependence Syndrome</name>\n		<definition>\n			Patients with alcohol dependence syndrome dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Alcohol Dependence Syndrome dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 66590003 OR starting with 303\nAND with >=2 Bills with the ICD9 diagnosis code starting with 303 in the last 3 years\"\n		  ii) Alcohol Dependence Syndrome dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 66590003 OR starting with 303\nAND with >=2 Visit Encounters with Snomed diagnosis code 66590003 or the ICD9 diagnosis code starting with 303 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"303\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"66590003\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"303\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 303 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 303/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Alcohol Dependence Syndrome dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Alcohol Dependence Syndrome dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'303\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'66590003\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 303 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'303\') OR LEFT(b.dx_code2, 3) IN (\'303\') OR LEFT(b.dx_code3, 3) IN (\'303\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'303\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'66590003\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"303\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"66590003\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"303\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 303 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 303/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"303\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'303\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'66590003\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 303 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'303\') OR LEFT(b.dx_code2, 3) IN (\'303\') OR LEFT(b.dx_code3, 3) IN (\'303\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'303\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'66590003\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId2,'Alcohol Dependence Syndrome Prevalence','CDM','Alcohol Dependence Syndrome','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Alcohol Dependence Syndrome.','\ni) Alchohol dependence patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 66590003 OR starting with 303\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 66590003 OR starting with 303\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Alcohol Dependence Syndrome</subCategory>\n		<name>Alcohol Dependence Syndrome Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Alcohol Dependence Syndrome.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Alchohol dependence patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 66590003 OR starting with 303\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 66590003 OR starting with 303\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"303\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"66590003\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT ALCOHOL DEPENDENCE SYNDROME\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Alcohol Dependence Syndrome\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT ALCOHOL DEPENDENCE SYNDROME\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Alcohol Dependence Syndrome\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'303\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'66590003\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"303\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"66590003\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'303\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'66590003\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId2,'Consider Chronic Pain','CDM','Chronic Pain','DoBC CPQI PSP Panel','2017-08-02','Patients with chronic pain dx in 2+ bills or 2+ visit encounters within last 3 years or on Opioid medication\n		','\n		  Created for Doctors of BC\n		  i) Chronic Pain dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 338.4, 338.2, 3384 OR 3382 in the last 3 years\"\n		  ii) Chronic Pain dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\nAND with >= 2 Visit Encounters with Snomed diagnosis code 82423001, 373621006 or the ICD9 diagnosis code starting with 338.4, 338.2, 3384 OR 3382 in the last 3 years\"\n		  iii) Opioid medication: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\nAND with >= 1 Active Current Medication with ATC Code/Class of N02A\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Pain</subCategory>\n		<name>Consider Chronic Pain</name>\n		<definition>\n			Patients with chronic pain dx in 2+ bills or 2+ visit encounters within last 3 years or on Opioid medication\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Chronic Pain dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 338.4, 338.2, 3384 OR 3382 in the last 3 years\"\n		  ii) Chronic Pain dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\nAND with >= 2 Visit Encounters with Snomed diagnosis code 82423001, 373621006 or the ICD9 diagnosis code starting with 338.4, 338.2, 3384 OR 3382 in the last 3 years\"\n		  iii) Opioid medication: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\nAND with >= 1 Active Current Medication with ATC Code/Class of N02A\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"338.4,338.2\" />\n			<parameter id=\"dxcodesICD2\" name=\"Dx Codes (ICD)\" value=\"3384,3382\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"82423001,373621006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"338.4,338.2\" />\n			<parameter id=\"billingCode2\" name=\"ICD9 Billing Code\" value=\"3384,3382\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 338.4,338.2 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 338.4,338.2/ICD9\" value=\"2\" />\n			<parameter id=\"drug\" name=\"ATC Code/Class\" value=\"\'N02A%\'\" />\n			<parameter id=\"numOfMeds\" name=\"Opioid Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Chronic Pain dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Chronic Pain dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.medcount &gt;= ${numOfMeds} ) THEN 1 ELSE 0 END ) , 0) AS \"Number with Opioid Meds &gt;= ${numOfMeds}\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    MEDS.numOfMeds AS medcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code,5) IN ${dxcodesICD} AND coding_system = ${dxcodesSysICD}) OR\n      (LEFT(dxresearch_code,4) IN ${dxcodesICD2} AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN ${dxcodesSnoMed} AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 338.4,338.2 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE LEFT(b.dx_code1,5) IN ${billingCode} OR LEFT(b.dx_code2,5) IN ${billingCode} OR LEFT(b.dx_code3,5) IN ${billingCode}\n    OR LEFT(b.dx_code1,4) IN ${billingCode2} OR LEFT(b.dx_code2,4) IN ${billingCode2} OR LEFT(b.dx_code3,4) IN ${billingCode2}\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type like ${dxcodesSysICD} and LEFT(i.code,5) IN ${dxcodesICD}) OR\n	(i.type like ${dxcodesSysICD} and LEFT(i.code,4) IN ${dxcodesICD2}) OR\n	(i.type like ${dxcodesSysSnoMed} and i.code IN ${dxcodesSnoMed})\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Opioid medications\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC LIKE ${drug}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"338.4,338.2\" />\n			<parameter id=\"dxcodesICD2\" name=\"Dx Codes (ICD)\" value=\"3384,3382\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"82423001,373621006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"338.4,338.2\" />\n			<parameter id=\"billingCode2\" name=\"ICD9 Billing Code\" value=\"3384,3382\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 338.4,338.2 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 338.4,338.2/ICD9\" value=\"2\" />\n			<parameter id=\"drug\" name=\"ATC Code/Class\" value=\"\'N02A%\'\" />\n			<parameter id=\"numOfMeds\" name=\"Opioid Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'NA\')\" title=\"Opioid Medications\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'NA\')\" title=\"Opioid Medications\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"338.2\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code,5) IN ${dxcodesICD} AND coding_system = ${dxcodesSysICD}) OR\n      (LEFT(dxresearch_code,4) IN ${dxcodesICD2} AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN ${dxcodesSnoMed} AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 338.4,338.2 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE LEFT(b.dx_code1,5) IN ${billingCode} OR LEFT(b.dx_code2,5) IN ${billingCode} OR LEFT(b.dx_code3,5) IN ${billingCode}\n    OR LEFT(b.dx_code1,4) IN ${billingCode2} OR LEFT(b.dx_code2,4) IN ${billingCode2} OR LEFT(b.dx_code3,4) IN ${billingCode2}\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code,5) IN ${dxcodesICD}) OR\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code,4) IN ${dxcodesICD2}) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN ${dxcodesSnoMed})\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Opioid medications\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC LIKE ${drug}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR (MEDS.numOfMeds IS NOT NULL AND MEDS.numOfMeds &gt;= ${numOfMeds})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId2,'Chronic Pain Prevalence','CDM','Chronic Pain','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Chronic Pain.','\ni) Pain patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Pain</subCategory>\n		<name>Chronic Pain Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Chronic Pain.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Pain patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 82423001, 373621006 OR starting with 338.4, 338.2, 3384, 3382\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"338.4,338.2,3384,3382\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"82423001,373621006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT CHRONIC PAIN\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Chronic Pain\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT CHRONIC PAIN\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Chronic Pain\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 5) IN (\'338.4\', \'338.2\') AND coding_system = ${dxcodesSysICD}) OR\n   (LEFT(dxresearch_code, 4) IN (\'3384\', \'3382\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'82423001\', \'373621006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"338.4,338.2,3384,3382\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"82423001,373621006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 5) IN (\'338.4\', \'338.2\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (LEFT(dxr.dxresearch_code, 4) IN (\'3384\', \'3382\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'82423001\', \'373621006\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId2,'Consider Drug Dependence Syndrome','CDM','Drug Dependence Syndrome','DoBC CPQI PSP Panel','2017-08-02','Patients with drug dependence syndrome dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Drug Dependence Syndrome dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 191816009 OR starting with 304\nAND with >=2 Bills with the ICD9 diagnosis code starting with 304 in the last 3 years\"\n		  ii) Drug Dependence Syndrome dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 191816009 OR starting with 304\nAND with >=2 Visit Encounters with Snomed diagnosis code 191816009 or the ICD9 diagnosis code starting with 304 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Drug Dependence Syndrome</subCategory>\n		<name>Consider Drug Dependence Syndrome</name>\n		<definition>\n			Patients with drug dependence syndrome dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Drug Dependence Syndrome dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 191816009 OR starting with 304\nAND with >=2 Bills with the ICD9 diagnosis code starting with 304 in the last 3 years\"\n		  ii) Drug Dependence Syndrome dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 191816009 OR starting with 304\nAND with >=2 Visit Encounters with Snomed diagnosis code 191816009 or the ICD9 diagnosis code starting with 304 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"304\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"191816009\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"304\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 304 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 304/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Drug Dependence Syndrome dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Drug Dependence Syndrome dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'304\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'191816009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 304 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'304\') OR LEFT(b.dx_code2, 3) IN (\'304\') OR LEFT(b.dx_code3, 3) IN (\'304\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'304\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'191816009\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"304\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"191816009\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"304\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 304 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 304/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"304\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'304\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'191816009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 304 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'304\') OR LEFT(b.dx_code2, 3) IN (\'304\') OR LEFT(b.dx_code3, 3) IN (\'304\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'304\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'191816009\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId2,'Drug Dependence Syndrome Prevalence','CDM','Drug Dependence Syndrome','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Drug Dependence Syndrome.','\ni) Drug dependence patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 191816009 OR starting with 304\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 191816009 OR starting with 304\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Drug Dependence Syndrome</subCategory>\n		<name>Drug Dependence Syndrome Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Drug Dependence Syndrome.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Drug dependence patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 191816009 OR starting with 304\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 191816009 OR starting with 304\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"304\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"191816009\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT DRUG DEPENDENCE SYNDROME\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Drug Dependence Syndrome\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT DRUG DEPENDENCE SYNDROME\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Drug Dependence Syndrome\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'304\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'191816009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"304\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"191816009\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'304\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'191816009\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);

    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId2, 'Smoking Status recorded', 'Preventive Health Care', 'Smoking Status', 'OSCAR EMR', '2022-02-02', '% of patients >= 12 years old for whom smoking status is recorded', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Vulnerable Population (Click on the chart to see details)</category>\n		<subCategory>Smoking Status</subCategory>\n		<name>Smoking Status recorded</name>\n		<metricSetName>Smoking Status</metricSetName>\n                <metricLabel>Smokers</metricLabel>\n\n		<definition>% of patients >= 12 years old for whom smoking status is recorded</definition>\n		<framework>Based on and adapted from AFHTO D2D 3.0 Indicators: Data Dictionary version 4 (Nov 2015)</framework>\n		<frameworkVersion>02-15-2018</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>02-15-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			SmkC : stop smoking in which year\n			SmkS: start smoking in which year\n			SMK: never smoke , the dataField in measurement is "Never",  "Former", "Current"\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n<!--\n			<parameter id="smokingstart" name="Start Smoking in Measurement" value="\'SmkS\'" />		\n			<parameter id="smokingstop" name="Stop Smoking in Measurement" value="\'SmkC\'" />		\n			<parameter id="smokingstatus" name="Smoking Status in Measurement" value="\'SMK\'" />		\n			<parameter id="smokingperday" name="Smoking packs per day in Measurement" value="\'SmkD\'" />		\n			<parameter id="smoking" name="Smoking in Measurement" value="\'Smk%\'" />		\n-->\n			<parameter id="smokingstatus" name="Smoking Status in Intake (Current, Former, Never)" value="\'SMK\'" />\n			<parameter id="smokingperday" name="Smoking packs per day in intake" value="\'SmkD\'" />		\n			<parameter id="smokingstatus_cdm" name="Smoking Status in CDM indicator (yes/no)" value="\'SKST\'" />\n			<parameter id="smokingperday_cdm" name="Smoking packs per day in CDM indicator" value="\'POSK\'" />		\n			<parameter id="dxcode" name="Disease Registry Code" value="\'3051\'" />		\n		</params>\n\n		<range>\n			<lowerLimit id="age" label="Lowest Age" name="Age" value="12" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT\n\n				IF( COUNT(fin.patient) > 0, \n                                         SUM( IF( fin.dx IS NULL AND (fin.status = \'Never\' OR fin.status = \'Former\' OR fin.status = \'No\'), 1, 0) )\n				, 0 ) AS "Non-smokers",\n			\n				IF( COUNT(fin.patient) > 0, \n					SUM( IF( fin.status = \'Current\' OR fin.status = \'Yes\' OR fin.dx > 0, 1, 0) ) \n				, 0 ) AS "Smokers",\n\n				IF( COUNT(fin.patient) > 0,\n                                        SUM( IF( fin.status IS NULL AND fin.dx IS NULL, 1, 0) )     \n                                , 0 ) AS "Not documented"\n			\n			FROM (\n				SELECT\n					d.demographic_no AS patient,\n					dxr.dxresearch_no as dx,\n					SM.dataField as status\n\n				FROM demographic d\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no\n                                        FROM dxresearch\n                                        WHERE demographic_no>0\n                                        AND status = \'A\'\n                                        AND dxresearch_code = ${dxcode}\n					AND coding_system = \'icd9\'\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr \n                                ON d.demographic_no = dxr.demographic_no\n	\n				--Never smoking\n				LEFT JOIN (\n                                        SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n						SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n					ON m1.dateObserved = m2.dateObserved\n	                                AND m1.demographicNo = m2.demographicNo\n					AND ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n					ORDER BY m1.id DESC\n                                ) SM \n                                ON (d.demographic_no = SM.demographicNo)\n\n\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) >= ${lowerLimit.age} \n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>02-15-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="smokingstatus" name="Smoking Status in Intake (Current, Former, Never)" value="\'SMK\'" />\n			<parameter id="smokingperday" name="Smoking packs per day in intake" value="\'SmkD\'" />		\n			<parameter id="smokingstatus_cdm" name="Smoking Status in CDM indicator (yes/no)" value="\'SKST\'" />\n			<parameter id="smokingperday_cdm" name="Smoking packs per day in CDM indicator" value="\'POSK\'" />		\n<!--\n			<parameter id="smokingstart" name="Start Smoking in Measurement" value="\'SmkS\'" />		\n			<parameter id="smokingstop" name="Stop Smoking in Measurement" value="\'SmkC\'" />		\n			<parameter id="smokingstatus" name="Smoking Status in Measurement" value="\'SMK\'" />		\n			<parameter id="smokingperday" name="Smoking packs per day in Measurement" value="\'SmkD\'" />		\n			<parameter id="smoking" name="Smoking in Measurement" value="\'Smk%\'" />		\n-->\n			<parameter id="dxcode" name="Disease Registry Code" value="\'3051\'" />		\n\n		</params>\n\n		<range>\n			<lowerLimit id="age" label="Lowest Age" name="Age" value="12" />\n		</range>\n\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />	\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="dxdate" name="IFNULL( DATE_FORMAT(dxr.start_date, \'%m-%d-%Y\' ), \'\')" title="Last Date of Dx Code 3015 (mm-dd-yyyy)" primary="false" />\n<!--\n                        <column id="lastsmokingstatus" name="IFNULL( SM.dataField, \'\' )" title="Last Intake Value of Do You Smoke Cigarettes" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SM.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Last Intake Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastsmokingperday" name="IFNULL( SMD.dataField, \'\' )" title="Last Intake Value of Packs of Cigarettes Smoked per Day" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SMD.dateEntered, \'%m-%d-%Y\' ), \'\')" title="Last Intake Date (mm-dd-yyyy)" primary="false" />\n-->\n                        <column id="lastsmokingstatus" name="IFNULL( SM.dataField, \'\' )" title="Most Recently Recorded Value of SMK or SKST" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SM.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Most Recently Recorded Value of SMK or SKST (mm-dd-yyyy)" primary="false" />\n\n		</displayColumns>\n\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />	\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="dxdate" name="IFNULL( DATE_FORMAT(dxr.start_date, \'%m-%d-%Y\' ), \'\')" title="Last Date of Dx Code 3015 (mm-dd-yyyy)" primary="false" />\n<!--\n                        <column id="lastsmokingstatus" name="IFNULL( SM.dataField, \'\' )" title="Last Intake Value of Do You Smoke Cigarettes" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SM.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Last Intake Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastsmokingperday" name="IFNULL( SMD.dataField, \'\' )" title="Last Intake Value of Packs of Cigarettes Smoked per Day" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SMD.dateEntered, \'%m-%d-%Y\' ), \'\')" title="Last Intake Date (mm-dd-yyyy)" primary="false" />\n-->\n                        <column id="lastsmokingstatus" name="IFNULL( SM.dataField, \'\' )" title="Most Recently Recorded Value of SMK or SKST" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SM.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Most Recently Recorded Value of SMK or SKST (mm-dd-yyyy)" primary="false" />\n\n		</exportColumns>\n\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT\n			*\n			FROM demographic d\n		\n\n			 LEFT JOIN (\n                                SELECT dxresearch_no, demographic_no, max(start_date) as start_date\n                                        FROM dxresearch\n                                        WHERE demographic_no>0\n					AND status = \'A\'\n                                        AND dxresearch_code = ${dxcode}\n					AND coding_system = \'icd9\'\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n                        ) dxr\n                        ON d.demographic_no = dxr.demographic_no\n\n                        --Never smoking\n			LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n                                ORDER BY m1.id DESC\n                        ) SM\n                        ON (d.demographic_no = SM.demographicNo)\n\n			--Smoking packs per day\n--			 LEFT JOIN (\n --                               SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateEntered\n  --                              FROM measurements m1\n   --                             INNER JOIN (\n    --                                    SELECT MAX(id) AS id\n     --                                   FROM measurements\n      --                                  WHERE ( type = ${smokingperday} OR type = ${smokingperday_cdm} )\n       --                                 AND demographicNo > 0\n        --                                GROUP BY demographicNo\n         --                       ) m2\n          --                      ON (m1.id = m2.id)\n           --             ) SMD\n            --            ON (d.demographic_no = SMD.demographicNo)\n	\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n                        AND ( SM.dataField = \'Current\' OR SM.dataField = \'Yes\' OR dxr.dxresearch_no > 0 )\n\n			AND ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) >= ${lowerLimit.age}	\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n        <sharedMetricSetName>OntarioMD Smoking Status</sharedMetricSetName>\n        <sharedMetricDataId>Status</sharedMetricDataId>\n        <sharedMappings>\n                <sharedMapping fromLabel="% Non-smokers" toLabel="Non-smokers"/>\n                <sharedMapping fromLabel="% Smokers" toLabel="Smokers"/>\n                <sharedMapping fromLabel="% Not documented" toLabel="Not documented"/>\n        </sharedMappings>\n\n</indicatorTemplateXML>\n', b'1', b'0', 0, 'Smokers', 'OntarioMD Smoking Status'),
            (@dashboardId2, 'Calculated BMI', 'Vulnerable Population', 'Obesity', 'OSCAR EMR', '2022-02-02', 'Providers population, age 18 and older, who are currently overweight or obese.', 'All Active Patients', '<?xml version="1.0" encoding="UTF-8"?>\r\n<indicatorTemplateXML>\r\n	<author>PHC</author>\r\n	<uid></uid>\r\n	<heading>\r\n		<category>Vulnerable Population (Click on the chart to see details)</category>\r\n		<subCategory>Obesity</subCategory>\r\n		<name>Calculated BMI</name>\r\n		<metricSetName>Obesity Screening</metricSetName>\r\n		<metricLabel>Obese Class 3</metricLabel>\r\n		<definition>Providers population, age 18 and older, who are currently overweight or obese.</definition>\r\n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\r\n		<frameworkVersion>01-30-2018</frameworkVersion>\r\n		<notes>All Active Patients</notes>\r\n		<graphType>bar</graphType>\r\n	</heading>\r\n	<indicatorQuery>\r\n		<version>03-30-2021</version>\r\n		<params>\r\n			<!-- \r\n				Required parameter provider. Value options are: \r\n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \r\n					"all" ie: value="all" including null.\r\n					"loggedInProvider" ie:\r\n				Default is "loggedInProvider"\r\n				Use this parameter in the query as ${provider}\r\n				This parameter should be used for fetching patient\'s assigned to a MRP.\r\n				ie: WHERE demographic.provider_no = ${provider}\r\n			-->\r\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\r\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\r\n			<parameter id="bmi" name="BMI" value="\'BMI\'" />\r\n			<parameter id="height" name="Height" value="\'HT\'" />		\r\n			<parameter id="weight" name="Weight" value="\'WT\'" />\r\n		</params>\r\n		<range>\r\n\r\n			<lowerLimit id="age" label="Min Age" name="Age" value="18" />\r\n			\r\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			\r\n			<lowerLimit id="date" label="Pregnancy Episode Date" name="Date36" value="DATE_SUB( NOW(), INTERVAL 9 MONTH )" />\r\n			\r\n			<upperLimit id="height" label="Max Height (cm)" name="Height" value="210.8" />\r\n			<lowerLimit id="height" label="Min Height (cm)" name="Height" value="91.4" />\r\n			\r\n			<upperLimit id="bmi" label="Obese" name="Obese" value="30" />\r\n			<lowerLimit id="bmi" label="Underweight" name="Underweight" value="18.5" />\r\n			\r\n			<upperLimit id="ideal" label="BMI Ideal Max" name="Ideal" value="25" />\r\n			<lowerLimit id="ideal" label="BMI Ideal Min" name="Ideal" value="18.5" />\r\n			\r\n			<upperLimit id="overweight" label="Over Weight Max" name="Overweight" value="30" />\r\n			<lowerLimit id="overweight" label="Over Weight Min" name="Overweight" value="25" />\r\n			\r\n			<upperLimit id="obeseclass1" label="Obese Class 1" name="Obeseclass1" value="35" />\r\n			<lowerLimit id="obeseclass1" label="Obese Class 1" name="Obeseclass1" value="30" />\r\n\r\n			<upperLimit id="obeseclass2" label="Obese Class 2" name="Obeseclass2" value="40" />\r\n			<lowerLimit id="obeseclass2" label="Obese Class 2" name="Obeseclass2" value="35" />\r\n			\r\n			<lowerLimit id="obeseclass3" label="Obese Class 3" name="Obeseclass3" value="40" />\r\n		</range>\r\n		<query>\r\n			<!-- Indicator SQL Query here -->\r\n			\r\n			SELECT \r\n	\r\n				IF( COUNT(fin.patient) > 0, \r\n						 SUM( IF( fin.bmi >= ${lowerLimit.obeseclass1} AND fin.bmi &lt; ${upperLimit.obeseclass1}, 1, 0 ) ) \r\n				,0 ) AS \'Obese Class 1\',\r\n				\r\n				IF( COUNT(fin.patient) > 0, \r\n						 SUM( IF( fin.bmi >= ${lowerLimit.obeseclass2} AND fin.bmi &lt; ${upperLimit.obeseclass2}, 1, 0 ) ) \r\n				,0 ) AS \'Obese Class 2\',\r\n				\r\n				IF( COUNT(fin.patient) > 0, \r\n						 SUM( IF( fin.bmi >= ${lowerLimit.obeseclass3}, 1, 0 ) ) \r\n				,0 ) AS \'Obese Class 3\',\r\n				\r\n				IF( COUNT(fin.patient) > 0, \r\n						 SUM( IF( fin.bmi &lt; ${lowerLimit.bmi} AND fin.bmi > 0, 1, 0 ) ) \r\n				,0 ) AS \'Under Weight\',\r\n			\r\n				IF( COUNT(fin.patient) > 0, \r\n						SUM( IF( fin.bmi >= ${lowerLimit.ideal} AND fin.bmi &lt; ${upperLimit.ideal}, 1, 0 ) )\r\n				,0 ) AS \'Ideal Weight\',\r\n			\r\n				IF( COUNT(fin.patient) > 0, \r\n						SUM( IF( fin.bmi >= ${lowerLimit.overweight} AND fin.bmi &lt; ${upperLimit.overweight}, 1, 0 ) )\r\n				,0 ) AS \'Over Weight\',\r\n			\r\n			\r\n				IF( COUNT(fin.patient) > 0, \r\n						SUM( IF( fin.bmi = 0, 1, 0 ) ) \r\n				,0 ) AS \'BMI Not Recorded\'\r\n			\r\n			FROM (\r\n			\r\n				SELECT \r\n			\r\n					d.demographic_no AS patient,\r\n					IFNULL( BMI.dataField, 0) AS bmi\r\n			\r\n				FROM demographic d \r\n			\r\n		\r\n				-- BMI Screening\r\n				-- Look for BMI index of 30 or more\r\n				LEFT JOIN ( \r\n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\r\n                                        FROM measurements m1\r\n                                        RIGHT JOIN (\r\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\r\n                                                FROM measurements\r\n                                                WHERE type = ${bmi}\r\n                                                AND demographicNo > 0\r\n                                                GROUP BY demographicNo\r\n                                        ) m2\r\n					ON m1.dateObserved = m2.dateObserved\r\n                                	AND m1.demographicNo = m2.demographicNo\r\n					AND m1.type = ${bmi}\r\n                                	ORDER BY m1.id DESC\r\n\r\n				) BMI \r\n				ON (d.demographic_no = BMI.demographicNo)\r\n			\r\n				-- get the heights so that they can be filtered out.\r\n				LEFT JOIN ( \r\n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\r\n                                        FROM measurements m1\r\n                                        RIGHT JOIN (\r\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\r\n                                                FROM measurements\r\n                                                WHERE type = ${height}\r\n                                                AND demographicNo > 0\r\n                                                GROUP BY demographicNo\r\n                                        ) m2\r\n					ON m1.dateObserved = m2.dateObserved\r\n                                        AND m1.demographicNo = m2.demographicNo\r\n					AND m1.type = ${height}\r\n                                        ORDER BY m1.id DESC\r\n				) HT \r\n				ON (d.demographic_no = HT.demographicNo)\r\n				\r\n				-- get the weights so that they can be filtered out.\r\n				LEFT JOIN ( \r\n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\r\n                                        FROM measurements m1\r\n                                        RIGHT JOIN (\r\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\r\n                                                FROM measurements\r\n                                                WHERE type = ${weight}\r\n                                                AND demographicNo > 0\r\n                                                GROUP BY demographicNo\r\n                                        ) m2\r\n					ON m1.dateObserved = m2.dateObserved\r\n                                        AND m1.demographicNo = m2.demographicNo\r\n					AND m1.type = ${weight}\r\n                                        ORDER BY m1.id DESC\r\n\r\n				) WT \r\n				ON (d.demographic_no = WT.demographicNo)\r\n			\r\n	\r\n				-- exclude any patient that is pregnant (requires episodes)\r\n				LEFT JOIN (\r\n					SELECT demographicNo, `status`, startDate\r\n					FROM Episode\r\n					WHERE DATE(startDate) > ${lowerLimit.date}\r\n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\r\n				) PREG\r\n				ON(PREG.demographicNo = d.demographic_no)\r\n			\r\n				WHERE d.patient_status = ${pstatus} \r\n				AND provider_no = \'${provider}\'\r\n				AND d.demographic_no > 0 \r\n				\r\n				AND IFNULL( PREG.`status`, -1) NOT LIKE \'Current\' \r\n				AND IFNULL( HT.dataField, ${lowerLimit.height}) BETWEEN ${lowerLimit.height} AND ${upperLimit.height}\r\n	\r\n				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \r\n					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\r\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\r\n			) fin\r\n		</query>\r\n	</indicatorQuery>\r\n	<drillDownQuery>\r\n		<version>03-30-2021</version>\r\n		<params>\r\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\r\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\r\n			<parameter id="bmi" name="BMI" value="\'BMI\'" />\r\n			<parameter id="height" name="Height" value="\'HT\'" />\r\n			<parameter id="weight" name="Weight" value="\'WT\'" />\r\n			<parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\r\n			<parameter id="excludedPatient" name="Excluded Patient" value="excludedPatient" />\r\n		</params>\r\n		<range>\r\n			<lowerLimit id="age" label="Min Age" name="Age" value="18" />\r\n			\r\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			\r\n			<lowerLimit id="date" label="Pregnancy Episode Date" name="Date36" value="DATE_SUB( NOW(), INTERVAL 9 MONTH )" />\r\n			\r\n			<upperLimit id="height" label="Max Height (cm)" name="Height" value="210.8" />\r\n			<lowerLimit id="height" label="Min Height (cm)" name="Height" value="91.4" />\r\n\r\n			<upperLimit id="bmi" label="Obese" name="Obese" value="30" />\r\n			<lowerLimit id="bmi" label="Underweight" name="Underweight" value="18.5" />\r\n			\r\n			<upperLimit id="ideal" label="BMI Ideal Max" name="Ideal" value="25" />\r\n			<lowerLimit id="ideal" label="BMI Ideal Min" name="Ideal" value="18.5" />\r\n			\r\n			<upperLimit id="overweight" label="Over Weight Max" name="Overweight" value="29.9" />\r\n			<lowerLimit id="overweight" label="Over Weight Min" name="Overweight" value="25" />\r\n			\r\n			<upperLimit id="obeseclass1" label="Obese Class 1" name="Obeseclass1" value="35" />\r\n			<lowerLimit id="obeseclass1" label="Obese Class 1" name="Obeseclass1" value="30" />\r\n\r\n			<upperLimit id="obeseclass2" label="Obese Class 2" name="Obeseclass2" value="40" />\r\n			<lowerLimit id="obeseclass2" label="Obese Class 2" name="Obeseclass2" value="35" />\r\n			\r\n			<lowerLimit id="obeseclass3" label="Obese Class 3" name="Obeseclass3" value="40" />\r\n		</range>\r\n		<displayColumns>\r\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\r\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\r\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\r\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\r\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\r\n			<column id="height" name="IFNULL(HT.dataField, \'\')" title="Height" primary="false" />	\r\n			<column id="weight" name="IFNULL(WT.dataField, \'\')" title="Weight" primary="false" />				\r\n			<column id="bmi" name="IFNULL( BMI.dataField, \'\')" title="BMI" primary="false" />\r\n			<column id="bmiDate" name="IFNULL( DATE_FORMAT( BMI.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Last BMI (mm-dd-yyyy)" primary="false" />\r\n			<column id="wtDate" name="IFNULL( DATE_FORMAT( WT.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Last WT (mm-dd-yyyy)" primary="false" />\r\n			<column id="calcBMI" name="IFNULL(IF(HT.dataField>0,ROUND(10000*WT.dataField/(HT.dataField*HT.dataField),2),\'\'),\'\')" title="Calculated BMI from last WT" primary="false" />\r\n\r\n		</displayColumns>\r\n		<exportColumns>\r\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\r\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\r\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\r\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\r\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\r\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\r\n                        <column id="height" name="IFNULL(HT.dataField, \'\')" title="Height" primary="false" />\r\n                        <column id="weight" name="IFNULL(WT.dataField, \'\')" title="Weight" primary="false" />\r\n                        <column id="bmi" name="IFNULL( BMI.dataField, \'\')" title="BMI" primary="false" />\r\n			<column id="wtDate" name="IFNULL( DATE_FORMAT( WT.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Last WT (mm-dd-yyyy)" primary="false" />\r\n			<column id="calcBMI" name="IFNULL(IF(HT.dataField>0,ROUND(10000*WT.dataField/(HT.dataField*HT.dataField),2),\'\'),\'\')" title="Calculated BMI from last WT" primary="false" />\r\n		</exportColumns>\r\n		<drillDownActions>\r\n			<action id="tickler" name="Tickler"/>\r\n			<action id="patientStatusUpdate" name="Set Patient Inactive"/>\r\n			<action id="dxUpdate" name="Disease Registry Update (MORBID OBESITY)" value="27801"/>\r\n			<action id="demoExcl" name="Patient Exclusion"/>\r\n		</drillDownActions>\r\n		<query>\r\n			<!-- Drilldown SQL Query here -->\r\n			SELECT \r\n			*\r\n			FROM demographic d \r\n	\r\n				-- BMI Screening\r\n				-- Look for BMI index of 30 or more\r\n				LEFT JOIN ( \r\n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\r\n                                        FROM measurements m1\r\n                                        RIGHT JOIN (\r\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\r\n                                                FROM measurements\r\n                                                WHERE type = ${bmi}\r\n                                                AND demographicNo > 0\r\n                                                GROUP BY demographicNo\r\n                                        ) m2\r\n					ON m1.dateObserved = m2.dateObserved\r\n                                	AND m1.demographicNo = m2.demographicNo\r\n					AND m1.type = ${bmi}\r\n                                	ORDER BY m1.id DESC\r\n\r\n				) BMI \r\n				ON (d.demographic_no = BMI.demographicNo)\r\n			\r\n				-- get the heights so that they can be filtered out.\r\n				LEFT JOIN ( \r\n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\r\n                                        FROM measurements m1\r\n                                        RIGHT JOIN (\r\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\r\n                                                FROM measurements\r\n                                                WHERE type = ${height}\r\n                                                AND demographicNo > 0\r\n                                                GROUP BY demographicNo\r\n                                        ) m2\r\n					ON m1.dateObserved = m2.dateObserved\r\n                                        AND m1.demographicNo = m2.demographicNo\r\n					AND m1.type = ${height}\r\n                                        ORDER BY m1.id DESC\r\n				) HT \r\n				ON (d.demographic_no = HT.demographicNo)\r\n				\r\n				-- get the weights so that they can be filtered out.\r\n				LEFT JOIN ( \r\n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\r\n                                        FROM measurements m1\r\n                                        RIGHT JOIN (\r\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\r\n                                                FROM measurements\r\n                                                WHERE type = ${weight}\r\n                                                AND demographicNo > 0\r\n                                                GROUP BY demographicNo\r\n                                        ) m2\r\n					ON m1.dateObserved = m2.dateObserved\r\n                                        AND m1.demographicNo = m2.demographicNo\r\n					AND m1.type = ${weight}\r\n                                        ORDER BY m1.id DESC\r\n\r\n				) WT \r\n				ON (d.demographic_no = WT.demographicNo)\r\n			\r\n	\r\n		\r\n			-- exclude any patient that is pregnant\r\n			LEFT JOIN (\r\n				SELECT demographicNo, `status`, startDate\r\n				FROM Episode\r\n				WHERE DATE(startDate) > ${lowerLimit.date}\r\n				GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\r\n			) PREG\r\n			ON(PREG.demographicNo = d.demographic_no)\r\n		\r\n			WHERE d.patient_status = ${pstatus} \r\n			AND provider_no = \'${provider}\'\r\n			AND d.demographic_no > 0 \r\n			AND IFNULL( PREG.`status`, -1) NOT LIKE \'Current\'\r\n			AND IFNULL( HT.dataField, ${lowerLimit.height}) BETWEEN ${lowerLimit.height} AND ${upperLimit.height}\r\n			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \r\n				NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\r\n			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \r\n				HT.dateObserved ) ) / 365.25 ) >= 18 )\r\n                        AND (( BMI.dataField >= ${lowerLimit.obeseclass3} )\r\n						OR (IF(HT.dataField>0,ROUND(10000*WT.dataField/(HT.dataField*HT.dataField),2),0) >= ${lowerLimit.obeseclass3} ))\r\n						\r\n\r\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1	\r\n\r\n\r\n\r\n		</query>\r\n	</drillDownQuery>\r\n	\r\n</indicatorTemplateXML>\r\n', b'1', b'0', 0, 'Obese Class 3', 'Obesity Screening');

    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId3, 'Breast Cancer Screening', 'Preventive Health Care', 'Cancer', 'OSCAR EMR', '2022-02-02', '% of female patients aged 50 to 74 who had a mammogram within the past two years:\n		- Number of individuals in the denominator who had a mammogram within the past 24 months.\n		- excluding patients with a diagnostic code V4571 for Mastectomy\n		- patients w', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Cancer</subCategory>\n		<name>Breast Cancer Screening</name>\n		<metricSetName>Breast Cancer Screening</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Number of female patients aged 50 to 74 who had a mammogram within the past two years:\n		- Number of individuals in the denominator who had a mammogram within the past 24 months.\n		- excluding patients with a diagnostic code V4571 for Mastectomy\n		- patients with a null or “pending” prevention result are overdue.\n		</definition>\n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n		<frameworkVersion>01-30-2018</frameworkVersion>\n		<notes>BC</notes>\n	</heading>\n	<indicatorQuery>\n		<version>01-30-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="prevention" name="MAM" value="\'MAM\'" />\n			<parameter id="gender" name="GenderFemale" value="\'F\'" />\n			<parameter id="dxexclude" name="Exclude Dx" value="V4571, 174" />		\n			<parameter id="servicecode1" name="Service Code" value="\'Q131A\'" />\n			<parameter id="servicecode2" name="Service Code" value="\'Q141A\'" />\n			<parameter id="documentation1" name="documentation1" value="\'%mastectomy%\'" />\n			<parameter id="documentation2" name="documentation2" value="\'%cancer breast%\'" />\n			<parameter id="documentation3" name="documentation3" value="\'%breast ca%\'" />\n			<parameter id="documentation4" name="documentation4" value="\'%ca breast%\'" />	\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="74" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n			\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			\n			<lowerLimit id="date" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n\n			    IF ( COUNT(fin.patient) > 0,\n                                        SUM( IF( ( fin.mam > 0 ) AND fin.mam_i IS NULL AND fin.dx IS NULL , 1, 0 ) )\n                                ,0 ) AS "Mammogram Done",\n\n                                IF ( COUNT(fin.patient) > 0,\n                                        SUM( IF( fin.mam IS NULL AND fin.mam_i IS NULL AND fin.dx IS NULL, 1, 0 ) )\n                                ,0 ) AS "Not Done",\n\n                                IF ( COUNT(fin.patient) > 0,\n                                        SUM( IF( fin.mam_i > 0 OR fin.dx > 0 , 1, 0) )\n                                ,0 ) AS "Excluded"\n\n			FROM (\n				SELECT \n					d.demographic_no AS \'patient\', \n					MAM.id AS \'mam\',\n					MAM.val AS \'status\',\n					MAM_i.id AS \'mam_i\',\n					dxr.dxresearch_no AS dx \n				FROM demographic d\n				LEFT JOIN ( \n					SELECT dxresearch_no, demographic_no\n                                        FROM dxresearch\n                                        WHERE demographic_no>0\n					AND status = \'A\'\n                                        AND dxresearch_code IN ${dxexclude}\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				)dxr \n				ON ( d.demographic_no = dxr.demographic_no) \n			\n				-- GET ALL MAMMOGRAM ENTRIES FROM PREVENTIONS\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id, pe.val, p.refused \n					FROM preventions p		\n					JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result" \n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1 \n				) MAM\n				ON (d.demographic_no = MAM.demographic_no)\n				\n				\n				\n				 -- Use Ineligible in 24month searching to replace note searching\n                        	LEFT JOIN (\n\n                                	SELECT demographic_no, id\n                                	FROM preventions\n                                	WHERE prevention_type = ${prevention}\n                                	AND deleted = 0\n                                	AND refused = 2\n                                	AND prevention_date >= ${lowerLimit.date}\n                                	GROUP BY demographic_no\n\n                        	) MAM_i\n                        	ON (d.demographic_no = MAM_i.demographic_no)\n\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND d.sex = ${gender}\n				AND d.demographic_no > 0 \n				AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), ${upperLimit.date} ) / 365.25 ) ) \n					BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>01-30-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="prevention" name="MAM" value="\'MAM\'" />\n			<parameter id="gender" name="GenderFemale" value="\'F\'" />\n			<parameter id="dxexclude" name="Exclude Dx" value="V4571, 174" />		\n			<parameter id="servicecode1" name="Service Code" value="\'Q131A\'" />\n			<parameter id="servicecode2" name="Service Code" value="\'Q141A\'" />\n			<parameter id="documentation1" name="documentation1" value="\'%mastectomy%\'" />\n			<parameter id="documentation2" name="documentation2" value="\'%cancer breast%\'" />\n			<parameter id="documentation3" name="documentation3" value="\'%breast ca%\'" />\n			<parameter id="documentation4" name="documentation4" value="\'%ca breast recorded%\'" />\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="74" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n			\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			\n			<lowerLimit id="date" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />	\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="trackingstatus" name="IFNULL( MAM_t.refused, \'\')" title="Mammogram Tracking Status" primary="false" />\n                        <column id="mamstatus" name="IFNULL(MAM_t.val, \'\')" title="Mammogram Result" primary="false" />\n                        <column id="mamdate" name="IFNULL( DATE_FORMAT(MAM_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Mammogram Test Date (mm-dd-yyyy)" primary="false" />\n\n                        \n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n                        \n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />	\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="trackingstatus" name="IFNULL( MAM_t.refused, \'\')" title="Mammogram Tracking Status" primary="false" />\n                        <column id="mamstatus" name="IFNULL(MAM_t.val, \'\')" title="Mammogram Result" primary="false" />\n                        <column id="mamdate" name="IFNULL( DATE_FORMAT(MAM_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Mammogram Test Date (mm-dd-yyyy)" primary="false" />\n\n                        \n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date  (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n                        \n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d\n			LEFT JOIN ( \n				SELECT dxresearch_no, demographic_no\n				FROM dxresearch\n				WHERE demographic_no>0\n				AND status = \'A\'\n				AND dxresearch_code IN ${dxexclude}\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			\n			)dxr \n			ON ( d.demographic_no = dxr.demographic_no) \n		\n			-- GET Mam done in 24months\n			LEFT JOIN ( \n		\n				SELECT p.demographic_no, p.id, pe.val\n				FROM preventions p	\n				JOIN preventionsExt pe\n				ON p.id = pe.prevention_id\n				WHERE p.prevention_type = ${prevention}\n				AND p.deleted = 0\n				AND p.refused = 0\n				AND pe.keyval = "result"\n				AND pe.val != "pending"\n				AND p.prevention_date >= ${lowerLimit.date}\n				GROUP BY demographic_no\n		\n			) MAM\n			ON (d.demographic_no = MAM.demographic_no)\n			\n			-- Use Ineligible in 24month searching to replace note searching\n			LEFT JOIN (\n\n                                SELECT demographic_no, id\n                                FROM preventions \n                                WHERE prevention_type = ${prevention}\n                                AND deleted = 0\n				AND refused = 2\n				AND prevention_date >= ${lowerLimit.date}\n                                GROUP BY demographic_no\n\n                        ) MAM_i\n                        ON (d.demographic_no = MAM_i.demographic_no)\n\n\n			-- latest tracking status\n			 LEFT JOIN (\n\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n				JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n				RIGHT JOIN (\n					SELECT demographic_no, MAX(prevention_date) AS prevention_date\n					FROM preventions\n					WHERE prevention_type = ${prevention}\n					AND deleted = 0\n					GROUP BY demographic_no\n				) p2\n				ON p.prevention_date = p2.prevention_date\n				AND p.demographic_no = p2.demographic_no\n				AND p.prevention_type = ${prevention}	\n				AND p.deleted = 0\n				WHERE pe.keyval = "result"\n				ORDER BY p.id DESC\n			) MAM_t\n                        ON (d.demographic_no = MAM_t.demographic_no)\n\n\n			-- Last Seen Date\n			LEFT JOIN (\n				SELECT a.demographic_no, max(a.appointment_date) as appointment_date \n				FROM appointment a, demographic d \n				WHERE a.demographic_no = d.demographic_no\n				AND d.provider_no = \'${provider}\'\n				AND ${upperLimit.date} > DATE(a.appointment_date)\n				AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n			) app1\n			ON (d.demographic_no = app1.demographic_no)\n\n			-- Next Appointment Date\n			LEFT JOIN (\n				SELECT a.demographic_no, a.appointment_date \n				FROM appointment a, demographic d\n				WHERE a.demographic_no = d.demographic_no\n				AND d.provider_no = \'${provider}\'\n				AND DATE(a.appointment_date) >= ${upperLimit.date}\n				AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n				AND a.demographic_no > 0\n				GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n			) app2\n			ON (d.demographic_no = app2.demographic_no)\n			\n			\n\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.sex = ${gender}\n			AND d.demographic_no > 0 \n			AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), ${upperLimit.date} ) / 365.25 ) ) \n				BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Breast Cancer Screening</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% Mammogram Done" toLabel="Screening up to date"/>\n		<sharedMapping fromLabel="% Not Done" toLabel="Screening overdue"/>\n		<sharedMapping fromLabel="% Excluded" toLabel="Excluded"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Breast Cancer Screening'),
            (@dashboardId3, 'Colorectal Cancer Screening', 'Preventive Health Care', 'Cancer', 'OSCAR EMR', '2022-02-02', 'Patient Care: Colorectal Cancer Screening:\n% of patients aged 50 to 74 years old, inclusive, with an FOBT  within the past two years, \nsigmoidoscopy within 5 years or a colonoscopy within the past 10 years. - patients with a null or “pending” prevention r', 'BC', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Cancer</subCategory>\n		<name>Colorectal Cancer Screening</name>\n		<metricSetName>Colorectal Cancer Screen</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Colorectal Cancer Screening:\n% of patients aged 50 to 74 years old, inclusive, with an FOBT or FIT within the past two years, \nsigmoidoscopy within 5 years or a colonoscopy within the past 10 years. - patients with a null or “pending” prevention result are overdue.</definition>\n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n		<frameworkVersion>01-29-2018</frameworkVersion>\n		<notes>BC</notes>\n	</heading>\n	<indicatorQuery>\n		<version>01-29-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincfobt" name="FOBT LOINC" value="2335-8,29771-3,58453-2,14563-1,14564-9,14565-6" />\n			<parameter id="colonoscopy" name="Colonoscopy" value="\'COLONOSCOPY\'" />\n			<parameter id="dxexclusions" name="Exclude Dx Codes" value="154,153,556,555,V1005" />\n			<parameter id="preventionfobt" name="FOBT Prevention" value="\'FOBT\'" />\n\n			<parameter id="servicecode" name="Service Code Prevention" value="\'Q133A\'" />\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="74" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n			\n			<upperLimit id="date" label="Current Date" name="currentDate" value="NOW()" />\n			\n			<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n			<lowerLimit id="date120" label="120 Months" name="Date120" value="DATE_SUB( NOW(), INTERVAL 120 MONTH )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				IF ( COUNT(fin.patient) > 0,\n					 SUM( IF( (fin.colo > 0 OR fin.fobt > 0 OR fin.fobtm  > 0) AND fin.fobt_i IS NULL AND fin.dx IS NULL, 1, 0 ) ) \n				,0 ) AS \'With One Test\',\n			\n				IF ( COUNT(fin.patient) > 0,\n					 SUM( IF( fin.colo IS NULL AND fin.fobt IS NULL AND fin.fobtm IS NULL AND fin.fobt_i IS NULL AND fin.dx IS NULL, 1, 0 ) )\n				,0 ) AS \'With No Tests\', \n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.fobt_i > 0 OR fin.dx > 0 , 1, 0 ) )\n				,0 ) AS \'Excluded\'\n				\n			FROM (\n			\n				SELECT \n				d.demographic_no AS patient,\n				COLO.id AS colo,\n				FOBT.id AS fobt,\n				FOBT_i.id AS fobt_i,\n				dxr.dxresearch_no AS dx,				\n				FOBTM.id AS fobtm\n			\n				FROM demographic d\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no\n						FROM dxresearch\n						WHERE demographic_no>0\n						AND status = \'A\'\n						AND dxresearch_code IN ${dxexclusions}\n						GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr \n				ON ( d.demographic_no = dxr.demographic_no) \n			\n				-- Look for colonoscopy results from the last 120 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					INNER JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${colonoscopy}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND p.prevention_date >= ${lowerLimit.date120}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) COLO\n				ON (d.demographic_no = COLO.demographic_no )\n			\n				-- Look for FOBT req from the last 24 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					INNER JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${preventionfobt}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date24}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) FOBT\n				ON (d.demographic_no = FOBT.demographic_no )\n			\n				-- Look for possible FOBT results in measurementsExt.\n		                LEFT JOIN (\n					SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincfobt}\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date24}\n                                        GROUP BY m2.demographicNo\n\n                        	) FOBTM\n                        	ON (d.demographic_no = FOBTM.demographicNo)\n	\n\n				-- Ineligible\n				LEFT JOIN (\n\n                                        SELECT demographic_no, id\n                                        FROM preventions\n                                        WHERE prevention_type = ${preventionfobt}\n                                        AND deleted = 0\n                                        AND refused = 2\n                                        AND prevention_date >= ${lowerLimit.date24}\n                                        GROUP BY demographic_no\n\n                                ) FOBT_i\n                                ON (d.demographic_no = FOBT_i.demographic_no)\n	\n\n				-- WHERE THE PATIENT\'S AGE AT THE TIME OF THE COLONOSCOPY ...\n				-- Excluding patients previously diagnosed.\n\n				WHERE d.patient_status = ${pstatus} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0\n				AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \n					BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>01-29-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincfobt" name="FOBT LOINC" value="2335-8,29771-3,58453-2,14563-1,14564-9,14565-6" />\n			<parameter id="colonoscopy" name="Colonoscopy" value="\'COLONOSCOPY\'" />\n			<parameter id="dxexclusions" name="Exclude Dx Codes" value="154,153,556,555,V1005" />\n			<parameter id="preventionfobt" name="FOBT Prevention" value="\'FOBT\'" />	\n			<parameter id="servicecode" name="Service Code Prevention" value="\'Q133A\'" />	\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="74" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n			\n			<upperLimit id="date" label="Current Date" name="currentDate" value="NOW()" />\n			\n			<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n			<lowerLimit id="date120" label="120 Months" name="Date120" value="DATE_SUB( NOW(), INTERVAL 120 MONTH )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="coloscopytrackingstatus" name="IFNULL(COLO0_t.refused, \'\')" title="Colonoscopy Tracking Status" primary="false" />\n                        <column id="coloscopy" name="IFNULL(COLO0_t.val, \'\')" title="Colonoscopy Result" primary="false" />\n                        <column id="coloscopydate" name="IFNULL( DATE_FORMAT( COLO0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Colonoscopy Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="fobttrackingstatus" name="IFNULL(FOBT0_t.refused, \'\')" title="FOBT Tracking Status" primary="false" />\n                        <column id="fobtprevention" name="IFNULL(FOBT0_t.val, \'\')" title="FOBT Result" primary="false" />\n                        <column id="fobtpreventiondate" name="IFNULL( DATE_FORMAT( FOBT0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Test Date (mm-dd-yyyy)" primary="false" />\n<!--\n			<column id="fobtlab" name="IFNULL(FOBTM0.dataField, \'\')" title="FOBT Lab Result" primary="false" />\n			<column id="fobtlabdate" name="IFNULL( DATE_FORMAT( FOBTM0.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Lab Date (mm-dd-yyyy)" primary="false" />\n-->\n			\n			<column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n			<column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n			\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="coloscopytrackingstatus" name="IFNULL(COLO0_t.refused, \'\')" title="Colonoscopy Tracking Status" primary="false" />\n                        <column id="coloscopy" name="IFNULL(COLO0_t.val, \'\')" title="Colonoscopy Result" primary="false" />\n                        <column id="coloscopydate" name="IFNULL( DATE_FORMAT( COLO0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Colonoscopy Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="fobttrackingstatus" name="IFNULL(FOBT0_t.refused, \'\')" title="FOBT Tracking Status" primary="false" />\n                        <column id="fobtprevention" name="IFNULL(FOBT0_t.val, \'\')" title="FOBT Result" primary="false" />\n                        <column id="fobtpreventiondate" name="IFNULL( DATE_FORMAT( FOBT0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Test Date (mm-dd-yyyy)" primary="false" />\n<!--\n                        <column id="fobtlab" name="IFNULL(FOBTM0.dataField, \'\')" title="FOBT Lab Result" primary="false" />\n                        <column id="fobtlabdate" name="IFNULL( DATE_FORMAT( FOBTM0.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Lab Date (mm-dd-yyyy)" primary="false" />\n-->\n                        \n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n			\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT\n			*\n			FROM demographic d\n			LEFT JOIN (\n				SELECT dxresearch_no, demographic_no\n                                FROM dxresearch\n                                WHERE demographic_no>0\n				AND status = \'A\'\n                                AND dxresearch_code IN ${dxexclusions}\n                                GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr \n			ON ( d.demographic_no = dxr.demographic_no)\n		\n			-- Look for colonoscopy results from the last 120 months\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val\n                                FROM preventions p\n                                INNER JOIN preventionsExt pe\n                                ON pe.prevention_id = p.id\n                                WHERE p.prevention_type = ${colonoscopy}\n                                AND p.deleted = 0\n                                AND p.refused = 0\n                                AND pe.keyval = "result"\n                                AND pe.val != "pending"\n                                AND p.prevention_date >= ${lowerLimit.date120}\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) COLO\n                        ON (d.demographic_no = COLO.demographic_no )\n\n			-- all COLO tracking status\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n				JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n					SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${colonoscopy}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n				ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${colonoscopy}\n				AND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n\n                        ) COLO0_t\n                        ON (d.demographic_no = COLO0_t.demographic_no )\n\n                        -- Look for FOBT req from the last 24 months\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val\n                                FROM preventions p\n                                INNER JOIN preventionsExt pe\n                                ON pe.prevention_id = p.id\n                                WHERE p.prevention_type = ${preventionfobt}\n                                AND p.deleted = 0\n                                AND p.refused = 0\n                                AND pe.keyval = "result"\n                                AND pe.val != "pending"\n                                AND DATE(p.prevention_date) >= ${lowerLimit.date24}\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) FOBT\n                        ON (d.demographic_no = FOBT.demographic_no )\n\n			-- all FOBT tracking status\n			LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n                                JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n                                        SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${preventionfobt}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n                                ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${preventionfobt}\n				AND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n\n                        ) FOBT0_t\n                        ON (d.demographic_no = FOBT0_t.demographic_no )\n\n\n                        -- Look for possible FOBT results in measurementsExt.\n			 LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincfobt}\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date24}\n                                        GROUP BY m2.demographicNo\n\n                        ) FOBTM\n                        ON (d.demographic_no = FOBTM.demographicNo)\n\n\n			\n\n			 -- Last Seen Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND ${upperLimit.date} > DATE(a.appointment_date)\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n                        ) app1\n                        ON (d.demographic_no = app1.demographic_no)\n\n                        -- Next Appointment Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, a.appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND DATE(a.appointment_date) >= ${upperLimit.date}\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n                        ) app2\n                        ON (d.demographic_no = app2.demographic_no)\n\n			-- note\n			-- Ineligible\n                        LEFT JOIN (\n\n                                SELECT demographic_no, id\n                                FROM preventions\n                                WHERE prevention_type = ${preventionfobt}\n                                AND deleted = 0\n                                AND refused = 2\n                                AND prevention_date >= ${lowerLimit.date24}\n                                GROUP BY demographic_no\n\n                        ) FOBT_i\n                        ON (d.demographic_no = FOBT_i.demographic_no)\n\n		\n			-- WHERE THE PATIENT\'S AGE AT THE TIME OF THE COLONOSCOPY\n			-- Exclude Cancer diagnosis.\n\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0\n			AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \n				BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Colorectal Cancer Screen</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% With One Test" toLabel="Screening up to date"/>\n		<sharedMapping fromLabel="% With No Tests" toLabel="Screening overdue"/>\n		<sharedMapping fromLabel="% Excluded" toLabel="Excluded"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Colorectal Cancer Screen');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
    (@dashboardId3, 'Pneumococcal Immunization', 'Preventive Health Care', 'Immunization', 'OSCAR EMR', '2022-03-03', 'Active patients aged 65 and older who have a record of receiving a pneumococcal vaccine', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Immunization</subCategory>\n		<name>Pneumococcal Immunization</name>\n		<metricSetName>Pneumococcal Immunization</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Active patients aged 65 and older who have a record of receiving a pneumococcal vaccine</definition>\n		<framework>Based on and adapted from HQO\'s PCPM: Priority Measures for System and Practice Levels (Oct 2015</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			 Pneumovax = Pneu-P-23,  Pneu-C = Pneu-C-13\n            [Pneu-C-7] [Pneu-C-10] [Pneu-C-13] [Pneu-P-23] Pneumococcus\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="prevention" name="Immunization" value="\'Pneumovax\'" />	\n			<parameter id="pneu-c" name="pneu-c" value="\'%Pneu-C%\'" />\n			<parameter id="pneu-p" name="pneu-p" value="\'%Pneu-P%\'" />\n			<parameter id="pstatus" name="PatientStatus" value="\'AC\'" />	\n		</params>\n		<range>\n			<lowerLimit id="age" label="Min Patient Age" name="Age" value="65" />\n			\n			<lowerLimit id="date12" label="12 Months" name="Date12" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF(fin.pneu > 0, 1, 0) ) \n				,0 ) AS "Has Pneumococcal Vaccine",\n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.pneu IS NULL AND fin.pneu2 IS NULL , 1, 0 ) )					 \n				,0 ) AS "No Pneumococcal Vaccine",\n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.pneu IS NULL AND fin.pneu2 > 0, 1, 0 ) )					\n				,0 ) AS "Pneumococcal refused"\n			FROM (\n			\n				SELECT \n					d.demographic_no AS patient,\n					PNEU.id as pneu,\n					PNEU2.id as pneu2\n				FROM demographic d\n			\n				-- LOOK FOR pneumococcal VACCINES\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					WHERE ( p.prevention_type = ${prevention} OR p.prevention_type LIKE ${pneu-c} OR p.prevention_type LIKE ${pneu-p})					\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND p.demographic_no > 0\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PNEU \n				ON (d.demographic_no = PNEU.demographic_no )\n				\n				\n				-- LOOK FOR refused pneumococcal VACCINES\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n					FROM preventions p	\n					WHERE ( p.prevention_type = ${prevention} OR p.prevention_type LIKE ${pneu-c} OR p.prevention_type LIKE ${pneu-p} )					\n					AND p.deleted = 0\n					AND p.refused = 1\n					AND p.demographic_no > 0\n					AND p.prevention_date > ${lowerLimit.date12}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PNEU2\n				ON (d.demographic_no = PNEU2.demographic_no )\n				\n				WHERE d.patient_status = ${pstatus} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="prevention" name="Immunization" value="\'Pneumovax\'" />\n			<parameter id="pneu-c" name="pneu-c" value="\'%Pneu-C%\'" />\n			<parameter id="pneu-p" name="pneu-p" value="\'%Pneu-P%\'" />\n			<parameter id="pstatus" name="PatientStatus" value="\'AC\'" />\n			<parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\n		</params>\n		<range>\n			<lowerLimit id="age" label="Min Patient Age" name="Age" value="65" />\n			\n			<lowerLimit id="date12" label="12 Months" name="Date12" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="d.phone" title="Patient Phone Number" primary="false" />\n			\n			<column id="refused" name="IFNULL(PNEU2_0.refused, \'No\')" title="Refusal Status" primary="false" />\n			<column id="refusedDate" name="IFNULL( DATE_FORMAT( DATE(PNEU2_0.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Refusal (mm-dd-yyyy)" primary="false" />\n			<column id="pneuC_Date" name="IFNULL( DATE_FORMAT( DATE(PNEU_C.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Pneu-C (mm-dd-yyyy)" primary="false" />\n			<column id="pneuP_Date" name="IFNULL( DATE_FORMAT( DATE(PNEU_P.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Pneu-P (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="d.phone" title="Patient Phone Number" primary="false" />\n				\n			<column id="refused" name="IFNULL(PNEU2_0.refused, \'No\')" title="Refusal Status" primary="false" />\n                        <column id="refusedDate" name="IFNULL( DATE_FORMAT( DATE(PNEU2_0.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Refusal (mm-dd-yyyy)" primary="false" />\n                        <column id="pneuC_Date" name="IFNULL( DATE_FORMAT( DATE(PNEU_C.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Pneu-C-13 (mm-dd-yyyy)" primary="false" />\n                        <column id="pneuP_Date" name="IFNULL( DATE_FORMAT( DATE(PNEU_P.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Pneu-P-23 (mm-dd-yyyy)" primary="false" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*	\n			FROM demographic d\n			\n			-- LOOK FOR pneumococcal Pneu-P-13 VACCINES\n			LEFT JOIN ( \n				SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n				FROM preventions p	\n				WHERE ( p.prevention_type = ${prevention} OR p.prevention_type LIKE ${pneu-p} )\n				AND p.deleted = 0\n				AND p.refused = 0\n				AND p.demographic_no > 0\n				GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n			) PNEU_P\n			ON (d.demographic_no = PNEU_P.demographic_no )\n\n			-- LOOK FOR pneumococcal Pneu-C-13 VACCINES\n                        LEFT JOIN ( \n                                SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n                                FROM preventions p    \n                                WHERE p.prevention_type LIKE ${pneu-c} \n                                AND p.deleted = 0 \n                                AND p.refused = 0 \n                                AND p.demographic_no > 0 \n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) PNEU_C\n                        ON (d.demographic_no = PNEU_C.demographic_no )\n		\n			\n			-- LOOK FOR refused pneumococcal VACCINES in last 12 months\n			LEFT JOIN ( \n				SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n				FROM preventions p	\n				WHERE ( p.prevention_type = ${prevention} OR p.prevention_type LIKE ${pneu-c} )\n				AND p.deleted = 0\n				AND p.refused = 1\n				AND p.demographic_no > 0\n				AND p.prevention_date > ${lowerLimit.date12}\n				GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n			) PNEU2			\n			ON (d.demographic_no = PNEU2.demographic_no )\n			\n			 -- LOOK FOR refused pneumococcal VACCINES\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE ( p.prevention_type = ${prevention} OR p.prevention_type LIKE ${pneu-c} OR p.prevention_type LIKE ${pneu-p}  )\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.demographic_no > 0\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) PNEU2_0\n                        ON (d.demographic_no = PNEU2_0.demographic_no )\n\n			WHERE d.patient_status = ${pstatus} \n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n				NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n				<!--\n			AND IF( "${sharedMetricLabel}" = "Pneumococcal received", PNEU.id > 0,  \n			    IF( "${sharedMetricLabel}" = "Pneumococcal overdue", PNEU.id = 0, ( IF("${sharedMetricLabel}" = "Pneumococcal refused", PNEU2.id > 0, 1=1)) ) )\n		-->\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Pneumococcal Immunization</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% Has Pneumococcal Vaccine" toLabel="Pneumococcal received"/>\n		<sharedMapping fromLabel="% No Pneumococcal Vaccine" toLabel="Pneumococcal overdue"/>\n		<sharedMapping fromLabel="% Pneumococcal refused" toLabel="Pneumococcal refused"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Pneumococcal Immunization');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
    (@dashboardId3, 'Childhood Immunization', 'Preventive Health Care', 'Immunization', 'OSCAR EMR', '2022-03-03', 'Active patients aged 30 to 42 months who have received all of the ministry-supplied immunizations as recommended by the National Advisory Committee on immunizations.', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Immunization</subCategory>\n		<name>Childhood Immunization</name>\n		<metricSetName>Childhood Immunizations</metricSetName>\n		<metricLabel>Incomplete</metricLabel>\n		<definition>Active patients aged 30 to 42 months who have received all of the ministry-supplied immunizations as recommended by the National Advisory Committee on immunizations.</definition>\n		<framework>Based on and adapted from AFHTO D2D 3.0 Indicators: Data Dictionary version 4 (Nov 2015)</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\nCVC terms\nDTaP-IPV-Hib [DTaP-IPV-Hib\npneumococcal conujate vaccines [Pneu-C-%\nRotavirus [Rota%\nMMR [MMR%\nVaricella [Var]%\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="dTaPIPVHib" name="DTaPIPVHib" value="\'%DTaP-IPV-Hib%\'" />\n			<parameter id="pneumococcal" name="Pneumococcal" value="\'%Pneu-C%\'" />\n			<parameter id="rotavirus" name="Rotavirus" value="\'%Rot%\'" />\n			<parameter id="meningococcal" name="Meningococcal" value="\'%MenC-C%\'" />\n			<parameter id="measlesMumpsRubella" name="MeaslesMumpsRubella" value="\'%MMR%\'" />\n			<parameter id="varicella" name="Varicella" value="\'VZ\'" />\n			<parameter id="varicella2" name="Varicella2" value="\'[Var] Varicella\'" />\n			\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age Months" name="Age" value="3.5" />\n			<lowerLimit id="age" label="Min Age Months" name="Age" value="2.5" />\n						\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n                        <lowerLimit id="date" label="12 Months" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				 -- count patients that satisfy all 5 requirements\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( fin.dtap >= 4\n                                                AND fin.pneu >= 3\n                                                AND fin.menc >= 1\n                                                AND fin.mmr >= 1\n                                                AND fin.vz >= 1\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'With Complete Immunizations\',\n\n                                -- the remainder missed one of the 5 requirements.\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( (4 > fin.dtap AND fin.dtap_r = 0 AND ( fin.pneu >= 3 OR fin.pneu_r = 0) AND (fin.menc >= 1 OR fin.menc_r = 0) AND (fin.mmr >= 1 OR fin.mmr_r = 0 ) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 3 > fin.pneu AND fin.pneu_r = 0 AND (fin.dtap >= 4 OR fin.dtap_r = 0) AND (fin.menc >= 1 OR fin.menc_r = 0) AND (fin.mmr >= 1 OR fin.mmr_r = 0 ) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 1 > fin.menc AND fin.menc_r = 0 AND (fin.pneu >= 3 OR fin.pneu_r = 0) AND (fin.dtap >= 4 OR fin.dtap_r = 0) AND (fin.mmr >= 1 OR fin.mmr_r = 0 ) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 1 > fin.mmr AND fin.mmr_r = 0 AND (fin.menc >= 1 OR fin.menc_r = 0) AND (fin.pneu >= 3 OR fin.pneu_r = 0 ) AND (fin.dtap >= 4 OR fin.dtap_r = 0) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 1 > fin.vz AND fin.vz_r = 0 AND (fin.mmr >= 1 OR fin.mmr_r = 0) AND (fin.menc >= 1 OR fin.menc_r = 0 ) AND (fin.pneu >= 3 OR fin.pneu_r = 0 ) AND (fin.dtap >= 4 OR fin.dtap_r = 0 ) )\n\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'Imunizations Not Complete\',\n\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( ( 4 > fin.dtap AND fin.dtap_r > 0)\n                                                OR ( 3 > fin.pneu AND fin.pneu_r > 0)\n                                                OR ( fin.menc = 0 AND fin.menc_r > 0)\n                                                OR ( fin.mmr = 0 AND fin.mmr_r > 0)\n                                                OR ( fin.vz = 0 AND fin.vz_r > 0)\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'Refused one or more\'\n	\n			FROM (\n				SELECT  \n					d.demographic_no AS \'patient\',\n					IFNULL( DTaP.id, 0 ) AS \'dtap\',\n					IFNULL( DTaP_r.id, 0 ) AS \'dtap_r\',\n					IFNULL( PNEU.id, 0 ) AS \'pneu\',\n					IFNULL( PNEU_r.id, 0 ) AS \'pneu_r\',\n					IFNULL( MC.id, 0 ) AS \'menc\',\n					IFNULL( MC_r.id, 0 ) AS \'menc_r\',\n					IFNULL( MM.id, 0 ) AS \'mmr\',\n					IFNULL( MM_r.id, 0 ) AS \'mmr_r\',\n					IFNULL( VZ.id, 0 ) AS \'vz\',\n					IFNULL( VZ_r.id, 0 ) AS \'vz_r\'\n					\n				FROM demographic d\n			\n				-- 4 instances of - DTaP-IPV-Hib - Diphtheria, Tetanus, Pertussis, Polio, Haemophilus influenzae type B\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${dTaPIPVHib}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no \n				) DTaP\n				ON (d.demographic_no = DTaP.demographic_no)\n			\n				-- WITH  a refusal of any of the following - DTaP-IPV-Hib,  Pneumococcal conjugate,  Meningococcal Conjugate C,  Measles, Mumps, Rubella or Var  - Varicella\n				-- in the past 12 months\n				-- refused in the past 12 months\n                                LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${dTaPIPVHib}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n                                        AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) DTaP_r\n                                ON (d.demographic_no = DTaP_r.demographic_no)\n\n				\n				-- 3 instances of - Pneu-C-13  - Pneumococcal Conjugate 13\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${pneumococcal}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no \n				) PNEU\n				ON (d.demographic_no = PNEU.demographic_no)\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${pneumococcal}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) PNEU_r\n                                ON (d.demographic_no = PNEU_r.demographic_no)\n\n				-- 1 instance of - Men-C-C  - Meningococcal Conjugate \n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${meningococcal}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no\n				) MC\n				ON (d.demographic_no = MC.demographic_no)\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${meningococcal}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) MC_r\n                                ON (d.demographic_no = MC_r.demographic_no)\n\n				\n				-- 1 instance of - MMR  - Measles, Mumps, Rubella\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no\n				) MM\n				ON (d.demographic_no = MM.demographic_no)\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) MM_r\n                                ON (d.demographic_no = MM_r.demographic_no)\n\n				-- 1 instance of - Var  - Varicella\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE ( p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2} )\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no\n				) VZ\n				ON (d.demographic_no = VZ.demographic_no)\n				\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE ( p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2} )\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) VZ_r\n                                ON (d.demographic_no = VZ_r.demographic_no)\n\n			\n				-- PATIENTS BETWEEN 30 TO 42 MONTHS OLD\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				AND ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) \n					BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n			) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="dTaPIPVHib" name="DTaPIPVHib" value="\'%DTaP-IPV-Hib%\'" />\n			<parameter id="pneumococcal" name="Pneumococcal" value="\'%Pneu-C%\'" />\n			<parameter id="rotavirus" name="Rotavirus" value="\'%Rot%\'" />\n			<parameter id="meningococcal" name="Meningococcal" value="\'%MenC-C%\'" />\n			<parameter id="measlesMumpsRubella" name="MeaslesMumpsRubella" value="\'%MMR%\'" />\n			<parameter id="varicella" name="Varicella" value="\'VZ\'" />\n			<parameter id="varicella2" name="Varicella2" value="\'[Var] Varicella\'" />\n			<parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age Months" name="Age" value="3.5" />\n			<lowerLimit id="age" label="Min Age Months" name="Age" value="2.5" />\n			\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n                        <lowerLimit id="date" label="12 Months" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="ROUND( ABS(DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) / 365.25), 1)" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			\n			<column id="dtapcount" name="IFNULL( DTaP.id, \'\' )" title="Count of DTaP instances" primary="false" />\n<!--			<column id="dtaprefused" name="IFNULL( REF_dtap.refused, \'No\' )" title="DTaP Refused Status" primary="false" />\n-->			<column id="pneucount" name="IFNULL( PNEU.id, 0 )" title="Count of Pneumococcal instances" primary="false" />\n<!--			<column id="pneurefused" name="IFNULL( REF_pneu.refused, \'No\' )" title="Pneumococcal Refused Status" primary="false" />\n-->			<column id="mencount" name="IFNULL( MC.id, 0 )" title="Count of Meningococcal Instances" primary="false" />\n<!--			<column id="menrefused" name="IFNULL( REF_men.refused, \'No\' )" title="Meningococcal Refused Status" primary="false" />\n-->			<column id="mmrcount" name="IFNULL( MM.id, 0 )" title="Count of MMR instances" primary="false" />\n<!--			<column id="mmrrefused" name="IFNULL( REF_mmr.refused, \'No\' )" title="MMR Refused Status" primary="false" />\n-->			<column id="vzcount" name="IFNULL( VZ.id, 0 )" title="Count of Varicella instances" primary="false" />\n<!--			<column id="vzrefused" name="IFNULL( REF_vz.refused, \'No\' )" title="Varicella Refused Status" primary="false" />\n-->			<column id="rotcount" name="IFNULL( ROT.id, 0 )" title="Count of Rotovirus instances" primary="false" />\n<!--			<column id="rotrefused" name="IFNULL( REF_rot.refused, \'No\' )" title="Rotovirus Refused Status" primary="false" />\n-->\n\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="ROUND( ABS(DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) / 365.25), 1)" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dtapcount" name="IFNULL( DTaP.id, \'\' )" title="Count of DTaP instances" primary="false" />\n<!--                    <column id="dtaprefused" name="IFNULL( REF_dtap.refused, \'No\' )" title="DTaP Refused Status" primary="false" />\n-->                     <column id="pneucount" name="IFNULL( PNEU.id, 0 )" title="Count of Pneumococcal instances" primary="false" />\n<!--                    <column id="pneurefused" name="IFNULL( REF_pneu.refused, \'No\' )" title="Pneumococcal Refused Status" primary="false" />\n-->                     <column id="mencount" name="IFNULL( MC.id, 0 )" title="Count of Meningococcal Instances" primary="false" />\n<!--                    <column id="menrefused" name="IFNULL( REF_men.refused, \'No\' )" title="Meningococcal Refused Status" primary="false" />\n-->                     <column id="mmrcount" name="IFNULL( MM.id, 0 )" title="Count of MMR instances" primary="false" />\n<!--                    <column id="mmrrefused" name="IFNULL( REF_mmr.refused, \'No\' )" title="MMR Refused Status" primary="false" />\n-->                     <column id="vzcount" name="IFNULL( VZ.id, 0 )" title="Count of Varicella instances" primary="false" />\n<!--                    <column id="vzrefused" name="IFNULL( REF_vz.refused, \'No\' )" title="Varicella Refused Status" primary="false" />\n-->                     <column id="rotcount" name="IFNULL( ROT.id, 0 )" title="Count of Rotovirus instances" primary="false" />\n<!--                    <column id="rotrefused" name="IFNULL( REF_rot.refused, \'No\' )" title="Rotovirus Refused Status" primary="false" />\n-->\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->				\n			SELECT  \n			*\n			FROM demographic d\n		\n			-- 4 instances of - DTaP-IPV-Hib - Diphtheria, Tetanus, Pertussis, Polio, Haemophilus influenzae type B\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${dTaPIPVHib}\n				AND p.deleted = 0\n				AND p.refused = 0 \n				GROUP BY p.demographic_no\n			) DTaP\n			ON (d.demographic_no = DTaP.demographic_no)\n		\n			 -- WITH  a refusal of any of the following - DTaP-IPV-Hib,  Pneumococcal conjugate,  Meningococcal Conjugate C,  Measles, Mumps, Rubella or Var  - Varicella\n                        -- in the past 12 months\n                        -- refused in the past 12 months\n                        LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${dTaPIPVHib}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) DTaP_r\n                        ON (d.demographic_no = DTaP_r.demographic_no)\n\n			-- 3 instances of - Pneu-C-13  - Pneumococcal Conjugate 13\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${pneumococcal}\n				AND p.deleted = 0\n				AND p.refused = 0 \n				GROUP BY p.demographic_no\n			) PNEU\n			ON (d.demographic_no = PNEU.demographic_no)\n			\n		 	LEFT JOIN (\n                              	SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${pneumococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) PNEU_r\n                        ON (d.demographic_no = PNEU_r.demographic_no)\n\n		\n			-- 1 instance of - Men-C-C  - Meningococcal Conjugate \n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${meningococcal}\n				AND p.deleted = 0\n				AND p.refused = 0\n				GROUP BY p.demographic_no \n			) MC\n			ON (d.demographic_no = MC.demographic_no)\n		\n			LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${meningococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) MC_r\n                        ON (d.demographic_no = MC_r.demographic_no)\n\n			-- 1 instance of - MMR  - Measles, Mumps, Rubella\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n				AND p.deleted = 0\n				AND p.refused = 0\n				GROUP BY p.demographic_no\n			) MM\n			ON (d.demographic_no = MM.demographic_no)\n		\n			LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) MM_r\n                        ON (d.demographic_no = MM_r.demographic_no)\n\n			-- 1 instance of - Var  - Varicella\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE ( p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2} )\n				AND p.deleted = 0\n				AND p.refused = 0\n				GROUP BY p.demographic_no\n			) VZ\n			ON (d.demographic_no = VZ.demographic_no)\n			\n			 LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE ( p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2} )\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) VZ_r\n                        ON (d.demographic_no = VZ_r.demographic_no)\n\n			-- instances of - Rot-1  - Rotavirus\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${rotavirus}\n				AND p.deleted = 0\n				AND p.refused = 0\n 				GROUP BY p.demographic_no\n			) ROT\n			ON (d.demographic_no = ROT.demographic_no)\n		\n			-- WITH  a refusal of any of the following - DTaP-IPV-Hib,  Pneumococcal conjugate,  Meningococcal Conjugate C,  Measles, Mumps, Rubella or Var  - Varicella\n			\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${dTaPIPVHib}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_dtap\n                        ON (d.demographic_no = REF_dtap.demographic_no)\n	\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${pneumococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_pneu\n                        ON (d.demographic_no = REF_pneu.demographic_no)\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${meningococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_men\n                        ON (d.demographic_no = REF_men.demographic_no)\n		\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE ( p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2} )\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_var\n                        ON (d.demographic_no = REF_var.demographic_no)\n\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_mmr\n                        ON (d.demographic_no = REF_mmr.demographic_no)\n\n			 LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE ( p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2} )\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_vz\n                        ON (d.demographic_no = REF_vz.demographic_no)\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${rotavirus}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_rot\n                        ON (d.demographic_no = REF_rot.demographic_no)\n\n			-- PATIENTS BETWEEN 30 TO 42 MONTHS OLD\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) \n				BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n				<!--\n			AND IF( "${sharedMetricLabel}" = "Complete", DTaP.id > 0 AND PNEU.id > 0 AND ROT.id > 0 AND MC.id > 0 AND MM.id > 0 AND VZ.id > 0,  \n			    IF( "${sharedMetricLabel}" = "Incomplete", (DTaP.id = 0 AND PNEU.id = 0 AND ROT.id = 0 AND MC.id = 0 AND MM.id = 0 AND VZ.id = 0) OR REF.id = 0, ( IF("${sharedMetricLabel}" = "Refused one or more", REF.id > 0, 1=1)) ) )\n		-->\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName>OntarioMD Childhood Immunizations</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% With Complete Immunizations" toLabel="Complete"/>\n		<sharedMapping fromLabel="% Imunizations Not Complete" toLabel="Incomplete"/>\n		<sharedMapping fromLabel="% Refused one or more" toLabel="Refused one or more"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Childhood Immunizations');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
    (@dashboardId3, 'Cervical Cancer Screening', 'Preventive Health Care', 'Cancer', 'OSCAR EMR', '2022-03-03', 'Women aged 25 to 69 who had a Papanicolaou (Pap) test within the past three years:\n		 - Each woman is counted once regardless of the number of Pap tests performed in a three-year period\n		 - excluding patients with a diagnostic code V4577 for Hystere', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Cancer</subCategory>\n		<name>Cervical Cancer Screening</name>\n		<metricSetName>Cervical Cancer Screening</metricSetName>\n                <metricLabel></metricLabel>		\n		<definition>Women aged 25 to 69 who had a Papanicolaou (Pap) test within the past three years:\n		 - Each woman is counted once regardless of the number of Pap tests performed in a three-year period\n		 - excluding patients with a diagnostic code V4577 for Hysterectomy \n		- patients with a null or “pending” prevention result are overdue.\n		</definition>\n		<framework>Based on and adapted from HQO\'s PCPM: Priority Measures for System and Practice Levels (Oct 2015)</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincpap" name="PAP LOINC" value="47527-7,49050-8,10524-7" />\n			<parameter id="prevention" name="PAP" value="\'PAP\'" />\n			<parameter id="gender" name="GenderFemale" value="\'F\'" />\n			<parameter id="dxexclude" name="Exclude Dx" value="V4577,683,684,685,686,687,688,689" />\n			<parameter id="service_code1" name="service code1" value="\'Q140A\'" />\n			<parameter id="service_code2" name="service code2" value="\'Q011A\'" />	\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="69" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="25" />\n			\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			\n			<lowerLimit id="date" label="36 Months" name="Date36" value="DATE_SUB( NOW(), INTERVAL 36 MONTH )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				IF ( COUNT(fin.patient) > 0,\n                                         SUM( IF( (fin.papm > 0 OR fin.pap > 0 OR fin.bill2>0 ) AND fin.bill1 IS NULL AND fin.pap_i IS NULL AND fin.dx IS NULL, 1, 0 ) )                                                                 \n                                ,0 ) AS "PAP Done",\n\n                                IF ( COUNT(fin.patient) > 0,\n                                        SUM( IF( fin.papm IS NULL AND fin.pap IS NULL AND fin.bill2 IS NULL AND fin.bill1 IS NULL AND fin.pap_i IS NULL AND fin.dx IS NULL , 1, 0 ) )               \n                                ,0 ) AS "Not Done",\n\n				IF ( COUNT(fin.patient) > 0, \n					SUM( IF(fin.pap_i > 0 OR fin.dx > 0 OR fin.bill1 > 0, 1, 0) )\n				,0 ) AS "Excluded"\n							\n			FROM (\n				SELECT \n					d.demographic_no AS patient, \n					PAPM.id as papm,\n					PAP.id AS pap,\n					BILL1.id AS bill1, \n					BILL2.id AS bill2,\n					PAP_i.id AS pap_i,\n					dxr.dxresearch_no AS dx  \n				FROM demographic d\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no \n					FROM dxresearch \n					WHERE demographic_no>0 \n					AND status = \'A\'\n					AND dxresearch_code IN ${dxexclude} \n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				)dxr				\n				ON ( d.demographic_no = dxr.demographic_no) \n				\n				-- Look for possible PAP results in measurementsExt.\n				LEFT JOIN (\n					SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n					AND DATE(m2.dateObserved) >= ${lowerLimit.date}\n                                        GROUP BY m2.demographicNo\n\n				) PAPM\n				ON (d.demographic_no = PAPM.demographicNo)\n			\n				-- GET ALL PAP ENTRIES FROM PREVENTIONS\n				-- do not include refused or ineligible patients.\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date} \n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP\n				ON (d.demographic_no = PAP.demographic_no)\n\n				-- WITHOUT service code of Q140A billed\n				LEFT JOIN (\n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boi.service_code = ${service_code1} \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boc.id = boi.ch1_id\n					GROUP BY boc.demographic_no \n				) BILL1\n				ON (d.demographic_no = BILL1.demographic_no)\n				\n				-- WITHOUT a Q011A billed in more than 36 months\n				LEFT JOIN (\n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${service_code2} \n					AND DATE(boi.service_date) >= ${lowerLimit.date}\n					GROUP BY boc.demographic_no \n				) BILL2\n				ON (d.demographic_no = BILL2.demographic_no)\n\n				-- ineligible\n				LEFT JOIN (\n					SELECT demographic_no, id\n					FROM preventions\n					WHERE prevention_type = ${prevention}\n					AND deleted = 0\n					AND refused = 2\n                                	AND prevention_date >= ${lowerLimit.date}\n                                	GROUP BY demographic_no\n\n                        	) PAP_i\n                        	ON (d.demographic_no = PAP_i.demographic_no)\n\n				\n				WHERE d.patient_status = ${pstatus} 				\n				AND d.provider_no = \'${provider}\'\n				AND d.sex = ${gender}\n				AND d.demographic_no > 0 \n				AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), ${upperLimit.date} ) / 365.25 ) ) \n					BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincpap" name="PAP LOINC" value="47527-7,49050-8,10524-7" />\n			<parameter id="prevention" name="PAP" value="\'PAP\'" />\n			<parameter id="gender" name="GenderFemale" value="\'F\'" />\n			<parameter id="dxexclude" name="Exclude Dx" value="V4577,683,684,685,686,687,688,689" />			\n			<parameter id="service_code1" name="service code1" value="\'Q140A\'" />\n			<parameter id="service_code2" name="service code2" value="\'Q011A\'" />\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="69" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="25" />\n			\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			\n			<lowerLimit id="date" label="36 Months" name="Date36" value="DATE_SUB( NOW(), INTERVAL 36 MONTH )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="trackingstatus" name="IFNULL( PAP0_t.refused, \'\')" title="PAP Tracking Status" primary="false" />\n                        <column id="papstatus" name="IFNULL(PAP0_t.val, \'\')" title="PAP Result" primary="false" />\n                        <column id="papdate" name="IFNULL( DATE_FORMAT(PAP0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest PAP Test Date (mm-dd-yyyy)" primary="false" />\n\n			<column id="billedtrackingdate" name="IFNULL(  DATE_FORMAT(BILL2_0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q011A Date (mm-dd-yyyy)" primary="false" />\n			<column id="lastappdate" name="IFNULL(  DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n			<column id="nextappdate" name="IFNULL(  DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billQ140ADate" name="IFNULL( DATE_FORMAT(BILL1.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q140A Date (mm-dd-yyyy)" primary="false" />\n\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n                        <column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="trackingstatus" name="IFNULL( PAP0_t.refused, \'\')" title="PAP Tracking Status" primary="false" />\n                        <column id="papstatus" name="IFNULL(PAP0_t.val, \'\')" title="PAP Result" primary="false" />\n                        <column id="papdate" name="IFNULL( DATE_FORMAT(PAP0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest PAP Test Date (mm-dd-yyyy)" primary="false" />\n\n                        <column id="billedtrackingdate" name="IFNULL(  DATE_FORMAT(BILL2_0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q011A Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL(  DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL(  DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billQ140ADate" name="IFNULL( DATE_FORMAT(BILL1.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q140A Date (mm-dd-yyyy)" primary="false" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d\n			LEFT JOIN (\n				SELECT dxresearch_no, demographic_no \n				FROM dxresearch \n				WHERE demographic_no>0 \n				AND status = \'A\'\n				AND dxresearch_code IN ${dxexclude} \n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr		\n			ON ( d.demographic_no = dxr.demographic_no) \n			\n			-- Look for possible PAP results in measurementsExt.\n			LEFT JOIN (\n                                SELECT m2.demographicNo, m2.id\n                                FROM measurements m2\n                                JOIN measurementsExt me\n                                ON m2.id = me.measurement_id\n                                JOIN measurementMap mm\n                                ON me.val = mm.`name`\n                                WHERE me.keyval = "name"\n                                AND mm.loinc_code IN ${loincpap}\n                                AND DATE(m2.dateObserved) >= ${lowerLimit.date}\n                                GROUP BY m2.demographicNo\n\n                        ) PAPM\n                        ON (d.demographic_no = PAPM.demographicNo)\n\n				\n			-- GET PAP ENTRIES FROM PREVENTIONS in 36months\n			LEFT JOIN ( \n				SELECT p.demographic_no, p.id\n				FROM preventions p	\n				JOIN preventionsExt pe\n				ON p.id = pe.prevention_id\n				WHERE p.prevention_type = ${prevention}\n				AND p.deleted = 0\n				AND p.refused = 0\n				AND pe.keyval = "result"\n				AND pe.val != "pending"\n				AND p.prevention_date >= ${lowerLimit.date}\n				GROUP BY demographic_no			\n			) PAP\n			ON (d.demographic_no = PAP.demographic_no)\n\n			-- get the latest pap	\n                        LEFT JOIN (\n				SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n				JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n					SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${prevention}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n				ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${prevention}\n				AND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n\n                        ) PAP0_t\n                        ON (d.demographic_no = PAP0_t.demographic_no)\n\n\n			-- WITHOUT service code of Q140A billed\n			LEFT JOIN (\n				SELECT boc.id, boc.demographic_no, MAX(boi.service_date) AS billing_date \n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boi.service_code = ${service_code1} \n				AND boc.status != \'D\'				\n				AND boi.status != \'D\'				\n				AND boc.id = boi.ch1_id\n				GROUP BY boc.demographic_no \n			) BILL1\n			ON (d.demographic_no = BILL1.demographic_no)\n			\n			-- WITHOUT a Q011A billed in more than 36 months\n			LEFT JOIN (\n				SELECT boc.id, boc.demographic_no\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boc.id = boi.ch1_id \n				AND boc.status != \'D\'\n				AND boi.status != \'D\'				\n				AND boi.service_code = ${service_code2} \n				AND DATE(boi.service_date) >= ${lowerLimit.date} \n				GROUP BY boc.demographic_no \n			) BILL2\n			ON (d.demographic_no = BILL2.demographic_no)\n\n			 LEFT JOIN (\n                                SELECT boc.id, boc.demographic_no, MAX(boi.service_date) AS billing_date\n                                FROM billing_on_cheader1 boc, billing_on_item boi\n                                WHERE boc.id = boi.ch1_id\n                                AND boc.status != \'D\'\n				AND boi.status != \'D\'				\n                                AND boi.service_code = ${service_code2}\n                                GROUP BY boc.demographic_no\n                        ) BILL2_0\n                        ON (d.demographic_no = BILL2_0.demographic_no)\n\n			-- last seen appointment\n			LEFT JOIN (\n        			SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n        			FROM appointment a, demographic d\n        			WHERE a.demographic_no = d.demographic_no\n        			AND d.provider_no = \'${provider}\'\n        			AND ${upperLimit.date} > DATE(a.appointment_date)\n        			AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n        			AND a.demographic_no > 0\n        			GROUP BY a.demographic_no\n			) app1\n			ON (d.demographic_no = app1.demographic_no)\n\n 			-- Next Appointment Date\n			LEFT JOIN (\n        			SELECT a.demographic_no, a.appointment_date\n        			FROM appointment a, demographic d\n        			WHERE a.demographic_no = d.demographic_no\n        			AND d.provider_no = \'${provider}\'\n        			AND DATE(a.appointment_date) >= ${upperLimit.date}\n        			AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n        			AND a.demographic_no > 0\n        			GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n			) app2\n			ON (d.demographic_no = app2.demographic_no)\n\n			-- excluded notes\n			-- ineligible\n			LEFT JOIN (\n                                SELECT demographic_no, id\n                                FROM preventions\n                                WHERE prevention_type = ${prevention}\n                                AND deleted = 0\n                                AND refused = 2\n                                AND prevention_date >= ${lowerLimit.date}\n                                GROUP BY demographic_no\n\n                        ) PAP_i\n                        ON (d.demographic_no = PAP_i.demographic_no)\n\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.sex = ${gender}\n			AND d.demographic_no > 0 \n			AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \n				BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Cervical Cancer Screening</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% PAP Done" toLabel="Screening up to date"/>\n		<sharedMapping fromLabel="% Not Done" toLabel="Screening overdue"/>\n		<sharedMapping fromLabel="% Excluded" toLabel="Excluded"/>\n	</sharedMappings>	\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Cervical Cancer Screening');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
    (@dashboardId3, 'COVID-19 Immunization', 'Preventive Health Care', 'Immunization', 'OSCAR EMR', '2022-03-03', 'Active patients who have received COVID-19 immunizations', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Peter Hutten-Czapski</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Immunization</subCategory>\n		<name>COVID-19 Immunization</name>\n		<definition>Active patients who have received COVID immunizations in the last 36 months.</definition>\n		<framework>OSCAR EMR</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\nCVC terms\nCOVID-19 [COVID-19]\n\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="covid" name="covid" value="\'%COVID%\'" />\n		\n		</params>\n		<range>\n						\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n                        <lowerLimit id="date" label="36 Months" name="Date" value="DATE_SUB( NOW(), INTERVAL 36 MONTH )" />\n\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				 -- count patients that satisfy all 5 requirements\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( fin.covid > 2\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'With Three or More Immunizations\',\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( fin.covid = 2\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'With Two Immunizations\',\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( fin.covid = 1\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'With One Immunization\',\n\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( (1 > fin.covid AND fin.covid_r = 0\n                                                 )\n\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'No Imunizations\',\n\n                                IF( COUNT(fin.patient) > 0,\n                                        SUM(\n                                                IF( ( 2 > fin.covid AND fin.covid_r > 0\n                                                 )\n\n                                                , 1, 0 )\n                                        )\n                                , 0 ) AS \'Refused\'\n	\n			FROM (\n				SELECT  \n					d.demographic_no AS \'patient\',\n					IFNULL( COVID.id, 0 ) AS \'covid\',\n					IFNULL( COVID_r.id, 0 ) AS \'covid_r\'\n					\n				FROM demographic d\n			\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${covid}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no \n				) COVID\n				ON (d.demographic_no = COVID.demographic_no)\n			\n                                LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${covid}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n                                        AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) COVID_r\n                                ON (d.demographic_no = COVID_r.demographic_no)\n\n		\n\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n\n			) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="covid" name="covid" value="\'%COVID%\'" />\n		</params>\n		<range>\n			\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n                        <lowerLimit id="date" label="12 Months" name="Date" value="DATE_SUB( NOW(), INTERVAL 36 MONTH )" />\n\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="ROUND( ABS(DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) / 365.25), 1)" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />		\n			<column id="covidcount" name="IFNULL( COVID.id, \'\' )" title="Count of COVID Immunizations" primary="false" />\n            <column id="preventionDate" name="IFNULL( DATE_FORMAT( DATE(COVID.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Most Recent COVID Immunization Date (mm-dd-yyyy)" primary="false" />\n			<column id="covidrefused" name="IFNULL( COVID_r.refused, \'No\' )" title="COVID Refused Status" primary="false" />\n\n\n\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="ROUND( ABS(DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) / 365.25), 1)" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="covidcount" name="IFNULL( COVID.id, \'\' )" title="Count of COVID Immunizations" primary="false" />\n            <column id="preventionDate" name="IFNULL( DATE_FORMAT( DATE(COVID.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Most Recent Immunization Date (mm-dd-yyyy)" primary="false" />\n			<column id="covidrefused" name="IFNULL( COVID_r.refused, \'No\' )" title="COVID Refused Status" primary="false" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->				\n			SELECT  \n			*\n			FROM demographic d\n		\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id, MAX(p.prevention_date) AS prevention_date\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${covid}\n				AND p.deleted = 0\n				AND p.refused = 0 \n				GROUP BY p.demographic_no\n			) COVID\n			ON (d.demographic_no = COVID.demographic_no)\n		\n			 -- WITH  a refusal \n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date, \'Refused\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${covid}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) COVID_r\n                        ON (d.demographic_no = COVID_r.demographic_no)\n\n\n\n			-- PATIENTS \n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n\n		</query>\n	</drillDownQuery>\n\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Childhood Immunizations');


        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Consider Dementia','CDM','Dementia','DoBC CPQI PSP Panel','2017-08-02','Patients with dementia dx in 2+ bills or 2+ visit encounters or sMMSE < 21 or MOCA < 21 within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Dementia dx in 2+ bills: \"Patient Status: Active\nAnd does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR with 290\nAND with >=2 Bills with the ICD9 diagnosis code starting with 331, 290 in the last 3 years\"\n		  ii) Dementia dx in 2+ visits: \"Patient Status: Active\nAnd does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR with 290\nAND with >=2 Visit Encounters with Snomed code 52448006 or the ICD9 diagnosis code starting with 331, 290 in the last 3 years\"\n		  iii) sMMSE score < 21 OR MOCA < 21: \"Patient Status: Active\nAnd does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR with 290\nAnd has an observation of \"Total sMMSE Score\" with a value < 21 OR MOCA < 21 within the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Dementia</subCategory>\n		<name>Consider Dementia</name>\n		<definition>\n			Patients with dementia dx in 2+ bills or 2+ visit encounters or sMMSE &lt; 21 or MOCA &lt; 21 within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Dementia dx in 2+ bills: \"Patient Status: Active\nAnd does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR with 290\nAND with >=2 Bills with the ICD9 diagnosis code starting with 331, 290 in the last 3 years\"\n		  ii) Dementia dx in 2+ visits: \"Patient Status: Active\nAnd does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR with 290\nAND with >=2 Visit Encounters with Snomed code 52448006 or the ICD9 diagnosis code starting with 331, 290 in the last 3 years\"\n		  iii) sMMSE score &lt; 21 OR MOCA &lt; 21: \"Patient Status: Active\nAnd does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR with 290\nAnd has an observation of \"Total sMMSE Score\" with a value &lt; 21 OR MOCA &lt; 21 within the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"331,290\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"52448006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"331,290\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 331,290 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 331,290/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"MMSE,MOCA\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"21\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"obsdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"obsdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Dementia dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Dementia dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.result &lt; ${obsResult}) THEN 1 ELSE 0 END ) , 0) AS \"Number with sMMSE/MOCA &lt; ${obsResult}\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBSLAST.result AS result,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'331\',\'290\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'52448006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 331,290 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'331\',\'290\') OR LEFT(b.dx_code2, 3) IN (\'331\',\'290\') OR LEFT(b.dx_code3, 3) IN (\'331\',\'290\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'331\',\'290\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'52448006\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- Consider Observation\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type IN ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type IN ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND (DATE(m.dateObserved) &gt; ${lowerLimit.obsdate})\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"331,290\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"52448006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"331,290\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 331,290 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 331,290/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"MMSE,MOCA\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"21\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"obsdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"obsdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"sMMSE/MOCA\" primary=\"false\" />\n			<column id=\"obsDate\" name=\"IFNULL( DATE_FORMAT( OBSLAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Test Date (mm-dd-yyyy)\" primary=\"false\" />\n\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"sMMSE/MOCA\" primary=\"false\" />\n			<column id=\"obsDate\" name=\"IFNULL( DATE_FORMAT( OBSLAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Test Date (mm-dd-yyyy)\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"331\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'331\',\'290\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'52448006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 331,290 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'331\',\'290\') OR LEFT(b.dx_code2, 3) IN (\'331\',\'290\') OR LEFT(b.dx_code3, 3) IN (\'331\',\'290\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'331\',\'290\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'52448006\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Consider OBS here if needed\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type IN ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type IN ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND (DATE(m.dateObserved) &gt; ${lowerLimit.obsdate})\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR (OBSLAST.result IS NOT NULL AND OBSLAST.result &lt; ${obsResult})) )\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Dementia Prevalence','CDM','Dementia','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Dementia.','\ni) Dementia patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 52448006 OR starting with 331 OR 290\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR 290\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Dementia</subCategory>\n		<name>Dementia Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Dementia.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Dementia patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 52448006 OR starting with 331 OR 290\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 52448006 OR starting with 331 OR 290\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"331,290\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"52448006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT DEMENTIA\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Dementia\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT DEMENTIA\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Dementia\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'331\', \'290\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'52448006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"331,290\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"52448006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'331\', \'290\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'52448006\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Active Med Count','Home (Click on the chart to see details)','Polypharmacy','DoBC CPQI PSP Panel','2017-08-02','Number of active patients with an active continuous medication count of 0, 1-4, 5-9 or 10+.','','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>Home (Click on the chart to see details)</category>\n		<subCategory>Polypharmacy</subCategory>\n		<name>Active Med Count</name>\n		<definition>Number of active patients with an active continuous medication count of 0, 1-4, 5-9 or 10+.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\nIF( COUNT(patient) > 0,\nSUM( IF(patient_status = ${pstatus} AND med_COUNT >= 10,1,0)),0) AS \'10+ meds\',\nIF( COUNT(patient) > 0,\nSUM( IF(patient_status = ${pstatus} AND med_COUNT BETWEEN 5 AND 9, 1, 0)),0) AS \'5-9 meds\',\nIF( COUNT(patient) > 0,\nSUM( IF(patient_status = ${pstatus} AND med_COUNT BETWEEN 1 AND 4, 1, 0)),0) AS \'1-4 meds\',\nIF( COUNT(patient) > 0,\nSUM( IF(patient_status = ${pstatus} AND med_COUNT = 0,1,0)),0) AS \'0 meds\'\nFROM (\nSELECT d.demographic_no AS patient, d.patient_status, COUNT(DISTINCT meds.regional_identifier) AS med_count\nFROM demographic d LEFT JOIN(\nSELECT dr.demographic_no, dr.regional_identifier FROM drugs AS dr\nWHERE dr.archived = 0 AND dr.regional_identifier IS NOT NULL AND\ndr.regional_identifier != \'\' AND rx_date &lt;= NOW() AND\n(DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0)\nDAY)) >= NOW() ORDER BY dr.demographic_no) meds\non (d.demographic_no = meds.demographic_no) where d.provider_no LIKE \'${provider}\'\nGROUP BY d.demographic_no\nORDER BY COUNT(DISTINCT meds.regional_identifier) DESC\n) counts\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( last_name, \', \', first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"activeMedCount\" name=\"counts.med_count\" title=\"Active Med Count\" primary=\"false\" />\n			<column id=\"patientStatus\" name=\"patient_status\" title=\"Patient Status\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( last_name, \', \', first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"activeMedCount\" name=\"counts.med_count\" title=\"Active Med Count\" primary=\"false\" />\n			<column id=\"patientStatus\" name=\"patient_status\" title=\"Patient Status\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT demographic_no, patient_status, counts.med_count\nFROM\n  (SELECT d.*, COUNT(DISTINCT meds.regional_identifier) AS med_count\n  FROM demographic d\n  LEFT JOIN(\n    SELECT dr.demographic_no, dr.regional_identifier FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.regional_identifier IS NOT NULL AND\n      dr.regional_identifier != \'\' AND rx_date &lt;= NOW() AND\n      (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0)\n      DAY)) >= NOW()\n    ORDER BY dr.demographic_no\n    ) meds\n  ON (d.demographic_no = meds.demographic_no) where d.provider_no LIKE \'${provider}\'\n  GROUP BY d.demographic_no\n  ORDER BY COUNT(DISTINCT meds.regional_identifier) DESC ,\n    d.demographic_no ASC\n  ) counts\nWHERE patient_status=${pstatus} AND med_count > 0\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName>General - Polypharmacy</sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"10+ meds\" toLabel=\"10+ Rx\"/>\n		<sharedMapping fromLabel=\"5-9 meds\" toLabel=\"5-9 Rx\"/>\n		<sharedMapping fromLabel=\"1-4 meds\" toLabel=\"1-4 Rx\"/>\n		<sharedMapping fromLabel=\"0 meds\" toLabel=\"0 Rx\"/>\n	</sharedMappings>	\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Consider Advanced Care Planning','CDM','Advanced Care Planning','DoBC CPQI PSP Panel','2017-08-02','Patients with advanced care planning dx in 2+ bills or 2+ visit encounters within last 3 years or PPS < 50\n		','\n		  Created for Doctors of BC\n		  i) Advanced Care Planning dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\nAND with >=2 Bills with the billing code starting with V66 in the last 3 years\"\n		  ii) Advanced Care Planning dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\nAND with >=2 Visit Encounters with Snomed diagnosis code 105499002 or the ICD9 diagnosis code starting with V66 in the last 3 years\"\n                  iii) PPS < 50: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002 or starting with V66\nAND with most recent Palliative Performance Scale score < 50\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Advanced Care Planning</subCategory>\n		<name>Consider Advanced Care Planning</name>\n		<definition>\n			Patients with advanced care planning dx in 2+ bills or 2+ visit encounters within last 3 years or PPS &lt; 50\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Advanced Care Planning dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\nAND with >=2 Bills with the billing code starting with V66 in the last 3 years\"\n		  ii) Advanced Care Planning dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\nAND with >=2 Visit Encounters with Snomed diagnosis code 105499002 or the ICD9 diagnosis code starting with V66 in the last 3 years\"\n                  iii) PPS &lt; 50: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002 or starting with V66\nAND with most recent Palliative Performance Scale score &lt; 50\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V66\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"105499002,103735009\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"V66\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 V66 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded V66/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"\'PPS\'\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"50\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Advanced Care Planning dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Advanced Care Planning dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.result &lt; ${obsResult}) THEN 1 ELSE 0 END ) , 0) AS \"Number with PPS &lt; ${obsResult}%\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBSLAST.result AS result,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'V66\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'105499002\',\'103735009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed V66 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'V66\') OR LEFT(b.dx_code2, 3) IN (\'V66\') OR LEFT(b.dx_code3, 3) IN (\'V66\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'V66\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'105499002\',\'103735009\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- Consider Observation\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V66\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"105499002,103735009\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"V66\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 V66 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded V66/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"\'PPS\'\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"50\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"PPS\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"PPS\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"V66\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'V66\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'105499002\',\'103735009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed V66 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'V66\') OR LEFT(b.dx_code2, 3) IN (\'V66\') OR LEFT(b.dx_code3, 3) IN (\'V66\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'V66\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'105499002\',\'103735009\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Consider OBS here if needed\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR (OBSLAST.result IS NOT NULL AND OBSLAST.result &lt; ${obsResult})) )\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Advanced Care Planning Prevalence','CDM','Advanced Care Planning','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Advanced Care Planning.','\ni) Advanced care patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Advanced Care Planning</subCategory>\n		<name>Advanced Care Planning Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Advanced Care Planning.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Advanced care patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 105499002,103735009 or starting with V66\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V66\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"105499002,103735009\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT ADVANCED CARE PLANNING\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Advanced Care Planning\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT ADVANCED CARE PLANNING\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Advanced Care Planning\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'V66\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'105499002\', \'103735009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V66\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"105499002,103735009\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'V66\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'105499002\', \'103735009\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Consider Frailty','CDM','Frailty','DoBC CPQI PSP Panel','2017-08-02','Patients with frailty dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Frailty dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 248279007, 404904002, V15, 797 \nAND with >=2 Bills with the billing code of V15 in the last 3 years\"\n		  ii) Frailty dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 248279007, 404904002, V15, 797 \nAND with >=2 Visit Encounters with Snomed diagnosis code 248279007, 404904002 or the ICD9 diagnosis code of V15, 797 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Frailty</subCategory>\n		<name>Consider Frailty</name>\n		<definition>\n			Patients with frailty dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Frailty dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 248279007, 404904002, V15, 797 \nAND with >=2 Bills with the billing code of V15 in the last 3 years\"\n		  ii) Frailty dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 248279007, 404904002, V15, 797 \nAND with >=2 Visit Encounters with Snomed diagnosis code 248279007, 404904002 or the ICD9 diagnosis code of V15, 797 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V15,797\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"248279007,404904002\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"V15,797\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 V15,797 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded V15,797/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Frailty dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Frailty dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (dxresearch_code IN (\'V15\',\'797\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'248279007\',\'404904002\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed V15,797 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( b.dx_code1 IN (\'V15\',\'797\') OR b.dx_code2 IN (\'V15\',\'797\') OR b.dx_code3 IN (\'V15\',\'797\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND i.code IN (\'V15\',\'797\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'248279007\',\'404904002\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V15,797\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"248279007,404904002\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"V15,797\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 V15,797 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded V15,797/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"V15\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (dxresearch_code IN (\'V15\',\'797\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'248279007\',\'404904002\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed V15,797 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( b.dx_code1 IN (\'V15\',\'797\') OR b.dx_code2 IN (\'V15\',\'797\') OR b.dx_code3 IN (\'V15\',\'797\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND i.code IN (\'V15\',\'797\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'248279007\',\'404904002\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId4,'Frailty Prevalence','CDM','Frailty','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Frailty.','\ni) Frailty patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 248279007, 404904002, V15, 797\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 248279007, 404904002, V15, 797\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Frailty</subCategory>\n		<name>Frailty Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Frailty.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Frailty patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 248279007, 404904002, V15, 797\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 248279007, 404904002, V15, 797\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V15,797\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"248279007,404904002\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT FRAILTY\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Frailty\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT FRAILTY\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Frailty\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (dxresearch_code IN (\'V15\', \'797\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'248279007\', \'404904002\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"V15,797\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"248279007,404904002\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (dxr.dxresearch_code IN (\'V15\', \'797\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'248279007\', \'404904002\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId5,'Consider Anxiety','CDM','Anxiety','DoBC CPQI PSP Panel','2017-08-02','Patients with anxiety dx in 2+ bills or 2+ visit encounters within last 3 years or most recent GAD-7 score >= 10 in the past 3 months\n		','\n		  Created for Doctors of BC\n		  i) Anxiety dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002 OR 197480006 OR starting with 300\nAND with >=2 Bills with the ICD9 diagnosis code starting with 300 in the last 3 years\"\n		  ii) Anxiety dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002 OR 197480006 OR starting with 300\nAND with >=2 Visit Encounters with Snomed diagnosis code 48694002, 197480006 or the ICD9 diagnosis code starting with 300 in the last 3 years\"\n		  iii) GAD-7 score >=10: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002 OR 48694002 OR starting with 300\nAND WITH a most recent GAD-7 score >=10 in the past 3 months\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Anxiety</subCategory>\n		<name>Consider Anxiety</name>\n		<definition>\n			Patients with anxiety dx in 2+ bills or 2+ visit encounters within last 3 years or most recent GAD-7 score &gt;= 10 in the past 3 months\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Anxiety dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002 OR 197480006 OR starting with 300\nAND with >=2 Bills with the ICD9 diagnosis code starting with 300 in the last 3 years\"\n		  ii) Anxiety dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002 OR 197480006 OR starting with 300\nAND with >=2 Visit Encounters with Snomed diagnosis code 48694002, 197480006 or the ICD9 diagnosis code starting with 300 in the last 3 years\"\n		  iii) GAD-7 score &gt;=10: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002 OR 48694002 OR starting with 300\nAND WITH a most recent GAD-7 score &gt;=10 in the past 3 months\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"300\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"48694002,197480006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"300\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 300 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 300/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"\'GAD7\'\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"10\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"obsdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 MONTH )\" />\n			<upperLimit id=\"obsdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Anxiety dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Anxiety dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.result &gt;= ${obsResult}) THEN 1 ELSE 0 END ) , 0) AS \"Number with GAD-7 &gt;= ${obsResult}\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBSLAST.result AS result,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'300\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'48694002\',\'197480006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 300 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'300\') OR LEFT(b.dx_code2, 3) IN (\'300\') OR LEFT(b.dx_code3, 3) IN (\'300\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'300\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'48694002\',\'197480006\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- Consider Observation\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND (DATE(m.dateObserved) &gt; ${lowerLimit.obsdate})\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"300\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"48694002,197480006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"300\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 300 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 300/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"\'GAD7\'\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"10\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"obsdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 MONTH )\" />\n			<upperLimit id=\"obsdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"GAD-7\" primary=\"false\" />\n			<column id=\"obsDate\" name=\"IFNULL( DATE_FORMAT( OBSLAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Test Date (mm-dd-yyyy)\" primary=\"false\" />\n\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"GAD-7\" primary=\"false\" />\n			<column id=\"obsDate\" name=\"IFNULL( DATE_FORMAT( OBSLAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Test Date (mm-dd-yyyy)\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"300\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'300\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'48694002\',\'197480006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 300 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'300\') OR LEFT(b.dx_code2, 3) IN (\'300\') OR LEFT(b.dx_code3, 3) IN (\'300\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'300\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'48694002\',\'197480006\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Consider OBS here if needed\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND (DATE(m.dateObserved) &gt; ${lowerLimit.obsdate})\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId5,'Anxiety Prevalence','CDM','Anxiety','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Anxiety.','\ni) Anxiety patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 48694002, 197480006  OR starting with 300\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002, 197480006  OR starting with 300\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Anxiety</subCategory>\n		<name>Anxiety Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Anxiety.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Anxiety patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 48694002, 197480006  OR starting with 300\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 48694002, 197480006  OR starting with 300\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"300\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"48694002,197480006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT ANXIETY\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Anxiety\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT ANXIETY\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Anxiety\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'300\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'48694002\', \'197480006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"300\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"48694002,197480006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'300\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'48694002\', \'197480006\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId5,'Consider Depression','CDM','Depression','DoBC CPQI PSP Panel','2017-08-02','Patients with depression dx in 2+ bills or 2+ visit encounters within last 3 years or most recent PHQ-9 >= 15 in past 3 months\n		','\n		  Created for Doctors of BC\n		  i) Depression dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311 OR 296\nAND with >=2 Bills with the ICD9 diagnosis code of 50B or starting with 311, 296 in the last 3 years\"\n		  ii) Depression dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311 OR 296\nAND with >= 2 Visit Encounters with Snomed diagnosis code 35489007 or the ICD9 diagnosis code starting with 311 OR 296 in the last 3 years\"\n                  iii) Depression PHQ-9 score >= 15: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007 OR starting with 311 OR 296\nAND WITH a most recent PHQ-9 score >=15 in the past 3 months\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Depression</subCategory>\n		<name>Consider Depression</name>\n		<definition>\n			Patients with depression dx in 2+ bills or 2+ visit encounters within last 3 years or most recent PHQ-9 &gt;= 15 in past 3 months\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Depression dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311 OR 296\nAND with >=2 Bills with the ICD9 diagnosis code of 50B or starting with 311, 296 in the last 3 years\"\n		  ii) Depression dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311 OR 296\nAND with >= 2 Visit Encounters with Snomed diagnosis code 35489007 or the ICD9 diagnosis code starting with 311 OR 296 in the last 3 years\"\n                  iii) Depression PHQ-9 score &gt;= 15: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007 OR starting with 311 OR 296\nAND WITH a most recent PHQ-9 score &gt;=15 in the past 3 months\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"311,296\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"35489007,366979004\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"311,296\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 311,296 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 311,296/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"\'PHQ9\'\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"15\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"obsdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 MONTH )\" />\n			<upperLimit id=\"obsdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Depression dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Depression dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.result &gt;= ${obsResult}) THEN 1 ELSE 0 END ) , 0) AS \"Number with PHQ-9 &gt;= ${obsResult}\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBSLAST.result AS result,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'311\',\'296\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'35489007\',\'366979004\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 311,296 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'311\',\'296\') OR LEFT(b.dx_code2, 3) IN (\'311\',\'296\') OR LEFT(b.dx_code3, 3) IN (\'311\',\'296\')\n     OR b.dx_code1 IN (\'50B\') OR b.dx_code2 IN (\'50B\') OR b.dx_code3 IN (\'50B\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'311\',\'296\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'35489007\',\'366979004\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- Consider Observation\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND (DATE(m.dateObserved) &gt; ${lowerLimit.obsdate})\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"311,296\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"35489007,366979004\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"311,296\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 311,296 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 311,296/ICD9\" value=\"2\" />\n			<parameter id=\"obsName\" name=\"Observation Name\" value=\"\'PHQ9\'\" />\n			<parameter id=\"obsResult\" name=\"Observation Result\" value=\"15\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"obsdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 MONTH )\" />\n			<upperLimit id=\"obsdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"PHQ9\" primary=\"false\" />\n			<column id=\"obsDate\" name=\"IFNULL( DATE_FORMAT( OBSLAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Test Date (mm-dd-yyyy)\" primary=\"false\" />\n\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"observation\" name=\"IFNULL( OBSLAST.result, \'NA\')\" title=\"PHQ9\" primary=\"false\" />\n			<column id=\"obsDate\" name=\"IFNULL( DATE_FORMAT( OBSLAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Test Date (mm-dd-yyyy)\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"311\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'311\',\'296\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'35489007\',\'366979004\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 311,296 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'311\',\'296\') OR LEFT(b.dx_code2, 3) IN (\'311\',\'296\') OR LEFT(b.dx_code3, 3) IN (\'311\',\'296\')\n     OR b.dx_code1 IN (\'50B\') OR b.dx_code2 IN (\'50B\') OR b.dx_code3 IN (\'50B\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'311\',\'296\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'35489007\',\'366979004\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Consider OBS here if needed\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obsName}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obsName}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND (DATE(m.dateObserved) &gt; ${lowerLimit.obsdate})\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n  ) OBSLAST\n  ON (d.demographic_no = OBSLAST.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR (OBSLAST.result IS NOT NULL AND OBSLAST.result &gt;= ${obsResult})) )\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId5,'Depression Prevalence','CDM','Depression','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Depression.','\ni) Depression patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311, 296\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311, 296\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Depression</subCategory>\n		<name>Depression Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Depression.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Depression patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311, 296\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 35489007, 366979004 OR starting with 311, 296\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"311,296\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"35489007,366979004\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT DEPRESSION\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Depression\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT DEPRESSION\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Depression\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'311\', \'296\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'35489007\', \'366979004\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"311,296\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"35489007,366979004\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'311\', \'296\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'35489007\', \'366979004\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);


        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId6,'Consider Diabetes','CDM','Diabetes','DoBC CPQI PSP Panel','2017-08-02','Patients with diabetes dx in 2+ bills or 2+ visit\n		  encounters within last 3 years or most recent HbA1C\n		  >= 6.5% or Glucose Fasting > 7% or current\n		  Insulin (ATC code A10A) or Oral hypoglycemics (ATC\n		  code A10B) medication\n		','BC','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Diabetes</subCategory>\n		<name>Consider Diabetes</name>\n		<definition>\n		  Patients with diabetes dx in 2+ bills or 2+ visit\n		  encounters within last 3 years or most recent HbA1C\n		  &gt;= 6.5% or Glucose Fasting &gt; 7% or current\n		  Insulin (ATC code A10A) or Oral hypoglycemics (ATC\n		  code A10B) medication\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Diabetes dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 73211009 OR starting with 250\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 250 in the last 3 years\"\n		  ii) Diabetes dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 73211009 OR starting with 250\nAND with >= 2 Visit Encounters with Snomed diagnosis code 73211009 or the ICD9 diagnosis code starting with 250 in the last 3 years\"\n                  iii) HbA1C >= 6.5% or Glucose Fasting > 7% or\n                  current Insulin (ATC code A10A) or Oral\n                  hypoglycemics (ATC code A10B) medication: \"Patient\n                  Status: Active AND does not have a Current Problem\n                  List/Profile item code of 73211009 OR starting with\n                  250 AND ( (WITH a most recent [HbA1c >= 6.5% OR (>=\n                  0.065 AND NOT > 1)] OR [Fasting Glucose > 7%] in the\n                  past 1 year) OR (with two or more HbA1c >= 6.5% in\n                  last 5 years) OR (current medication with ATC code\n                  starting with A10A or A10B) )\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"250\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"73211009\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"250\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 250 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 250/ICD9\" value=\"2\" />\n                        <parameter id=\"obs1Name\" name=\"Obs 1 Name\" value=\"\'A1C\'\" />\n                        <parameter id=\"obs1Result\" name=\"Obs 1 Result\" value=\"6.5\" />\n                        <parameter id=\"obs2Name\" name=\"Obs 2 Name\" value=\"\'FBS\'\" />\n                        <parameter id=\"obs2Result\" name=\"Obs 2 Result\" value=\"7.0\" />\n                        <parameter id=\"numOfObs\" name=\"Number of measurements\" value=\"2\" />\n                        <parameter id=\"drugs\" name=\"ATC Code/Class\" value=\"A10A,A10B\" />\n                        <parameter id=\"numOfMeds\" name=\"Heart Failure Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n                        <upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdatelast\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 12 MONTH )\" />\n			<upperLimit id=\"labdatelast\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdateObs\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 5 YEAR )\" />\n			<upperLimit id=\"labdateObs\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Diabetes dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Diabetes dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND\n  (fin.result1 &gt; ${obs1Result} OR (fin.result1 &gt; 0.01*${obs1Result} AND fin.result1 &lt; 1) OR fin.result2 &gt; ${obs2Result} OR fin.cntResult1 &gt;= ${numOfObs} OR fin.medcount &gt;= ${numOfMeds})\n  ) THEN 1 ELSE 0 END ) , 0) AS \"Number with Diabetes Obs/Medication\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBS1LAST.result AS result1,\n    OBS2LAST.result AS result2,\n    OBS1CNT.countOBS AS cntResult1,\n    MEDS.numOfMeds AS medcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'250\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'73211009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 250 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'250\') OR LEFT(b.dx_code2, 3) IN (\'250\') OR LEFT(b.dx_code3, 3) IN (\'250\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'250\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'73211009\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- HbA1C measurement\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs1Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdatelast}\n    AND m.demographicNo &gt; 0\n  ) OBS1LAST\n  ON (d.demographic_no = OBS1LAST.demographic_no) \n  -- Fasting Glucose measurement\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs2Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs2Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdatelast}\n    AND m.demographicNo &gt; 0\n  ) OBS2LAST\n  ON (d.demographic_no = OBS2LAST.demographic_no)\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField, COUNT(m.dataField) AS countOBS\n    FROM measurements m\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\' AND m.dataField &gt;= ${obs1Result}\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdateObs}\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1CNT\n  ON (d.demographic_no = OBS1CNT.demographic_no)  \n  LEFT JOIN (\n    SELECT dr.demographic_no, COUNT(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n--    WHERE dr.archived = 0 AND LEFT(dr.ATC,4) IN ${drugs}\n    WHERE dr.archived = 0 AND dr.ATC LIKE \'A10%\'\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)\n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"250\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"73211009\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"250\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 250 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 250/ICD9\" value=\"2\" />\n                        <parameter id=\"obs1Name\" name=\"Obs 1 Name\" value=\"\'A1C\'\" />\n                        <parameter id=\"obs1Result\" name=\"Obs 1 Result\" value=\"6.5\" />\n                        <parameter id=\"obs2Name\" name=\"Obs 2 Name\" value=\"\'FBS\'\" />\n                        <parameter id=\"obs2Result\" name=\"Obs 2 Result\" value=\"7.0\" />\n                        <parameter id=\"numOfObs\" name=\"Number of measurements\" value=\"2\" />\n                        <parameter id=\"drugs\" name=\"ATC Code/Class\" value=\"A10A,A10B\" />\n                        <parameter id=\"numOfMeds\" name=\"Diabetes Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n                        <upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdatelast\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 12 MONTH )\" />\n			<upperLimit id=\"labdatelast\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdateObs\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 5 YEAR )\" />\n			<upperLimit id=\"labdateObs\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"lastOBS1\" name=\"IFNULL( OBS1LAST.result, \'0\')\" title=\"HbA1C\" primary=\"false\" />\n			<column id=\"testDateOBS1\" name=\"IFNULL( DATE_FORMAT( OBS1LAST.dateObserved, \'%m-%d-%Y\' ), \'0\')\" title=\"HbA1C Test Date (mm-dd-yyyy)\" primary=\"false\" />\n			<column id=\"numOBS1s\" name=\"IFNULL( OBS1CNT.countOBS, \'0\')\" title=\"Num. HbA1C &gt;= 6.5% Last 5yrs\" primary=\"false\" />\n			<column id=\"lastOBS2\" name=\"IFNULL( OBS2LAST.result, \'0\')\" title=\"FBS\" primary=\"false\" />\n			<column id=\"testDateOBS2\" name=\"IFNULL( DATE_FORMAT( OBS2LAST.dateObserved, \'%m-%d-%Y\' ), \'0\')\" title=\"FBS Test Date (mm-dd-yyyy)\" primary=\"false\" />\n                        <column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'0\')\" title=\"Diabetes Medications\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"lastOBS1\" name=\"IFNULL( OBS1LAST.result, \'0\')\" title=\"HbA1C\" primary=\"false\" />\n			<column id=\"testDateOBS1\" name=\"IFNULL( DATE_FORMAT( OBS1LAST.dateObserved, \'%m-%d-%Y\' ), \'0\')\" title=\"HbA1C Test Date (mm-dd-yyyy)\" primary=\"false\" />\n			<column id=\"numOBS1s\" name=\"IFNULL( OBS1CNT.countOBS, \'0\')\" title=\"Num. HbA1C &gt;= 6.5% Last 5yrs\" primary=\"false\" />\n			<column id=\"lastOBS2\" name=\"IFNULL( OBS2LAST.result, \'0\')\" title=\"FBS\" primary=\"false\" />\n			<column id=\"testDateOBS2\" name=\"IFNULL( DATE_FORMAT( OBS2LAST.dateObserved, \'%m-%d-%Y\' ), \'0\')\" title=\"FBS Test Date (mm-dd-yyyy)\" primary=\"false\" />\n                        <column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'0\')\" title=\"Diabetes Medications\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"250\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'250\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'73211009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 250 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'250\') OR LEFT(b.dx_code2, 3) IN (\'250\') OR LEFT(b.dx_code3, 3) IN (\'250\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'250\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'73211009\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- HbA1C measurement\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs1Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdatelast}\n    AND m.demographicNo &gt; 0\n  ) OBS1LAST\n  ON (d.demographic_no = OBS1LAST.demographic_no) \n  -- Fasting Glucose measurement\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField AS result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs2Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs2Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdatelast}\n    AND m.demographicNo &gt; 0\n  ) OBS2LAST\n  ON (d.demographic_no = OBS2LAST.demographic_no)\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField, COUNT(m.dataField) AS countOBS\n    FROM measurements m\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\' AND m.dataField &gt;= ${obs1Result}\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdateObs}\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1CNT\n  ON (d.demographic_no = OBS1CNT.demographic_no)\n  LEFT JOIN (\n    SELECT dr.demographic_no, COUNT(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n--    WHERE dr.archived = 0 AND LEFT(dr.ATC,4) IN ${drugs}\n    WHERE dr.archived = 0 AND dr.ATC LIKE \'A10%\'\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)\n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND (\n    dxr.dxresearch_code IS NULL AND\n    ( (BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills})  OR\n      (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR\n      ( (OBS1LAST.result IS NOT NULL AND (OBS1LAST.result &gt; ${obs1Result} OR (OBS1LAST.result &gt; 0.01*${obs1Result} AND OBS1LAST.result &lt; 1))) OR\n        (OBS2LAST.result IS NOT NULL AND OBS2LAST.result &gt; ${obs2Result} ) OR\n        (OBS1CNT.countOBS IS NOT NULL AND OBS1CNT.countOBS &gt;= ${numOfObs}) OR\n        (MEDS.numOfMeds IS NOT NULL AND MEDS.numOfMeds &gt;= ${numOfMeds})\n      )\n    )\n  )\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId6,'Diabetes Prevalence','CDM','Diabetes','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Diabetes.','\ni) Diabetes patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 73211009 OR starting with 250\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 73211009 OR starting with 250\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Diabetes</subCategory>\n		<name>Diabetes Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Diabetes.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Diabetes patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 73211009 OR starting with 250\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 73211009 OR starting with 250\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"250\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"73211009\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT DIABETES\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Diabetes\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT DIABETES\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Diabetes\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'250\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'73211009\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"250\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"73211009\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'250\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'73211009\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId6, 'Diabetes with HbA1C by Range', 'CDM', 'Diabetes', 'OSCAR EMR', '2022-02-02', '\n			% of patients with diabetes whose most recent glycemic control in the last 12 months was in the following ranges: \n			HbA1C <= 7%\n			7% < HbA1C <= 8.5%\n			HbA1C > 8.5%\n		', 'Diabetes HbA1c by range', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author></author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Diabetes</subCategory>\n		<name>Diabetes with HbA1C by Range</name>\n		<metricSetName>OntarioMD DM A1C in Range</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>\n			% of patients with diabetes whose most recent glycemic control in the last 12 months was in the following ranges: \n			HbA1C &lt;= 7%\n			7% &lt; HbA1C &lt;= 8.5%\n			HbA1C &gt; 8.5%\n		</definition>\n		<framework>Based on and adapted from AFHTO D2D 3.0 Indicators: Data Dictionary version 4 (Nov 2015)</framework>\n		<frameworkVersion>02-05-2018</frameworkVersion>\n		<notes>Diabetes HbA1c by range</notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-02-02</version>\n		<params>\n			<parameter id="loinc" name="LOINC Code" value="17856-6,4548-4,17855-8,71875-9" />\n			<parameter id="provider" name="Provider Number" value="loggedInProvider" />\n			<parameter id="active" name="Active Patients" value="\'AC\'" />\n			<parameter id="dxcodes" name="Dx Codes" value="250,E10,E11,DB-610,46635009,44054006,73211009" />\n			<parameter id="a1c" name="A1C" value="\'A1C\'" />\n		</params>\n		<range>\n			<lowerLimit id="date" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			\n			<upperLimit id="a1c" label="Max HbA1C Result" name="A1c Tests" value="8.5" />\n			<lowerLimit id="a1c" label="Min HbA1C Result" name="A1c Tests" value="7.0" />\n		</range>\n		<query>\n			SELECT\n\n				IF ( COUNT(fin.patient) &gt; 0,\n				SUM( CASE WHEN fin.hba1c &lt;= ${lowerLimit.a1c} OR fin.hba1c_m &lt;= ${lowerLimit.a1c} THEN 1 ELSE 0 END ) \n				, 0) AS "HbA1C &lt;= 7%",\n				\n				IF ( COUNT(fin.patient) &gt; 0,\n				SUM( CASE WHEN ( fin.hba1c &gt; ${lowerLimit.a1c} AND fin.hba1c &lt;= ${upperLimit.a1c} ) OR ( fin.hba1c_m &gt; ${lowerLimit.a1c} AND fin.hba1c_m &lt;= ${upperLimit.a1c} )  THEN 1 ELSE 0 END ) \n				, 0) AS "7% &lt; HbA1C &lt;= 8.5%",\n				\n				IF ( COUNT(fin.patient) &gt; 0,\n				SUM( IF(IFNULL(fin.hba1c,0) = 0 AND IFNULL(fin.hba1c_m,0) = 0 , 1, 0) )\n				, 0) AS "HbA1C not done > 12 months",\n				\n				IF ( COUNT(fin.patient) &gt; 0,\n				SUM( CASE WHEN fin.hba1c &gt; ${upperLimit.a1c} OR fin.hba1c_m &gt; ${upperLimit.a1c} THEN 1 ELSE 0 END )\n				, 0) AS "HbA1C > 8.5%"\n				\n			FROM ( \n				SELECT \n					d.demographic_no AS patient, \n					A1C.dataField AS hba1c,\n					A1C_m.dataField AS hba1c_m\n\n				FROM demographic d \n				INNER JOIN (\n					SELECT demographic_no, MAX(start_date) AS start_date\n                                        FROM dxresearch\n                                        WHERE `status` != "D"\n                                        AND dxresearch_code IN ${dxcodes}\n                                        GROUP BY demographic_no\n                                ) dxr\n                                ON ( d.demographic_no = dxr.demographic_no)\n\n				-- HbA1C measurement\n				LEFT JOIN (\n                                	SELECT m4.demographicNo, m4.dateObserved, m4.dataField\n                                	FROM measurements m4\n                                	RIGHT JOIN (\n                                        	SELECT m1.demographicNo, m1.dateObserved, max(m1.id) AS id\n                                        	FROM measurements m1\n                                        	RIGHT JOIN (\n                                               		SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                                	FROM measurements\n                                                	WHERE type = ${a1c}\n                                                	AND demographicNo > 0\n                                                	AND dateObserved > ${lowerLimit.date}\n\n                                                	GROUP BY demographicNo\n                                        	) m2\n                                        	ON m1.dateObserved = m2.dateObserved\n                                        	AND m1.demographicNo = m2.demographicNo\n                                        	AND m1.type = ${a1c}\n                                        	GROUP BY m1.demographicNo, m1.dateObserved\n                                	) m3\n                                	ON m4.id = m3.id\n\n                        	) A1C_m\n                        	ON (d.demographic_no = A1C_m.demographicNo)\n\n				LEFT JOIN (\n					SELECT m4.demographicNo, m4.dateObserved, m4.dataField\n					FROM measurements m4\n					RIGHT JOIN (\n                                	  	SELECT m.demographicNo, m.dateObserved, max(m.id) AS id\n                                	  	FROM measurements m\n                                	  	RIGHT JOIN (\n                                        		SELECT m2.demographicNo, m2.type, MAX(m2.dateObserved) AS dateObserved\n                                        		FROM measurements m2\n                                        		JOIN measurementsExt me\n                                        		ON m2.id = me.measurement_id\n                                        		JOIN measurementMap mm\n                                        		ON me.val = mm.`name`\n                                        		WHERE me.keyval = "name"\n                                        		AND mm.loinc_code IN ${loinc}\n							AND m2.dateObserved > ${lowerLimit.date}\n                                        		GROUP BY m2.demographicNo, m2.type\n                                		) m1\n                                		ON m.type = m1.type\n                                		AND m.dateObserved = m1.dateObserved\n                                		AND m.demographicNo = m1.demographicNo\n						GROUP BY m.demographicNo, m.type, m.dateObserved\n					) m3\n					ON m4.id = m3.id\n\n				) A1C \n				ON (d.demographic_no = A1C.demographicNo) \n\n				\n				WHERE d.patient_status = ${active} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0\n			) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-02-02</version>\n		<params>\n			<parameter id="loinc" name="LOINC Code" value="17856-6,4548-4,17855-8,71875-9" />\n			<parameter id="provider" name="Provider Number" value="loggedInProvider" />\n			<parameter id="active" name="Active Patients" value="\'AC\'" />\n			<parameter id="dxcodes" name="Dx Codes" value="250,E10,E11,DB-610,46635009,44054006,73211009" />\n			<parameter id="a1c" name="A1C" value="\'A1C\'" />\n		</params>\n		\n		<range>\n			<lowerLimit id="date" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n\n			<upperLimit id="a1c" label="Max HbA1C Result" name="A1c Tests" value="8.5" />\n                        <lowerLimit id="a1c" label="Min HbA1C Result" name="A1c Tests" value="7.0" />\n\n		</range>\n		\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="a1c" name="IFNULL( A1C_m0.dataField, \'\')" title="Latest HbA1C Test Value" primary="false" />\n			<column id="a1cDate" name="IFNULL( DATE_FORMAT( A1C_m0.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Latest HbA1c Test Value (mm-dd-yyyy)" primary="false" />\n	<!--		<column id="codeSystem" name="CONCAT( dxr.coding_system, \' \', dxr.dxresearch_code )" title="Dx System/Code" primary="false" />\n	-->		<column id="lastappdate" name="IFNULL(  DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n			<column id="nextappdate" name="IFNULL(  DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="a1c" name="IFNULL( A1C_m0.dataField, \'\')" title="Latest HbA1C Test Value" primary="false" />\n                        <column id="a1cDate" name="IFNULL( DATE_FORMAT( A1C_m0.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Latest HbA1c Test Value (mm-dd-yyyy)" primary="false" />\n        <!--            <column id="codeSystem" name="CONCAT( dxr.coding_system, \' \', dxr.dxresearch_code )" title="Dx System/Code" primary="false" />\n        -->             <column id="lastappdate" name="IFNULL(  DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL(  DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n\n		</exportColumns>\n		<query>	\n			SELECT *	\n			FROM demographic d \n			INNER JOIN (\n				SELECT demographic_no, MAX(start_date) AS start_date\n                                FROM dxresearch\n                                WHERE `status` != "D"\n                                AND dxresearch_code IN ${dxcodes}\n                                GROUP BY demographic_no\n\n                        ) dxr\n                        ON ( d.demographic_no = dxr.demographic_no)\n\n\n			LEFT JOIN (\n                                SELECT m4.demographicNo, m4.dateObserved, m4.dataField\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                        SELECT m1.demographicNo, m1.dateObserved, max(m1.id) AS id\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n                                                SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE type = ${a1c}\n                                                AND demographicNo > 0\n						AND dateObserved > ${lowerLimit.date}\n\n                                                GROUP BY demographicNo\n                                        ) m2\n                                        ON m1.dateObserved = m2.dateObserved\n                                        AND m1.demographicNo = m2.demographicNo\n                                        AND m1.type = ${a1c}\n                                        GROUP BY m1.demographicNo, m1.dateObserved\n                                ) m3\n                                ON m4.id = m3.id\n\n                        ) A1C_m\n                        ON (d.demographic_no = A1C_m.demographicNo)\n\n			LEFT JOIN (\n                                SELECT m4.demographicNo, m4.dateObserved, m4.dataField\n				FROM measurements m4	\n				RIGHT JOIN (	\n                                	SELECT m1.demographicNo, m1.dateObserved, max(m1.id) AS id\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                       		SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                        	FROM measurements\n                                        	WHERE type = ${a1c}\n                                        	AND demographicNo > 0\n                                        	GROUP BY demographicNo\n                                	) m2\n                                	ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${a1c}\n					GROUP BY m1.demographicNo, m1.dateObserved\n				) m3\n				ON m4.id = m3.id\n\n                        ) A1C_m0\n                        ON (d.demographic_no = A1C_m0.demographicNo)\n\n			LEFT JOIN (\n                                SELECT m.demographicNo, m.id, m.dataField, m.dateObserved\n                                FROM measurements m\n                                RIGHT JOIN (\n                                        SELECT m2.demographicNo, m2.type, MAX(m2.dateObserved) AS dateObserved\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loinc}\n                                        AND m2.dateObserved > ${lowerLimit.date}\n                                        GROUP BY m2.demographicNo, m2.type\n                                ) m1\n                                ON m.type = m1.type\n                                AND m.dateObserved = m1.dateObserved\n                                AND m.demographicNo = m1.demographicNo\n                                ORDER BY m.id DESC\n\n                        ) A1C\n                        ON (d.demographic_no = A1C.demographicNo)\n\n			-- Last Seen Date\n			LEFT JOIN (\n        			SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n        			FROM appointment a, demographic d\n        			WHERE a.demographic_no = d.demographic_no\n        			AND d.provider_no = \'${provider}\'\n        			AND ${upperLimit.date} > DATE(a.appointment_date)\n        			AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n        			AND a.demographic_no > 0\n        			GROUP BY a.demographic_no\n			) app1\n			ON (d.demographic_no = app1.demographic_no)\n\n			-- Next Appointment Date\n			LEFT JOIN (\n        			SELECT a.demographic_no, a.appointment_date\n        			FROM appointment a, demographic d\n        			WHERE a.demographic_no = d.demographic_no\n        			AND d.provider_no = \'${provider}\'\n        			AND DATE(a.appointment_date) >= ${upperLimit.date}\n        			AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n        			AND a.demographic_no > 0\n        			GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n			) app2\n			ON (d.demographic_no = app2.demographic_no)\n\n			WHERE d.patient_status = ${active} \n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD DM A1C by Range</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="HbA1C &lt;= 7%" toLabel="HbA1C &lt;= 7%"/>\n		<sharedMapping fromLabel="7% &lt; HbA1C &lt;= 8.5%" toLabel="7% &lt; HbA1C &lt;= 8.5%"/>\n		<sharedMapping fromLabel="HbA1C not done &gt; 12 months" toLabel="HbA1C not done &gt; 12 months"/>\n		<sharedMapping fromLabel="HbA1C &gt; 8.5%" toLabel="HbA1C &gt; 8.5%"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD DM A1C in Range');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
    (@dashboardId6, 'Diabetes with HbA1C Testing', 'CDM', 'Diabetes', 'Based on and adapted from HQO\'s PCPM: Priority Measures for System and Practice Levels (Oct 2015)', '2022-03-03', 'Diabetics aged 40 years and older who have had two or more HbA1C tests within the past 12 months', 'The Diabetes with HbA1C Testing Indicator query', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. Copyright 2016</author>\n	<uid>dd40f1c9-f091-4aad-b65e-1c4cf10927e5</uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Diabetes</subCategory>\n		<name>Diabetes with HbA1C Testing</name>\n		<metricSetName>OntarioMD DM A1C Testing Frequency</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Diabetics aged 40 years and older who have had two or more HbA1C tests within the past 12 months</definition>\n		<framework>Based on and adapted from HQO\'s PCPM: Priority Measures for System and Practice Levels (Oct 2015)</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes>This is a test template for the Diabetes with HbA1C Testing Indicator query</notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="Provider Number" value="loggedInProvider" />\n			<parameter id="active" name="Active Patients" value="\'AC\'" />\n			<parameter id="dxcodes" name="Dx Codes" value="250,E10,E11,DB-610,46635009,44054006,7321100" />\n			<parameter id="loinc" name="LOINC Code" value="17856-6,4548-4,17855-8,71875-9 " />\n		</params>\n		<range>\n			<upperLimit id="date" label="To Today" name="Date Range" value="now()" />\n			<lowerLimit id="date" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			\n			<lowerLimit id="date6" label="Last Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 6 MONTH )" />\n			\n			<upperLimit id="a1c" label="Max number A1C Labs" name="A1c Tests" value="2" />\n			<lowerLimit id="a1c" label="Min number A1C Labs" name="A1c Tests" value="0" />\n\n			<lowerLimit id="age" label="Patients older than" name="Age" value="40" />\n		</range>\n		<query>\n			SELECT \n				IF ( COUNT(fin.patient) > 0, \n					 SUM( CASE WHEN fin.a1c >= ${upperLimit.a1c} THEN 1 ELSE 0 END ), \n				0) AS "2+ or More HbA1c", \n			\n				IF ( COUNT(fin.patient) > 0, \n				SUM( CASE WHEN fin.a1c > ${lowerLimit.a1c} AND fin.a1c &lt; ${upperLimit.a1c} AND DATE(fin.dateObserved) >= ${lowerLimit.date6}  THEN 1 ELSE 0 END ), \n				0) AS "Less than 2 HbA1c and Less than 6 months since last",\n			\n				IF ( COUNT(fin.patient) > 0, \n				SUM( CASE WHEN fin.a1c > ${lowerLimit.a1c} AND fin.a1c &lt; ${upperLimit.a1c} AND ${lowerLimit.date6} > DATE(fin.dateObserved) THEN 1 ELSE 0 END )\n				,0) AS "Less than 2 HbA1c and More than 6 months since last"\n				\n			FROM (\n\n				SELECT \n					d.demographic_no AS patient, \n					IFNULL(A1C.a1cnumber,0) AS a1c,\n					IFNULL(A1C.dateObserved, \'\') AS dateObserved\n				FROM demographic d \n				INNER JOIN ( \n					SELECT demographic_no, MAX(start_date) AS start_date\n                                	FROM dxresearch\n                                	WHERE `status` != "D"\n                                	AND dxresearch_code IN ${dxcodes}\n                                	GROUP BY demographic_no\n                        	) dxr\n                        	ON ( d.demographic_no = dxr.demographic_no)\n\n				LEFT JOIN ( \n					SELECT COUNT(m.id) AS a1cnumber, m.demographicNo, m.dateObserved\n					FROM measurements m\n					JOIN (\n						SELECT MAX(`name`) AS \'name\' \n						FROM measurementMap\n						WHERE loinc_code IN ${loinc}\n						GROUP BY `name`\n					) mm\n					ON (mm.`name` = m.type)\n					WHERE DATE(m.dateObserved) > ${lowerLimit.date}\n					AND m.demographicNo > 0\n					GROUP BY m.demographicNo\n				) A1C \n				ON (d.demographic_no = A1C.demographicNo) \n			\n				WHERE d.patient_status = ${active} \n				AND provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n					${lowerLimit.date} ) ) / 365.25 ) >= ${lowerLimit.age} ) \n			) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"clinic (all providers)" ie: value="all"\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="Provider Number" value="loggedInProvider" />\n			<parameter id="active" name="Active Patients" value="\'AC\'" />\n			<parameter id="dxcodes" name="Dx Codes" value="250,E10,E11,DB-610,46635009,44054006,7321100" />\n			<parameter id="loinc" name="LOINC Code" value="17856-6,4548-4,17855-8,71875-9 " />\n		</params>\n		\n		<range>\n			<upperLimit id="date" label="To Today" name="Date Range" value="now()" />\n			<lowerLimit id="date" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			\n			<lowerLimit id="date6" label="Last Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 6 MONTH )" />\n			\n			<upperLimit id="a1c" label="Max number A1C Labs" name="A1c Tests" value="2" />\n			<lowerLimit id="a1c" label="Min number A1C Labs" name="A1c Tests" value="0" />\n\n			<lowerLimit id="age" label="Patients older than" name="Age" value="40" />\n		</range>\n		\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n		 	<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dxDate" name="IFNULL( DATE_FORMAT( dxr.start_date, \'%m-%d-%Y\' ), \'\')" title="Most Recent Diabetes Diagnosis Date (mm-dd-yyyy)" primary="false" />\n                        <column id="a1c" name="IFNULL(A1C.a1cnumber,0)" title="Count of HbA1c Tests in Last 12 Months" primary="false" />\n                        <column id="hbA1cmostdate" name="IFNULL( DATE_FORMAT( A1C.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Latest HbA1c Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n\n		</displayColumns>\n		\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />			\n		 	<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n		        <column id="dxDate" name="IFNULL( DATE_FORMAT( dxr.start_date, \'%m-%d-%Y\' ), \'\')" title="Most Recent Diabetes Diagnosis Date (mm-dd-yyyy)" primary="false" />\n			<column id="a1c" name="IFNULL(A1C.a1cnumber,0)" title="Count of HbA1c Tests in Last 12 Months" primary="false" />\n                        <column id="hbA1cmostdate" name="IFNULL( DATE_FORMAT( A1C.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Latest HbA1c Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n		</exportColumns>\n		<query>\n			SELECT\n			*\n			FROM demographic d \n			INNER JOIN (\n				SELECT demographic_no, MAX(start_date) AS start_date\n				FROM dxresearch\n				WHERE `status` != "D"\n				AND dxresearch_code IN ${dxcodes}\n				GROUP BY demographic_no\n\n			) dxr \n			ON ( d.demographic_no = dxr.demographic_no) \n		\n			LEFT JOIN ( \n				SELECT COUNT(m.id) AS a1cnumber, m.demographicNo, MAX(m.dateObserved) AS dateObserved\n				FROM measurements m\n				JOIN (\n					SELECT MAX(`name`) AS \'name\' \n					FROM measurementMap\n					WHERE loinc_code IN ${loinc}\n					GROUP BY `name`\n				) mm\n				ON (mm.`name` = m.type)\n				WHERE DATE(m.dateObserved) > ${lowerLimit.date}\n				AND m.demographicNo > 0\n				GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n			) A1C \n			ON (d.demographic_no = A1C.demographicNo)\n\n			-- Last Seen Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND ${upperLimit.date} > DATE(a.appointment_date)\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n                        ) app1\n                        ON (d.demographic_no = app1.demographic_no)\n\n                        -- Next Appointment Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, a.appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND DATE(a.appointment_date) >= ${upperLimit.date}\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n                        ) app2\n                        ON (d.demographic_no = app2.demographic_no)\n\n			WHERE d.patient_status = ${active} \n			AND provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n				${lowerLimit.date} ) ) / 365.25 ) >= ${lowerLimit.age} )	\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD DM A1C Testing Frequency</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% 2+ or More HbA1c" toLabel="2+ HbA1C in past yr"/>\n		<sharedMapping fromLabel="% Less than 2 HbA1c and Less than 6 months since last" toLabel="&lt; 2 HbA1C in past yr, &lt;= 6 months since last"/>\n		<sharedMapping fromLabel="% Less than 2 HbA1c and More than 6 months since last" toLabel="&lt; 2 HbA1C in past yr, &gt; 6 months since last"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD DM A1C Testing Frequency');

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Consider Heart Failure','CDM','Heart Failure','DoBC CPQI PSP Panel','2017-08-02','Patients with heart failure dx in 2+ bills or 2+ visit encounters within last 3 years or LVEF < 40 OR BNP > 400 OR Current Digoxin OR Metolazone medication\n		','\n		  Created for Doctors of BC\n		  i) Heart Failure dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 428 in the last 3 years\"\n		  ii) Heart Failure dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\nAND with >= 2 Visit Encounters with Snomed diagnosis code 84114007 or the ICD9 diagnosis code starting with 428 in the last 3 years\"\n		  iii) LVEF < 40 OR BNP > 400 OR Current Digoxin OR Metolazone medication: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\nAND ( has an LVEF (Left ventricular ejection fraction) observation and value < 40 OR a BNP observation and value > 400 OR Current Digoxin medication (ATC code C01AA05) OR Current Metolazone medication (ATC code C03BA08)\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Heart Failure</subCategory>\n		<name>Consider Heart Failure</name>\n		<definition>\n			Patients with heart failure dx in 2+ bills or 2+ visit encounters within last 3 years or LVEF &lt; 40 OR BNP &gt; 400 OR Current Digoxin OR Metolazone medication\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Heart Failure dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 428 in the last 3 years\"\n		  ii) Heart Failure dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\nAND with >= 2 Visit Encounters with Snomed diagnosis code 84114007 or the ICD9 diagnosis code starting with 428 in the last 3 years\"\n		  iii) LVEF &lt; 40 OR BNP &gt; 400 OR Current Digoxin OR Metolazone medication: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\nAND ( has an LVEF (Left ventricular ejection fraction) observation and value &lt; 40 OR a BNP observation and value &gt; 400 OR Current Digoxin medication (ATC code C01AA05) OR Current Metolazone medication (ATC code C03BA08)\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"428\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"84114007\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"428\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 428 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 428/ICD9\" value=\"2\" />\n                        <parameter id=\"obs1Name\" name=\"Obs 1 Name\" value=\"\'LVEF\'\" />\n                        <parameter id=\"obs1Result\" name=\"Obs 1 Result\" value=\"40\" />\n                        <parameter id=\"obs2Name\" name=\"Obs 2 Name\" value=\"\'BNP\'\" />\n                        <parameter id=\"obs2Result\" name=\"Obs 2 Result\" value=\"400\" />\n			<parameter id=\"drugs\" name=\"ATC Code/Class\" value=\"C01AA05,C03BA08\" />\n			<parameter id=\"numOfMeds\" name=\"Heart Failure Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Heart Failure dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Heart Failure dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND ( fin.result1 &lt; ${obs1Result} OR fin.result2 &gt; ${obs2Result} OR fin.medcount &gt;= ${numOfMeds})) THEN 1 ELSE 0 END ) , 0) AS \"Number with LVEF &lt; ${obs1Result} OR BNP &gt; ${obs2Result} OR current Digoxin/Metolazone\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBS1LAST.result AS result1,\n    OBS2LAST.result AS result2,\n    MEDS.numOfMeds AS medcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'428\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'84114007\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 428 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'428\') OR LEFT(b.dx_code2, 3) IN (\'428\') OR LEFT(b.dx_code3, 3) IN (\'428\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'428\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'84114007\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- LVEF measurement\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs1Name}\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs1Name}\n    AND m.dataField NOT LIKE \'>%\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1LAST\n  ON (d.demographic_no = OBS1LAST.demographic_no) \n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs2Name}\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs2Name}\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS2LAST\n  ON (d.demographic_no = OBS2LAST.demographic_no)\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC IN ${drugs}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"428\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"84114007\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"428\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 428 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 428/ICD9\" value=\"2\" />\n                        <parameter id=\"obs1Name\" name=\"Obs 1 Name\" value=\"\'LVEF\'\" />\n                        <parameter id=\"obs1Result\" name=\"Obs 1 Result\" value=\"40\" />\n                        <parameter id=\"obs2Name\" name=\"Obs 2 Name\" value=\"\'BNP\'\" />\n                        <parameter id=\"obs2Result\" name=\"Obs 2 Result\" value=\"400\" />\n			<parameter id=\"drugs\" name=\"ATC Code/Class\" value=\"C01AA05,C03BA08\" />\n			<parameter id=\"numOfMeds\" name=\"Heart Failure Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"obs1last\" name=\"IFNULL( OBS1LAST.result, \'NA\')\" title=\"LVEF\" primary=\"false\" />\n			<column id=\"obs2last\" name=\"IFNULL( OBS2LAST.result, \'NA\')\" title=\"BNP\" primary=\"false\" />\n			<column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'NA\')\" title=\"Digoxin/Metolazone Medications\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"obs1last\" name=\"IFNULL( OBS1LAST.result, \'NA\')\" title=\"LVEF\" primary=\"false\" />\n			<column id=\"obs2last\" name=\"IFNULL( OBS2LAST.result, \'NA\')\" title=\"BNP\" primary=\"false\" />\n			<column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'NA\')\" title=\"Digoxin/Metolazone Medications\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"428\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'428\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'84114007\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 428 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'428\') OR LEFT(b.dx_code2, 3) IN (\'428\') OR LEFT(b.dx_code3, 3) IN (\'428\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'428\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'84114007\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- LVEF measurement\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs1Name}\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs1Name}\n    AND m.dataField NOT LIKE \'>%\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1LAST\n  ON (d.demographic_no = OBS1LAST.demographic_no) \n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs2Name}\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs2Name}\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS2LAST\n  ON (d.demographic_no = OBS2LAST.demographic_no)\n    LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC IN ${drugs}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)\n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND dxr.dxresearch_code IS NULL AND (\n    (BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR\n    (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR\n    ((OBS1LAST.result IS NOT NULL AND OBS1LAST.result &lt; ${obs1Result}) OR (OBS2LAST.result IS NOT NULL AND OBS2LAST.result &gt; ${obs2Result}) OR (MEDS.numOfMeds IS NOT NULL AND MEDS.numOfMeds &gt;= ${numOfMeds}) ))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Heart Failure Prevalence','CDM','Heart Failure','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Heart Failure.','\ni) HF patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 84114007 OR starting with 428\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Heart Failure</subCategory>\n		<name>Heart Failure Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Heart Failure.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) HF patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 84114007 OR starting with 428\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 84114007 OR starting with 428\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"428\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"84114007\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT HEART FAILURE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Heart Failure\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT HEART FAILURE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Heart Failure\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'428\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'84114007\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"428\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"84114007\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'428\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'84114007\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Consider Hypertension','CDM','Hypertension','DoBC CPQI PSP Panel','2017-08-02','Patients with hypertension dx in 2+ bills or 2+ visit encounters within last 3 years or most recent BP > 140/90 or 2+ BP > 140/90 in last 2 years\n		','\n		  Created for Doctors of BC\n		  i) Hypertension dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\nAND with ?2 Bills with the ICD9 diagnosis code starting with 401 in the last 3 years\"\n		  ii) Hypertension dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\nAND with ?2 Visit Encounters with Snomed diagnosis code 38341003 or the ICD9 diagnosis code starting with 401 in the last 3 years\"\n		  iii) BP > 140/90: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\nAND WITH  the a most recent Blood Pressure observation > 140/90 OR 2+ Blood Pressures documented >140/90 in the last 2 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Hypertension</subCategory>\n		<name>Consider Hypertension</name>\n		<definition>\n			Patients with hypertension dx in 2+ bills or 2+ visit encounters within last 3 years or most recent BP &gt; 140/90 or 2+ BP > 140/90 in last 2 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Hypertension dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\nAND with ?2 Bills with the ICD9 diagnosis code starting with 401 in the last 3 years\"\n		  ii) Hypertension dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\nAND with ?2 Visit Encounters with Snomed diagnosis code 38341003 or the ICD9 diagnosis code starting with 401 in the last 3 years\"\n		  iii) BP &gt; 140/90: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\nAND WITH  the a most recent Blood Pressure observation > 140/90 OR 2+ Blood Pressures documented >140/90 in the last 2 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"401\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"38341003\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"401\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 401 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 401/ICD9\" value=\"2\" />\n			<parameter id=\"numOfBPs\" name=\"Number of BP measurements\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n                        <upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 2 YEAR )\" />\n			<upperLimit id=\"labdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Hypertension dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Hypertension dx in ${numOfVisits}+ visits\",\n\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND ((fin.lastBP REGEXP \'1[4-9][1-9]/[0-9]{1,3}\' OR fin.lastBP REGEXP \'2[0-9][0-9]/[0-9]{1,3}\' OR\n      fin.lastBP REGEXP \'[0-9]{1,3}/9[1-9]{1}\' OR fin.lastBP REGEXP \'[0-9]{1,3}/1[0-9]{2}\') OR (fin.countBP &gt;= ${numOfBPs})) ) THEN 1 ELSE 0 END ) , 0) AS \"BP &gt; 140/90\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    LAST.bp AS lastBP,\n    BP2.countBP AS countBP,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'401\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'38341003\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 401 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'401\') OR LEFT(b.dx_code2, 3) IN (\'401\') OR LEFT(b.dx_code3, 3) IN (\'401\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'401\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'38341003\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- Last BP measurement\n  LEFT JOIN (\n    SELECT m.demographicNo AS demographic_no, m.dataField AS bp, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = \'BP\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = \'BP\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) LAST\n  ON (d.demographic_no = LAST.demographic_no) \n  -- Two of more BP > 140/90 in last two years\n  LEFT JOIN ( \n    SELECT m.demographicNo as demographic_no, m.dataField as bp, count(m.dataField) as countBP\n    FROM measurements m\n    WHERE m.type = \'BP\'\n    AND DATE(m.dateObserved) > ${lowerLimit.labdate}\n    AND (m.dataField REGEXP \'1[4-9][1-9]/[0-9]{1,3}\' OR m.dataField REGEXP \'2[0-9][0-9]/[0-9]{1,3}\' OR\n      m.dataField REGEXP \'[0-9]{1,3}/9[1-9]{1}\' OR m.datafield REGEXP \'[0-9]{1,3}/1[0-9]{2}\')\n    AND m.demographicNo > 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n  ) BP2\n  ON (d.demographic_no = BP2.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"401\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"38341003\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"401\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 401 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 401/ICD9\" value=\"2\" />\n			<parameter id=\"numOfBPs\" name=\"Number of BP measurements\" value=\"2\" />\n\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n                        <upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 2 YEAR )\" />\n			<upperLimit id=\"labdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"lastBP\" name=\"IFNULL( LAST.bp, \'NA\')\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"testDateBP\" name=\"IFNULL( DATE_FORMAT( LAST.dateObserved, \'%m-%d-%Y\' ), \'NA\')\" title=\"Date (yyyy-mm-dd)\" primary=\"false\" />\n			<column id=\"numBPs\" name=\"IFNULL( BP2.countBP, \'0\')\" title=\"BPs>140/90 Last 2yrs\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"lastBP\" name=\"IFNULL( LAST.bp, \'\')\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"testDateBP\" name=\"IFNULL( DATE_FORMAT( LAST.dateObserved, \'%m-%d-%Y\' ), \'\')\" title=\"Date (yyyy-mm-dd)\" primary=\"false\" />\n			<column id=\"numBPs\" name=\"IFNULL( BP2.countBP, \'0\')\" title=\"BPs>140/90 Last 2yrs\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"401\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'401\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'38341003\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 401 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'401\') OR LEFT(b.dx_code2, 3) IN (\'401\') OR LEFT(b.dx_code3, 3) IN (\'401\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'401\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'38341003\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  -- Last BP measurement\n  LEFT JOIN (\n    SELECT m.demographicNo AS demographic_no, m.dataField AS bp, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = \'BP\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = \'BP\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) LAST\n  ON (d.demographic_no = LAST.demographic_no) \n  -- Two of more BP > 140/90 in last two years\n  LEFT JOIN ( \n    SELECT m.demographicNo as demographic_no, m.dataField as bp, count(m.dataField) as countBP\n    FROM measurements m\n    WHERE m.type = \'BP\'\n    AND DATE(m.dateObserved) > ${lowerLimit.labdate}\n    AND (m.dataField REGEXP \'1[4-9][1-9]/[0-9]{1,3}\' OR m.dataField REGEXP \'2[0-9][0-9]/[0-9]{1,3}\' OR\n      m.dataField REGEXP \'[0-9]{1,3}/9[1-9]{1}\' OR m.datafield REGEXP \'[0-9]{1,3}/1[0-9]{2}\')\n    AND m.demographicNo > 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n  ) BP2\n  ON (d.demographic_no = BP2.demographic_no) \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n\n  AND ( dxr.dxresearch_code IS NULL AND (\n  (BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR\n  (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR\n  (LAST.bp REGEXP \'1[4-9][1-9]/[0-9]{1,3}\' OR LAST.bp REGEXP \'2[0-9][0-9]/[0-9]{1,3}\' OR\n  LAST.bp REGEXP \'[0-9]{1,3}/9[1-9]{1}\' OR LAST.bp REGEXP \'[0-9]{1,3}/1[0-9]{2}\') OR\n  (BP2.countBP IS NOT NULL AND BP2.countBP &gt; ${numOfBPs})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Hypertension Prevalence','CDM','Hypertension','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Hypertension.','\ni) HTN patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 38341003 OR starting with 401\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Hypertension</subCategory>\n		<name>Hypertension Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Hypertension.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) HTN patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 38341003 OR starting with 401\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 38341003 OR starting with 401\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"401\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"38341003\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT HYPERTENSION\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Hypertension\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT HYPERTENSION\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Hypertension\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'401\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'38341003\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"401\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"38341003\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'401\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'38341003\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Consider Ischemic Cerebrovascular Disease','CDM','Ischemic Cerebrovascular Disease','DoBC CPQI PSP Panel','2017-08-02','\n			Patients with ischemic cerebrovascular disease dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Ischemic Cerebrovascular Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005  OR starting with 430, 431, 433, 434, 435 OR 436\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 430, 431, 433, 434, 435 OR 436 in the last 3 years\"\n		  ii) Ischemic Cerebrovascular Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005  OR starting with 430, 431, 433, 434, 435 OR 436\nAND with >= 2 Visit Encounters with Snomed diagnosis code 62914000, 64009001, 195236009, 266257000, 288723005 or the ICD9 diagnosis code starting with  430, 431, 433, 434, 435 OR 436 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Ischemic Cerebrovascular Disease</subCategory>\n		<name>Consider Ischemic Cerebrovascular Disease</name>\n		<definition>\n			Patients with ischemic cerebrovascular disease dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Ischemic Cerebrovascular Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005  OR starting with 430, 431, 433, 434, 435 OR 436\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 430, 431, 433, 434, 435 OR 436 in the last 3 years\"\n		  ii) Ischemic Cerebrovascular Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005  OR starting with 430, 431, 433, 434, 435 OR 436\nAND with >= 2 Visit Encounters with Snomed diagnosis code 62914000, 64009001, 195236009, 266257000, 288723005 or the ICD9 diagnosis code starting with  430, 431, 433, 434, 435 OR 436 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"430,431,433,434,435,436\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"62914000,64009001,195236009,266257000,288723005\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"430,431,433,434,435,436\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 430,431,433,434,435,436 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 430,431,433,434,435,436/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Ischemic Cerebrovascular Disease dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Ischemic Cerebrovascular Disease dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'62914000\',\'64009001\',\'195236009\',\'266257000\',\'288723005\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 430,431,433,434,435,436 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') OR LEFT(b.dx_code2, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') OR LEFT(b.dx_code3, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'62914000\',\'64009001\',\'195236009\',\'266257000\',\'288723005\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"430,431,433,434,435,436\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"62914000,64009001,195236009,266257000,288723005\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"430,431,433,434,435,436\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 430,431,433,434,435,436 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 430,431,433,434,435,436/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"436\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'62914000\',\'64009001\',\'195236009\',\'266257000\',\'288723005\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 430,431,433,434,435,436 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') OR LEFT(b.dx_code2, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') OR LEFT(b.dx_code3, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'430\',\'431\',\'433\',\'434\',\'435\',\'436\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'62914000\',\'64009001\',\'195236009\',\'266257000\',\'288723005\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Ischemic Cerebrovascular Disease Prevalence','CDM','Ischemic Cerebrovascular Disease','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Ischemic Cerebrovascular Disease.','\ni) Ischemic cerebrovascular disease patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005    OR starting with 430, 431, 433, 434, 435, 436\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005    OR starting with 430, 431, 433, 434, 435, 436\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Ischemic Cerebrovascular Disease</subCategory>\n		<name>Ischemic Cerebrovascular Disease Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Ischemic Cerebrovascular Disease.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Ischemic cerebrovascular disease patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005    OR starting with 430, 431, 433, 434, 435, 436\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 62914000, 64009001, 195236009, 266257000, 288723005    OR starting with 430, 431, 433, 434, 435, 436\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"430,431,433,434,435,436\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"62914000,64009001,195236009,266257000,288723005\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT ISCHEMIC CEREBROVASCULAR DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Ischemic Cerebrovascular Disease\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT ISCHEMIC CEREBROVASCULAR DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Ischemic Cerebrovascular Disease\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'430\', \'431\', \'433\', \'434\', \'435\', \'436\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'62914000\', \'64009001\', \'195236009\', \'266257000\', \'288723005\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"430,431,433,434,435,436\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"62914000,64009001,195236009,266257000,288723005\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'430\', \'431\', \'433\', \'434\', \'435\', \'436\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'62914000\', \'64009001\', \'195236009\', \'266257000\', \'288723005\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Consider Ischemic Heart Disease','CDM','Ischemic Heart Disease','DoBC CPQI PSP Panel','2017-08-02','Patients with ischemic heart disease dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Ischemic Heart Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 414545008  OR starting with 410-414\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 410-414 in the last 3 years\"\n		  ii) Ischemic Heart Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 414545008  OR starting with 410-414\nAND with >= 2 Visit Encounters with Snomed diagnosis code of 414545008 or the ICD9 diagnosis code starting with 410-414 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Ischemic Heart Disease</subCategory>\n		<name>Consider Ischemic Heart Disease</name>\n		<definition>\n			Patients with ischemic heart disease dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Ischemic Heart Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 414545008  OR starting with 410-414\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 410-414 in the last 3 years\"\n		  ii) Ischemic Heart Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 414545008  OR starting with 410-414\nAND with >= 2 Visit Encounters with Snomed diagnosis code of 414545008 or the ICD9 diagnosis code starting with 410-414 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"410,411,412,413,414\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"414545008\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"410,411,412,413,414\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 410,411,412,413,414 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 410,411,412,413,414/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Ischemic Heart Disease dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Ischemic Heart Disease dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'414545008\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 410,411,412,413,414 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') OR LEFT(b.dx_code2, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') OR LEFT(b.dx_code3, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'414545008\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"410,411,412,413,414\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"414545008\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"410,411,412,413,414\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 410,411,412,413,414 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 410,411,412,413,414/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"414\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'414545008\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 410,411,412,413,414 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') OR LEFT(b.dx_code2, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') OR LEFT(b.dx_code3, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'410\',\'411\',\'412\',\'413\',\'414\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'414545008\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId7,'Ischemic Heart Disease Prevalence','CDM','Ischemic Heart Disease','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Ischemic Heart Disease.','\ni) Heart disease patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 414545008  OR starting with 410-414\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 414545008  OR starting with 410-414\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Ischemic Heart Disease</subCategory>\n		<name>Ischemic Heart Disease Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Ischemic Heart Disease.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Heart disease patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 414545008  OR starting with 410-414\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 414545008  OR starting with 410-414\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"410,411,412,413,414\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"414545008\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT ISCHEMIC HEART DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Ischemic Heart Disease\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT ISCHEMIC HEART DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Ischemic Heart Disease\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'410\', \'411\', \'412\', \'413\', \'414\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'414545008\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"410,411,412,413,414\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"414545008\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'410\', \'411\', \'412\', \'413\', \'414\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'414545008\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId7, 'Consider Ischemic Heart Disease 2', 'CDM', 'Coronary Artery Disease', 'OSCAR EMR', '2022-02-02', '# of active patients with coronary artery disease (CAD) [ICD9: 410, 411, 412, 413, 414, 429.2 ICD10: I25, I20 SNOMED: D3-13040,D3-10030 IHD,D3-14016,D3-14017,414545008,413439005,413838009,194828000]', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Ischemic Heart Disease</subCategory>\n		<name>Consider Ischemic Heart Disease 2</name>\n		<metricSetName>OntarioMD CAD Identification</metricSetName>\n		<metricLabel></metricLabel>\n		<definition># of active patients with coronary artery disease (CAD) [ICD9: 410, 411, 412, 413, 414, 429.2 ICD10: I25, I20 SNOMED: D3-13040,D3-10030 IHD,D3-14016,D3-14017,414545008,413439005,413838009,194828000]</definition>\n		<framework>OSCAR EMR</framework>\n		<frameworkVersion>03-09-2018</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-09-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="dxcodes" name="Dx Research Codes" value="410,411,412,413,414,4292,I20,I25,D3-13040,D3-10030 IHD,D3-14016,D3-14017,414545008,413439005,413838009,194828000" />\n			<parameter id="billingcode" name="Billing Diagnosis " value="410,411,412,413,414,429" />\n			\n			<parameter id="documentation1" name="documentation1" value="REGEXP \'[[:&lt;:]]CAD[[:>:]]\'" />\n			<parameter id="documentation2" name="documentation2" value="\'%C.A.D.%\'" />\n			<parameter id="documentation3" name="documentation3" value="\'%coronary artery dis%\'" />\n			<parameter id="documentation4" name="documentation4" value="REGEXP \'[[:&lt;:]]CVD[[:>:]]\'" />\n			<parameter id="documentation5" name="documentation5" value="\'%C.V.D%\'" />\n			<parameter id="documentation6" name="documentation6" value="\'%cardiovascular disease%\'" />\n			<parameter id="documentation7" name="documentation7" value="REGEXP \'[[:&lt;:]]IHD[[:>:]]\'" />\n			<parameter id="documentation8" name="documentation8" value="\'%I.H.D.%\'" />\n			<parameter id="documentation9" name="documentation9" value="\'%ischemic hrt dis%\'" />\n			<parameter id="documentation10" name="documentation10" value="\'%ischemic heart dis%\'" />\n		</params>\n		<range>\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion > 0 , 1, 0) ) \n				,0 ) AS "CAD Coded in PROB or HPH",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.note > 0, 1, 0) ) \n				,0 ) AS "Documented as text but not coded",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill >= 2, 1, 0) ) \n				,0 ) AS "Dx in 2+ bills",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND (fin.note > 0 OR fin.bill >= 2), 1, 0) ) \n				,0 ) AS "Total"\n				\n			FROM (\n				SELECT \n					d.demographic_no AS patient,\n					IFNULL(dxr.dxresearch_no, 0) AS dxexclusion,\n					IFNULL(NT.note_id, 0) AS note,\n					IFNULL(BILL.id, 0) AS bill\n					\n				FROM demographic d \n				\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no \n					FROM dxresearch \n					WHERE demographic_no>0 \n					AND  dxresearch_code IN ${dxcodes} \n					AND `status` = "A"\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				)dxr				\n				ON ( d.demographic_no = dxr.demographic_no)\n				\n				-- NOTE\n				LEFT JOIN(\n					SELECT n.demographic_no, n.note_id\n					FROM casemgmt_note n\n					INNER JOIN (\n						SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n						FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n						WHERE c.issue_id = i.issue_id\n						AND ino.id = c.id\n						AND n.note_id = ino.note_id\n						AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n						GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n					) nn\n					ON n.note_id = nn.note_id\n					AND n.archived = 0\n					AND ( n.note ${documentation1} OR\n                                                        n.note LIKE ${documentation2} OR\n                                                        n.note LIKE ${documentation3} OR\n                                                        n.note ${documentation4} OR\n                                                        n.note LIKE ${documentation5} OR\n                                                        n.note LIKE ${documentation6} OR\n                                                        n.note ${documentation7} OR\n                                                        n.note LIKE ${documentation8} OR\n                                                        n.note LIKE ${documentation9} OR\n                                                        n.note LIKE ${documentation10})\n\n					GROUP BY n.demographic_no\n				)NT\n				ON (d.demographic_no = NT.demographic_no)\n				\n				-- WITH two or more bills containing a diagnosis of [410, 411, 412, 413, 414 or 429]\n				LEFT JOIN (\n					SELECT COUNT(distinct boc.id) AS id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.dx IN ${billingcode} \n					GROUP BY boc.demographic_no \n				) BILL\n				ON (d.demographic_no = BILL.demographic_no)\n							\n				WHERE d.patient_status = ${pstatus}  \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-09-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="dxcodes" name="Dx Research Codes" value="410,411,412,413,414,4292,I20,I25,D3-13040,D3-10030 IHD,D3-14016,D3-14017,414545008,413439005,413838009,194828000" />\n			<parameter id="billingcode" name="Billing Diagnosis " value="410,411,412,413,414,429" />\n			\n			<parameter id="documentation1" name="documentation1" value="REGEXP \'[[:&lt;:]]CAD[[:>:]]\'" />\n                        <parameter id="documentation2" name="documentation2" value="\'%C.A.D.%\'" />\n                        <parameter id="documentation3" name="documentation3" value="\'%coronary artery dis%\'" />\n                        <parameter id="documentation4" name="documentation4" value="REGEXP \'[[:&lt;:]]CVD[[:>:]]\'" />\n                        <parameter id="documentation5" name="documentation5" value="\'%C.V.D%\'" />\n                        <parameter id="documentation6" name="documentation6" value="\'%cardiovascular disease%\'" />\n                        <parameter id="documentation7" name="documentation7" value="REGEXP \'[[:&lt;:]]IHD[[:>:]]\'" />\n                        <parameter id="documentation8" name="documentation8" value="\'%I.H.D.%\'" />\n                        <parameter id="documentation9" name="documentation9" value="\'%ischemic hrt dis%\'" />\n                        <parameter id="documentation10" name="documentation10" value="\'%ischemic heart dis%\'" />\n\n		</params>\n		<range>\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dxcode" title="CAD Diagnosis Codes Recorded in Disease Registry" name="IFNULL(dxr.dxresearch_code, \'\')" primary="false" />\n                        <column id="cad_concerns" title="CAD Text Recorded in Ongoing Concerns" name="IFNULL(NT_c.note, \'\')" primary="false" />\n                        <column id="cad_medicalhistory" title="CAD Text Recorded in Medical History" name="IFNULL(NT_m.note, \'\')" primary="false" />\n                        <column id="bill" title="Count of Bills Containing code 410, 411, 412, 413, 414 or 429.2" name="IFNULL(BILL.id, \'\')" primary="false" />\n\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dxcode" title="CAD Diagnosis Codes Recorded in Disease Registry" name="IFNULL(dxr.dxresearch_code, \'\')" primary="false" />\n                        <column id="cad_concerns" title="CAD Text Recorded in Ongoing Concerns" name="IFNULL(NT_c.note, \'\')" primary="false" /> \n			<column id="cad_medicalhistory" title="CAD Text Recorded in Medical History" name="IFNULL(NT_m.note, \'\')" primary="false" />\n                        <column id="bill" title="Count of Bills Containing code 410, 411, 412, 413, 414 or 429.2" name="IFNULL(BILL.id, \'\')" primary="false" />\n\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"414\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n				\n			FROM demographic d \n			\n			LEFT JOIN (\n				SELECT demographic_no, GROUP_CONCAT(dxresearch_code) as dxresearch_code\n				FROM dxresearch \n				WHERE demographic_no>0 \n				AND `status` = "A"\n				AND dxresearch_code IN ${dxcodes} \n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr				\n			ON ( d.demographic_no = dxr.demographic_no)\n			\n			-- NOTE\n			LEFT JOIN(\n				SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n				FROM casemgmt_note n\n				INNER JOIN (\n					SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n					FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n					WHERE c.issue_id = i.issue_id\n					AND ino.id = c.id\n					AND n.note_id = ino.note_id\n					AND i.code = \'Concerns\'\n\n					GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n				) nn\n				ON n.note_id = nn.note_id\n				AND n.archived = 0\n				AND ( n.note ${documentation1} OR\n                                        n.note LIKE ${documentation2} OR\n                                        n.note LIKE ${documentation3} OR\n                                        n.note ${documentation4} OR\n                                        n.note LIKE ${documentation5} OR\n                                        n.note LIKE ${documentation6} OR\n                                        n.note ${documentation7} OR\n                                        n.note LIKE ${documentation8} OR\n                                        n.note LIKE ${documentation9} OR\n                                        n.note LIKE ${documentation10})\n\n				GROUP BY n.demographic_no\n			) NT_c\n			ON (d.demographic_no = NT_c.demographic_no)\n			\n			LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code = \'MedHistory\'\n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note ${documentation1} OR\n                                        n.note LIKE ${documentation2} OR\n                                        n.note LIKE ${documentation3} OR\n                                        n.note ${documentation4} OR\n                                        n.note LIKE ${documentation5} OR\n                                        n.note LIKE ${documentation6} OR\n                                        n.note ${documentation7} OR\n                                        n.note LIKE ${documentation8} OR\n                                        n.note LIKE ${documentation9} OR\n                                        n.note LIKE ${documentation10})\n\n                                GROUP BY n.demographic_no\n                        ) NT_m\n                        ON (d.demographic_no = NT_m.demographic_no)\n\n			-- WITH two or more bills containing a diagnosis of [410, 411, 412, 413, 414 or 429]\n			LEFT JOIN (\n				SELECT boc.demographic_no, COUNT(distinct boc.id) AS id\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boc.id = boi.ch1_id \n				AND boc.status != "D"\n				AND boi.status != "D"\n				AND boi.dx IN ${billingcode} \n				GROUP BY boc.demographic_no \n			) BILL\n			ON (d.demographic_no = BILL.demographic_no)\n						\n			WHERE d.patient_status = ${pstatus}  \n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD CAD Identification</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% CAD Coded in PROB or HPH" toLabel="CAD Coded in PROB or HPH"/>\n		<sharedMapping fromLabel="% Documented as text but not coded" toLabel="Consider CAD: Documented as text but not coded"/>\n		<sharedMapping fromLabel="% Dx in 2+ bills" toLabel="Consider CAD: Dx in 2+ bills"/>\n		<sharedMapping fromLabel="% Total" toLabel="Consider CAD: Total"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD CAD Identification');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId7, 'Coronary Artery Disease Overdue Items', 'CDM', 'Coronary Artery Disease Overdue Items', 'OSCAR EMR', '2022-02-02', '% of patients age 18 and older, with coronary artery disease (CAD) who received testing for any of the following:\n					-Lipid profile screening (ever received a test)\n					-Blood pressure measurement (in last 12 months)\n					-Obesity/overweight screening ', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Ischemic Heart Disease</subCategory>\n		<name>Coronary Artery Disease Overdue Items</name>\n		<metricSetName>OntarioMD CAD Overdue items</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>% of patients age 18 and older, with coronary artery disease (CAD) who received testing for any of the following:\n					-Lipid profile screening (ever received a test)\n					-Blood pressure measurement (in last 12 months)\n					-Obesity/overweight screening (in last 12 months)\n		</definition>\n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n		<frameworkVersion>02-20-2018</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>02-20-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="lipidLoinc" name="LOINC List" value="22748-8,14646-4,14647-2,14927-8" />\n			<parameter id="cadMeasurement" name="CAD Measurement" value="TCHD,TG,LDL,TCHL,HDL" />\n			<parameter id="bloodPressure" name="Blood Pressure" value="\'BP\'" />\n			<parameter id="bmi" name="Body Mass Index" value="\'BMI\'" />\n			<parameter id="wt" name="Weight" value="\'WT\'" />\n			<parameter id="ht" name="Height" value="\'HT\'" />\n			<parameter id="wc" name="Waist Circumference" value="\'WAIS\'" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="dxcodes" name="Dx Research Codes" value="410,411,412,413,414,4292,I20,I25,D3-13040,D3-10030 IHD,D3-14016,D3-14017,414545008,413439005,413838009,194828000" />\n			<parameter id="dxcode" name="Dx Code Range" value="\'414.%\'" />	\n		</params>\n		<range>\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			<lowerLimit id="date" label="12 Months History" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			\n			<lowerLimit id="age" label="Minimum Age" name="Age" value="18" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n\n				IF ( COUNT(fin.patient) > 0,\n				 SUM( IF( fin.dr > 0 AND fin.bp = 0 , 1, 0 ) )\n				,0 ) AS \'% BP overdue\',\n				\n				IF ( COUNT(fin.patient) > 0,\n				 SUM( IF( fin.dr > 0 AND fin.lipid = 0 AND fin.lipid_m = 0 , 1, 0 ) ) \n				,0 ) AS \'% Lipid profile not done\',\n				\n				IF ( COUNT(fin.patient) > 0,\n				 SUM( IF( fin.dr > 0 AND fin.bmi = 0 AND ( fin.ht = 0 OR (fin.ht > 0 AND (fin.wt = 0 AND fin.wc = 0 ))) , 1, 0 ) ) \n				,0 ) AS \'% Obesity screen overdue\'\n			\n			FROM (\n				SELECT \n					d.demographic_no AS patient,\n					IFNULL(dxr.dxresearch_no, 0) AS dr,\n					IFNULL(BP.id, 0) AS bp,\n					IFNULL(LIPID.id, 0) AS lipid,\n					IFNULL(LIPID_m.id, 0) AS lipid_m,\n					IFNULL(BMI.id, 0) AS bmi,\n					IFNULL(HT.id, 0) AS ht,\n					IFNULL(WT.id, 0) AS wt,\n					IFNULL(WC.id, 0) AS wc\n\n				FROM demographic d \n\n				INNER JOIN (\n					SELECT dxresearch_no, demographic_no\n                                        FROM dxresearch\n                                        WHERE demographic_no > 0\n					AND `status` != "D"\n					AND ( dxresearch_code IN ${dxcodes} OR dxresearch_code LIKE ${dxcode} )\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr \n				ON ( d.demographic_no = dxr.demographic_no) \n			\n				-- Lipid Screening\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${lipidLoinc}\n                                        GROUP BY m2.demographicNo\n\n                                ) LIPID\n                                ON (d.demographic_no = LIPID.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT id, dataField, demographicNo\n                                        FROM measurements\n                                        WHERE type in ${cadMeasurement}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                                ) LIPID_m\n                                ON (d.demographic_no = LIPID_m.demographicNo)	\n			\n				-- Blood Pressure\n				LEFT JOIN (\n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${bloodPressure}\n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) BP\n				ON (d.demographic_no = BP.demographicNo)\n			\n				-- BMI Screening\n				-- Look for BMI index or if the height and weight was measured.\n				LEFT JOIN ( \n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${bmi} \n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) BMI \n				ON (d.demographic_no = BMI.demographicNo)\n			\n				-- HEIGHT\n				LEFT JOIN ( \n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${ht} \n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) HT \n				ON (d.demographic_no = HT.demographicNo)\n				\n				-- WEIGHT\n				LEFT JOIN ( \n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${wt} \n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) WT \n				ON (d.demographic_no = WT.demographicNo)\n				\n				-- WAIST CIRCUMFERENCE\n				LEFT JOIN ( \n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${wc} \n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) WC \n				ON (d.demographic_no = WC.demographicNo)\n				\n				WHERE d.patient_status = ${pstatus} \n				AND provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} ) \n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>02-20-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="lipidLoinc" name="LOINC List" value="22748-8,14646-4,14647-2,14927-8" />\n			<parameter id="cadMeasurement" name="CAD Measurement" value="TCHD,TG,LDL,TCHL,HDL" />\n			<parameter id="bloodPressure" name="Blood Pressure" value="\'BP\'" />\n			<parameter id="bmi" name="Body Mass Index" value="\'BMI\'" />\n			<parameter id="wt" name="Weight" value="\'WT\'" />\n			<parameter id="ht" name="Height" value="\'HT\'" />\n			<parameter id="wc" name="Waist Circumference" value="\'WAIS\'" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n                        <parameter id="dxcodes" name="Dx Research Codes" value="410,411,412,413,414,4292,I20,I25,D3-13040,D3-10030 IHD,D3-14016,D3-14017,414545008,413439005,413838009,194828000" />\n			<parameter id="dxcode" name="Dx Code Range" value="\'414.%\'" />\n			<parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\n		</params>\n		<range>\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			<lowerLimit id="date" label="12 Months History" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			\n			<lowerLimit id="age" label="Minimum Age" name="Age" value="18" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n\n			<column id="lipidtype" name="CASE \n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID.dateObserved) >= DATE(LIPID_m.dateObserved)\n                                THEN IFNULL(LIPID.loinc_code, \'\')\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID_m.dateObserved) > DATE(LIPID.dateObserved)\n                                THEN IFNULL(LIPID_m.type,\'\')\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NULL\n                                THEN IFNULL(LIPID.loinc_code, \'\')\n\n                                WHEN LIPID.dateObserved IS NULL AND LIPID_m.dateObserved IS NOT NULL\n                                THEN IFNULL(LIPID_m.type,\'\')\n\n                                ELSE\n                                        \'\' \n                                END" title="Most Recent LIPID Type" primary="false" />\n\n			<column id="lipiddate" name="CASE \n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID.dateObserved) >= DATE(LIPID_m.dateObserved)\n                                THEN LIPID.dataField\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID_m.dateObserved) > DATE(LIPID.dateObserved)\n                                THEN LIPID_m.dataField\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NULL\n                                THEN LIPID.dataField\n\n                                WHEN LIPID.dateObserved IS NULL AND LIPID_m.dateObserved IS NOT NULL\n                                THEN LIPID_m.dataField\n\n                                ELSE\n                                        \'\' \n                                END" title="Most Recent LIPID" primary="false" />\n\n                        <column id="lipiddate" name="CASE \n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID.dateObserved) >= DATE(LIPID_m.dateObserved)\n                                THEN DATE_FORMAT(LIPID.dateObserved, \'%m-%d-%Y\' )\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID_m.dateObserved) > DATE(LIPID.dateObserved)\n                                THEN DATE_FORMAT(LIPID_m.dateObserved, \'%m-%d-%Y\' )\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NULL\n                                THEN DATE_FORMAT(LIPID.dateObserved, \'%m-%d-%Y\' )\n\n                                WHEN LIPID.dateObserved IS NULL AND LIPID_m.dateObserved IS NOT NULL\n                                THEN DATE_FORMAT(LIPID_m.dateObserved, \'%m-%d-%Y\' )\n\n                                ELSE\n                                        \'\' \n                                END" title="Date of Most Recent LIPID (mm-dd-yyyy)" primary="false" />\n			<column id="bp" title="Most Recent BP" name="IFNULL( BP0.dataField, \' \')" primary="false" />\n			<column id="bpdate" title="Date of Most Recent BP (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BP0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n			<column id="bmi" title="Most Recent BMI" name="IFNULL( BMI0.dataField, \' \')" primary="false" />\n			<column id="bmidate" title="Date of Most Recent BMI (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BMI0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n			<column id="ht" title="Most Recent Height" name="IFNULL( HT0.dataField, \' \')" primary="false" />\n			<column id="htdate" title="Date of Most Recent Height (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( HT0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n			<column id="wt" title="Most Recent Weight" name="IFNULL( WT0.dataField, \' \')" primary="false" />\n			<column id="wtdate" title="Date of Most Recent Weight (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WT0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n			<column id="wc" title="Most Recent Waist Circumference" name="IFNULL( WC0.dataField, \' \')" primary="false" />\n			<column id="wcdate" title="Date of Most Recent Waist Circumference (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WC0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n			<column id="lastappdate" name="IFNULL(  DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n            		<column id="nextappdate" name="IFNULL(  DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n<!--\n			<column id="dxcode" title="Dx System/Code" name="CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )" primary="false" />\n-->\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n\n			<column id="lipidtype" name="CASE \n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID.dateObserved) >= DATE(LIPID_m.dateObserved)\n                                THEN IFNULL(LIPID.loinc_code, \'\')\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID_m.dateObserved) > DATE(LIPID.dateObserved)\n                                THEN IFNULL(LIPID_m.type, \'\')\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NULL\n                                THEN IFNULL(LIPID.loinc_code, \'\')\n\n                                WHEN LIPID.dateObserved IS NULL AND LIPID_m.dateObserved IS NOT NULL\n                                THEN IFNULL(LIPID_m.type, \'\')\n\n                                ELSE\n                                        \'\' \n                                END" title="Most Recent LIPID Type" primary="false" />\n\n                        <column id="lipiddate" name="CASE \n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID.dateObserved) >= DATE(LIPID_m.dateObserved)\n                                THEN LIPID.dataField\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID_m.dateObserved) > DATE(LIPID.dateObserved)\n                                THEN LIPID_m.dataField\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NULL\n                                THEN LIPID.dataField\n\n                                WHEN LIPID.dateObserved IS NULL AND LIPID_m.dateObserved IS NOT NULL\n                                THEN LIPID_m.dataField\n\n                                ELSE\n                                        \'\'\n                                END" title="Most Recent LIPID" primary="false" />\n\n                        <column id="lipiddate" name="CASE \n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID.dateObserved) >= DATE(LIPID_m.dateObserved)\n                                THEN DATE_FORMAT(LIPID.dateObserved, \'%m-%d-%Y\' )\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NOT NULL AND DATE(LIPID_m.dateObserved) > DATE(LIPID.dateObserved)\n                                THEN DATE_FORMAT(LIPID_m.dateObserved, \'%m-%d-%Y\' )\n\n                                WHEN LIPID.dateObserved IS NOT NULL AND LIPID_m.dateObserved IS NULL\n                                THEN DATE_FORMAT(LIPID.dateObserved, \'%m-%d-%Y\' )\n\n                                WHEN LIPID.dateObserved IS NULL AND LIPID_m.dateObserved IS NOT NULL\n                                THEN DATE_FORMAT(LIPID_m.dateObserved, \'%m-%d-%Y\' )\n\n                                ELSE\n                                        \'\' \n                                END" title="Date of Most Recent LIPID (mm-dd-yyyy)" primary="false" />\n\n                        <column id="bp" title="Most Recent BP" name="IFNULL( BP0.dataField, \' \')" primary="false" />\n                        <column id="bpdate" title="Date of Most Recent BP (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BP0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n                        <column id="bmi" title="Most Recent BMI" name="IFNULL( BMI0.dataField, \' \')" primary="false" />\n                        <column id="bmidate" title="Date of Most Recent BMI (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BMI0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n                        <column id="ht" title="Most Recent Height" name="IFNULL( HT0.dataField, \' \')" primary="false" />\n                        <column id="htdate" title="Date of Most Recent Height (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( HT0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n                        <column id="wt" title="Most Recent Weight" name="IFNULL( WT0.dataField, \' \')" primary="false" />\n                        <column id="wtdate" title="Date of Most Recent Weight (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WT0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n                        <column id="wc" title="Most Recent Waist Circumference" name="IFNULL( WC0.dataField, \' \')" primary="false" />\n                        <column id="wcdate" title="Date of Most Recent Waist Circumference (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WC0.dateObserved, \'%m-%d-%Y\' ), \' \')" primary="false" />\n                        <column id="lastappdate" name="IFNULL(  DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL(  DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n\n<!--\n			<column id="dxcode" title="Dx System/Code" name="CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' - \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )" primary="false" />\n-->\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d \n			INNER JOIN (\n				SELECT dxresearch_no, demographic_no\n                                FROM dxresearch\n                                WHERE demographic_no > 0\n				AND `status` != "D"\n				AND ( dxresearch_code IN ${dxcodes} OR dxresearch_code LIKE ${dxcode} )\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			) dxr  \n			ON ( d.demographic_no = dxr.demographic_no) \n		\n			-- Lipid Screening\n			 LEFT JOIN (\n                                SELECT m00.id, m00.demographicNo, m00.loinc_code, m00.dataField, m00.dateObserved\n                                FROM (\n                                        SELECT distinct m2.id, m2.demographicNo, m2.dateObserved, m2.dataField, mm.loinc_code\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${lipidLoinc}\n                                ) m00\n                                RIGHT JOIN (\n                                        SELECT m10.demographicNo, m10.dateObserved, MAX(m10.id) AS id\n                                        FROM (\n                                                SELECT distinct m2.id, m2.demographicNo, m2.dateObserved, m2.dataField, mm.loinc_code\n                                                FROM measurements m2\n                                                JOIN measurementsExt me\n                                                ON m2.id = me.measurement_id\n                                                JOIN measurementMap mm\n                                                ON me.val = mm.`name`\n                                                WHERE me.keyval = "name"\n                                                AND mm.loinc_code IN ${lipidLoinc}\n                                        ) m10\n                                        RIGHT JOIN (\n                                                SELECT m1.demographicNo, MAX(m1.dateObserved) AS dateObserved\n                                                FROM (\n                                                        SELECT distinct m2.id, m2.demographicNo, m2.dateObserved, m2.dataField, mm.loinc_code\n                                                        FROM measurements m2\n                                                        JOIN measurementsExt me\n                                                        ON m2.id = me.measurement_id\n                                                        JOIN measurementMap mm\n                                                        ON me.val = mm.`name`\n                                                        WHERE me.keyval = "name"\n                                                        AND mm.loinc_code IN ${lipidLoinc}\n                                                ) m1\n                                                GROUP BY m1.demographicNo\n                                        ) m11\n                                        ON m10.demographicNo = m11.demographicNo\n                                        AND m10.dateObserved = m11.dateObserved\n                                        GROUP BY m10.demographicNo, m10.dateObserved\n                                ) m12\n                                ON m00.id = m12.id\n\n                        ) LIPID\n                        ON (d.demographic_no = LIPID.demographicNo)\n\n\n			LEFT JOIN (\n                                SELECT m4.demographicNo, m4.id, m4.dateObserved, m4.type, m4.dataField\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                        SELECT m1.demographicNo, m1.dateObserved, max(m1.id) AS id\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n                                                SELECT demographicNo, type, MAX(dateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE type IN ${cadMeasurement}\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n                                        ON m1.dateObserved = m2.dateObserved\n                                        AND m1.demographicNo = m2.demographicNo\n                                        AND m1.type IN ${cadMeasurement}\n                                        GROUP BY m1.demographicNo, m1.dateObserved\n                                ) m3\n                                ON m4.id = m3.id\n\n                        ) LIPID_m\n                        ON (d.demographic_no = LIPID_m.demographicNo)\n\n\n			-- Blood Pressure\n			LEFT JOIN (\n                                SELECT m4.id, m4.dataField, m4.demographicNo, m4.dateObserved\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                	SELECT MAX(m1.id) AS id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                        	SELECT m.demographicNo, m.type, MAX(m.dateObserved) as dateObserved\n                                        	FROM measurements m, demographic d\n                                        	WHERE m.demographicNo = d.demographic_no\n                                        	AND d.provider_no = \'${provider}\'\n                                        	AND m.type = ${bloodPressure}\n                                        	AND m.demographicNo > 0\n                                        	GROUP BY m.demographicNo\n                                	) m2\n                                	ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${bloodPressure}\n				 	GROUP BY m1.demographicNo, m1.type, m1.dateObserved	\n				) m3\n                                ON m4.id = m3.id\n\n                        ) BP0\n                        ON (d.demographic_no = BP0.demographicNo)\n\n\n			-- BMI Screening\n			-- Look for BMI index or if the height and weight was measured.\n			LEFT JOIN (\n				SELECT m4.id, m4.dataField, m4.demographicNo, m4.dateObserved\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                	SELECT MAX(m1.id) AS id, m1.demographicNo, m1.type, m1.dateObserved\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                        	SELECT m.demographicNo, m.type, MAX(m.dateObserved) as dateObserved\n                                        	FROM measurements m, demographic d\n                                        	WHERE m.demographicNo = d.demographic_no\n                                        	AND d.provider_no = \'${provider}\'\n                                        	AND m.type = ${bmi}\n                                        	AND m.demographicNo > 0\n                                        	GROUP BY m.demographicNo\n                                	) m2\n                                	ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${bmi}\n					GROUP BY m1.demographicNo, m1.type, m1.dateObserved	\n				) m3\n                                ON m4.id = m3.id\n\n                        ) BMI0\n                        ON (d.demographic_no = BMI0.demographicNo)\n	\n		\n			-- HEIGHT\n			LEFT JOIN (\n				SELECT m4.id, m4.dataField, m4.demographicNo, m4.dateObserved\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                	SELECT MAX(m1.id) AS id, m1.type, m1.demographicNo, m1.dateObserved\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                        	SELECT m.demographicNo, m.type, MAX(m.dateObserved) as dateObserved\n                                        	FROM measurements m, demographic d\n                                        	WHERE m.demographicNo = d.demographic_no\n                                        	AND d.provider_no = \'${provider}\'\n                                        	AND m.type = ${ht}\n                                        	AND m.demographicNo > 0\n                                        	GROUP BY m.demographicNo\n                                	) m2\n                                	ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${ht}\n					GROUP BY m1.demographicNo, m1.type, m1.dateObserved\n				) m3\n                                ON m4.id = m3.id\n                        ) HT0\n                        ON (d.demographic_no = HT0.demographicNo)\n\n\n			-- WEIGHT\n			LEFT JOIN (\n				SELECT m4.id, m4.dataField, m4.demographicNo, m4.dateObserved\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                	SELECT MAX(m1.id) AS id, m1.type, m1.demographicNo, m1.dateObserved\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                        	SELECT m.demographicNo, m.type, MAX(m.dateObserved) as dateObserved\n                                        	FROM measurements m, demographic d\n                                        	WHERE m.demographicNo = d.demographic_no\n                                        	AND d.provider_no = \'${provider}\'\n                                        	AND m.type = ${wt}\n                                        	AND m.demographicNo > 0\n                                        	GROUP BY m.demographicNo\n                                	) m2\n                                	ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${wt}\n				        GROUP BY m1.demographicNo, m1.type, m1.dateObserved\n                                ) m3\n                                ON m4.id = m3.id\n                        ) WT0\n                        ON (d.demographic_no = WT0.demographicNo)\n	\n\n			-- WAIST CIRCUMFERENCE\n			LEFT JOIN (\n				SELECT m4.id, m4.dataField, m4.demographicNo, m4.dateObserved\n                                FROM measurements m4\n                                RIGHT JOIN (\n                                	SELECT MAX(m1.id) AS id, m1.type, m1.demographicNo, m1.dateObserved\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                        	SELECT m.demographicNo, m.type, MAX(m.dateObserved) as dateObserved\n                                        	FROM measurements m, demographic d\n                                        	WHERE m.demographicNo = d.demographic_no\n                                        	AND d.provider_no = \'${provider}\'\n                                        	AND m.type = ${wc}\n                                        	AND m.demographicNo > 0\n                                        	GROUP BY m.demographicNo\n                                	) m2\n                                	ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${wc}\n					GROUP BY m1.demographicNo, m1.type, m1.dateObserved\n				) m3\n                                ON m4.id = m3.id\n                        ) WC0\n                        ON (d.demographic_no = WC0.demographicNo)\n	\n			-- Date of most recent appointment\n			LEFT JOIN (\n                                SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND ${upperLimit.date} > DATE(a.appointment_date)\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n                        ) app1\n                        ON (d.demographic_no = app1.demographic_no)\n\n\n                        -- Next Appointment Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, a.appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND DATE(a.appointment_date) >= ${upperLimit.date}\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n                        ) app2\n                        ON (d.demographic_no = app2.demographic_no)\n\n			WHERE d.patient_status = ${pstatus} \n			AND provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n				NOW() ) ) / 365.25 ) >= ${lowerLimit.age} ) \n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			<!--\n			AND IF( "${sharedMetricLabel}" = "1+ test up to date", LIPID.dataField > 0 OR BP.dataField > 0 OR BMI.dataField > 0,  \n			    IF( "${sharedMetricLabel}" = "All tests overdue", LIPID.dataField = 0 OR BP.dataField = 0 OR BMI.dataField = 0, 1 = 1 ) )\n			-->\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD CAD Overdue items</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% BP overdue" toLabel="BP overdue"/>\n		<sharedMapping fromLabel="% Lipid profile not done" toLabel="Lipid profile not done"/>\n		<sharedMapping fromLabel="% Obesity screen overdue" toLabel="Obesity screen overdue"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD CAD Overdue items');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId7, 'HTN Overdue items', 'CDM', 'HTN Overdue items', 'OSCAR EMR', '2022-02-02', '% of patient population, age 18 and older, with hypertension who received testing within the past 12 months, for any of the following: Blood glucose or HbA1C, BP measurement, Obesity/overweight screening.', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML> \n	<author>Trinity Healthcare Technologies for Oscar EMR</author> \n	<uid></uid> \n	<heading> \n		<category>CDM (Click on the chart to see details)</category> \n		<subCategory>Hypertension</subCategory> \n		<name>HTN Overdue items</name> \n		<metricSetName>OntarioMD HTN Overdue items</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>% of patient population, age 18 and older, with hypertension who received testing within the past 12 months, for any of the following: Blood glucose or HbA1C, BP measurement, Obesity/overweight screening.</definition> \n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework> \n		<frameworkVersion>02-21-2018</frameworkVersion> \n		<notes></notes> \n	</heading> \n	<indicatorQuery> \n		<version>02-21-2018</version> \n		<params> <!-- Required parameter provider. Value options are: [ an individual providerNo, or provider range ] ie: value="370, 1001" "all" ie: value="all" including null.  "loggedInProvider" ie: Default is "loggedInProvider" Use this parameter in the query as ${provider} This parameter should be used for fetching patient\'s assigned to a MRP.  ie: WHERE demographic.provider_no = ${provider} --> \n			<parameter id="provider" name="provider_no" value="loggedInProvider" /> \n			<parameter id="hba1c" name="HbA1C LOINC" value="17856-6, 4548-4, 17855-8, 71875-9" /> \n			<parameter id="a1c" name="A1C" value="HbA1C, A1C" />\n			<parameter id="bloodGlucose" name="Blood Glucose" value="\'FBS\'" /> \n			<parameter id="bloodPressure" name="Blood Pressure" value="\'BP\'" /> \n			<parameter id="bmi" name="Body Mass Index" value="\'BMI\'" /> \n			<parameter id="height" name="Height" value="\'HT\'" />\n			<parameter id="weight" name="Weight" value="\'WT\'" />\n			<parameter id="weight_circ" name="Weight Circumference" value="\'WAIS\'" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" /> \n			<parameter id="dxcodes" name="Dx Research Codes" value="401,402,403,404,405,I10,D3-02120,D3-02010,D3-02100,D3-02000" />		\n		</params> \n		<range> \n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			<lowerLimit id="date" label="12 Months History" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			\n			<lowerLimit id="age" label="Minimum Age" name="Age" value="18" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.a1c IS NULL AND fin.a1c_m IS NULL AND fin.bg IS NULL, 1, 0 ) )\n				,0 ) AS \'% Blood glucose or HbA1C overdue\',\n			\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF(fin.bp IS NULL, 1, 0 ) )\n				,0 ) AS \'% BP overdue\',\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF(fin.bmi IS NULL AND (fin.ht IS NULL OR (fin.ht > 0 AND (fin.wt IS NULL AND fin.wc IS NULL))), 1, 0 ) )\n				,0 ) AS \'% Obesity screen overdue\'\n			\n			FROM (\n			\n				SELECT \n					d.demographic_no AS patient,\n					BP.id AS bp,\n					BG.id AS bg,\n					BMI.id AS bmi,\n					A1C.id AS a1c,\n					A1C_m.id AS a1c_m,\n					HT.id AS ht,\n					WT.id AS wt,\n					WC.id AS wc\n\n				FROM demographic d \n\n				INNER JOIN dxresearch dxr \n				ON ( d.demographic_no = dxr.demographic_no) \n			\n				-- HbA1C \n				LEFT JOIN (\n                                        SELECT m.demographicNo, m.id, m.dataField\n                                        FROM measurements m\n                                        JOIN (\n                                                SELECT me.measurement_id AS id\n                                                FROM measurementsExt me\n                                                JOIN measurementMap mm\n                                                ON me.val = mm.`name`\n                                                WHERE me.keyval = "name"\n                                                AND mm.loinc_code IN ${hba1c}\n                                                GROUP BY me.measurement_id\n                                        ) m1\n                                        ON m.id = m1.id\n                                        WHERE  DATE(m.dateObserved) > ${lowerLimit.date}\n                                        GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n                                ) A1C\n                                ON (d.demographic_no = A1C.demographicNo)\n\n				-- A1C in measurements\n                                LEFT JOIN (\n                                        SELECT id, dataField, demographicNo\n                                        FROM measurements\n                                        WHERE type IN ${a1c}\n                                        AND DATE(dateObserved) > ${lowerLimit.date}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                                ) A1C_m\n                                ON (d.demographic_no = A1C_m.demographicNo)\n\n				-- or Blood Glucose\n				LEFT JOIN (\n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${bloodGlucose}\n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) BG\n				ON (d.demographic_no = BG.demographicNo)\n			\n			\n				-- Blood Pressure\n				LEFT JOIN (\n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${bloodPressure}\n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) BP\n				ON (d.demographic_no = BP.demographicNo)\n			\n				-- BMI Screening\n				-- Look for BMI index or if the height and weight was measured.\n				LEFT JOIN ( \n					SELECT id, dataField, demographicNo \n					FROM measurements \n					WHERE type = ${bmi} \n					AND DATE(dateObserved) > ${lowerLimit.date} \n					AND demographicNo > 0 \n					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n				) BMI \n				ON (d.demographic_no = BMI.demographicNo)\n				\n				-- height \n				LEFT JOIN (\n                                        SELECT id, dataField, demographicNo\n                                        FROM measurements\n                                        WHERE type = ${height}\n                                        AND DATE(dateObserved) > ${lowerLimit.date}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                                ) HT\n                                ON (d.demographic_no = HT.demographicNo)\n\n\n				-- weight \n				LEFT JOIN (\n                                        SELECT id, dataField, demographicNo\n                                        FROM measurements\n                                        WHERE type = ${weight}\n                                        AND DATE(dateObserved) > ${lowerLimit.date}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                                ) WT\n                                ON (d.demographic_no = WT.demographicNo)\n\n				-- weight circumference\n				LEFT JOIN (\n                                        SELECT id, dataField, demographicNo\n                                        FROM measurements\n                                        WHERE type = ${weight_circ}\n                                        AND DATE(dateObserved) > ${lowerLimit.date}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                                ) WC\n                                ON (d.demographic_no = WC.demographicNo)\n\n				WHERE d.patient_status = ${pstatus} \n				AND provider_no = \'${provider}\'\n				AND dxr.dxresearch_code IN ${dxcodes}\n				AND dxr.`status` NOT LIKE "%D%" \n				AND d.demographic_no > 0 \n				AND ( ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n					${lowerLimit.date} ) ) / 365.25 ) >=  ${lowerLimit.age} )\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>02-21-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="hba1c" name="HbA1C LOINC" value="17856-6, 4548-4, 17855-8, 71875-9" />\n			<parameter id="a1c" name="A1C" value="HbA1C, A1C" />\n			<parameter id="bloodGlucose" name="Blood Glucose" value="\'FBS\'" />\n			<parameter id="bloodPressure" name="Blood Pressure" value="\'BP\'" />\n			<parameter id="bmi" name="Body Mass Index" value="\'BMI\'" />\n			<parameter id="height" name="Height" value="\'HT\'" />\n			<parameter id="weight" name="Weight" value="\'WT\'" />\n			<parameter id="weight_circ" name="Weight Circumference" value="\'WAIS\'" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="dxcodes" name="Dx Research Codes" value="401,402,403,404,405,I10,D3-02120,D3-02010,D3-02100,D3-02000" />					\n            <parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\n\n		</params>\n		<range>\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			<lowerLimit id="date" label="12 Months History" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			\n			<lowerLimit id="age" label="Minimum Age" name="Age" value="18" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="hba1c" name="IFNULL( A1C_m0.dataField, \'\')" title="Most Recent HbA1C" primary="false" />\n			<column id="hba1cdate" title="Date of Most Recent HbA1c (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( A1C_m0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="bg" title="Most Recent Blood Glucose" name="IFNULL( BG0.dataField, \'\')" primary="false"/>\n			<column id="bgdate" title="Date of Most Recent Blood Glucose (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BG0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="bp" title="Most Recent BP" name="IFNULL( BP0.dataField, \'\')" primary="false" />\n			<column id="bpdate" title="Date of Most Recent BP (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BP0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="bmi" title="Most Recent BMI" name="IFNULL( BMI0.dataField, \'\')" primary="false" />\n			<column id="bmidate" title="Date of Most Recent BMI (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BMI0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="ht" title="Most Recent Height" name="IFNULL( HT0.dataField, \'\')" primary="false" />\n			<column id="htdate" title="Date of Most Recent Height (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( HT0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="wt" title="Most Recent Weight" name="IFNULL( WT0.dataField, \'\')" primary="false" />\n			<column id="wtdate" title="Date of Most Recent Weight (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WT0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="wc" title="Most Recent Waist Circumference" name="IFNULL( WC0.dataField, \'\')" primary="false" />\n			<column id="wcdate" title="Date of Most Recent Waist Circumference (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WC0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n<!--\n			<column id="dxcode" title="Dx System/Code" name="CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )" primary="false" />\n-->\n			<column id="lastappdate" name="IFNULL( DATE_FORMAT( app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n			<column id="nextappdate" name="IFNULL( DATE_FORMAT( app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n                        <column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n                        <column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="hba1c" name="IFNULL( A1C_m0.dataField, \'\')" title="Most Recent HbA1C" primary="false" />\n                        <column id="hba1cdate" title="Date of Most Recent HbA1c (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( A1C_m0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n                        <column id="bg" title="Most Recent Blood Glucose" name="IFNULL( BG0.dataField, \'\')" primary="false"/>\n                        <column id="bgdate" title="Date of Most Recent Blood Glucose (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BG0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n                        <column id="bp" title="Most Recent BP" name="IFNULL( BP0.dataField, \'\')" primary="false" />\n                        <column id="bpdate" title="Date of Most Recent BP (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BP0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n                        <column id="bmi" title="Most Recent BMI" name="IFNULL( BMI0.dataField, \'\')" primary="false" />\n                        <column id="bmidate" title="Date of Most Recent BMI (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( BMI0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n                        <column id="ht" title="Most Recent Height" name="IFNULL( HT0.dataField, \'\')" primary="false" />\n                        <column id="htdate" title="Date of Most Recent Height (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( HT0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n                        <column id="wt" title="Most Recent Weight" name="IFNULL( WT0.dataField, \'\')" primary="false" />\n                        <column id="wtdate" title="Date of Most Recent Weight (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WT0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n                        <column id="wc" title="Most Recent Waist Circumference" name="IFNULL( WC0.dataField, \'\')" primary="false" />\n                        <column id="wcdate" title="Date of Most Recent Waist Circumference (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( WC0.dateObserved, \'%m-%d-%Y\' ), \'\')" primary="false" />\n			<column id="lastappdate" name="IFNULL( DATE_FORMAT( app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT( app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->	\n			SELECT \n			*\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no) \n		\n			LEFT JOIN (\n                                SELECT m.demographicNo, m.id, m.dataField\n                                FROM measurements m\n                                JOIN (\n                                        SELECT me.measurement_id AS id\n                                        FROM measurementsExt me\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${hba1c}\n                                        GROUP BY me.measurement_id\n                                ) m1\n                                ON m.id = m1.id\n                                WHERE  DATE(m.dateObserved) > ${lowerLimit.date}\n                                GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) > -1\n                        ) A1C\n                        ON (d.demographic_no = A1C.demographicNo)\n	\n			-- A1C in measurements\n                        LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type IN ${a1c}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) A1C_m\n                        ON (d.demographic_no = A1C_m.demographicNo)\n\n			\n			LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type IN ${a1c}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type IN ${a1c}\n                                ORDER BY m1.id DESC\n\n                        ) A1C_m0\n                        ON (d.demographic_no = A1C_m0.demographicNo)\n\n			-- or Blood Glucose\n			LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type = ${bloodGlucose}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) BG\n                        ON (d.demographic_no = BG.demographicNo)\n\n                        -- all BG\n                        LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type = ${bloodGlucose}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type = ${bloodGlucose}\n                                ORDER BY m1.id DESC\n\n                        ) BG0\n                        ON (d.demographic_no = BG0.demographicNo)\n\n			-- Blood Pressure\n			LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type = ${bloodPressure}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) BP\n                        ON (d.demographic_no = BP.demographicNo)\n\n                        -- all BP\n\n                        LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type = ${bloodPressure}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type = ${bloodPressure}\n                                ORDER BY m1.id DESC\n                        ) BP0\n                        ON (d.demographic_no = BP0.demographicNo)\n\n			-- BMI Screening\n			-- Look for BMI index or if the height and weight was measured.\n			LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type = ${bmi}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) BMI\n                        ON (d.demographic_no = BMI.demographicNo)\n\n                        -- all BMI\n                        LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type = ${bmi}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type = ${bmi}\n                                ORDER BY m1.id DESC\n\n                        ) BMI0\n                        ON (d.demographic_no = BMI0.demographicNo)\n\n			-- height \n			LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type = ${height}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) HT\n                        ON (d.demographic_no = HT.demographicNo)\n\n                        -- all height\n                        LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type = ${height}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type = ${height}\n                                ORDER BY m1.id DESC\n                        ) HT0\n                        ON (d.demographic_no = HT0.demographicNo)\n\n		\n			 -- weight \n			LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type = ${weight}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) WT\n                        ON (d.demographic_no = WT.demographicNo)\n\n                        -- all weight\n                        LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type = ${weight}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type = ${weight}\n                                ORDER BY m1.id DESC\n\n                        ) WT0\n                        ON (d.demographic_no = WT0.demographicNo)\n\n			-- waist circumference\n			LEFT JOIN (\n                                SELECT id, dataField, demographicNo\n                                FROM measurements\n                                WHERE type = ${weight_circ}\n                                AND DATE(dateObserved) > ${lowerLimit.date}\n                                AND demographicNo > 0\n                                GROUP BY demographicNo HAVING COUNT(demographicNo) > -1\n                        ) WC\n                        ON (d.demographic_no = WC.demographicNo)\n\n                        -- all weight circumference\n                        LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE type = ${weight_circ}\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND m1.type = ${weight_circ}\n                                ORDER BY m1.id DESC\n\n                        ) WC0\n                        ON (d.demographic_no = WC0.demographicNo)\n\n			-- Date of most recent appointment\n			LEFT JOIN (\n                                SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND ${upperLimit.date} > DATE(a.appointment_date)\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n                        ) app1\n                        ON (d.demographic_no = app1.demographic_no)\n\n			-- Date of next scheduled appointment\n			LEFT JOIN (\n                                SELECT a.demographic_no, a.appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND DATE(a.appointment_date) >= ${upperLimit.date}\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n                        ) app2\n                        ON (d.demographic_no = app2.demographic_no)\n\n			WHERE d.patient_status = ${pstatus} \n			AND provider_no = \'${provider}\'\n			AND dxr.dxresearch_code IN ${dxcodes}\n			AND dxr.`status` NOT LIKE "%D%" \n			AND d.demographic_no > 0 \n			AND ( ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n				${lowerLimit.date} ) ) / 365.25 ) >=  ${lowerLimit.age} )\n\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD HTN Overdue items</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% Blood glucose or HbA1C overdue" toLabel="Blood glucose or HbA1C overdue"/>\n		<sharedMapping fromLabel="% BP overdue" toLabel="BP overdue"/>\n		<sharedMapping fromLabel="% Obesity screen overdue" toLabel="Obesity screen overdue"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD HTN Overdue items'),
            (@dashboardId7, 'Consider Hypertension 2', 'CDM', 'Hypertension', 'OSCAR EMR', '2022-02-02', '# of active patients with hypertension [ICD9: 401,402,403,404,405] [ICD10: I10] [SNOMED: D3-02120,D3-02010,D3-02100,D3-02000,1201005,10725009,59621000,38341003]\n		', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Hypertension</subCategory>\n		<name>Consider Hypertension 2</name>\n		<metricSetName>OntarioMD HTN Identification</metricSetName>\n		<metricLabel></metricLabel>\n		<definition># of active patients with hypertension [ICD9: 401,402,403,404,405] [ICD10: I10] [SNOMED: D3-02120,D3-02010,D3-02100,D3-02000,1201005,10725009,59621000,38341003]\n		</definition>\n		<framework>OSCAR EMR</framework>\n		<frameworkVersion>03-09-2018</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-09-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="dxcodes" name="Dx Research Codes" value="401,402,403,404,405,I10,D3-02120,D3-02010,D3-02100,D3-02000,1201005,10725009,59621000,38341003" />\n			<parameter id="billingcode" name="Billing Diagnosis " value="401,402,403" />\n			\n			<parameter id="documentation1" name="documentation1" value="\'%HTN%\'" />\n			<parameter id="documentation2" name="documentation2" value="\'%HPT%\'" />\n			<parameter id="documentation3" name="documentation3" value="\'%Hypertensive%\'" />\n			<parameter id="documentation4" name="documentation4" value="\'%Hypertension%\'" />\n		</params>\n		<range>\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion > 0 , 1, 0) ) \n				,0 ) AS "HTN Coded in PROB or HPH",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.note > 0, 1, 0) ) \n				,0 ) AS "Documented as text but not coded",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill >= 2 , 1, 0) ) \n				,0 ) AS "Dx in 2+ bills",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND (fin.note > 0 OR fin.bill >= 2 ), 1, 0) ) \n				,0 ) AS "Total"\n				\n			FROM (\n				SELECT \n					d.demographic_no AS patient,\n					IFNULL(dxr.dxresearch_no, 0) AS dxexclusion,\n					IFNULL(NT.note_id, 0) AS note,\n					IFNULL(BILL.id, 0) AS bill\n					\n				FROM demographic d \n				\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no \n					FROM dxresearch \n					WHERE demographic_no>0 \n					AND `status` = "A"\n					AND dxresearch_code IN ${dxcodes}\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr				\n				ON ( d.demographic_no = dxr.demographic_no)\n				\n				-- NOTE\n				LEFT JOIN(\n					SELECT n.demographic_no, n.note_id\n					FROM casemgmt_note n\n					INNER JOIN (\n						SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n						FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n						WHERE c.issue_id = i.issue_id\n						AND ino.id = c.id\n						AND n.note_id = ino.note_id\n						AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n						GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n					) nn\n					ON n.note_id = nn.note_id\n					AND n.archived = 0\n					AND ( n.note like ${documentation1} OR\n                                                        n.note LIKE ${documentation2} OR\n                                                        n.note LIKE ${documentation3} OR\n                                                        n.note LIKE ${documentation4})\n\n					GROUP BY n.demographic_no\n				) NT\n				ON (d.demographic_no = NT.demographic_no)\n				\n				-- WITH 2 or more billing diagnosis codes of 401, 402,403\n				LEFT JOIN (\n					SELECT COUNT(distinct boc.id) AS id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.dx IN ${billingcode} \n					GROUP BY boc.demographic_no \n				) BILL\n				ON (d.demographic_no = BILL.demographic_no)		\n				\n				WHERE d.patient_status = ${pstatus} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-09-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="dxcodes" name="Dx Research Codes" value="401,402,403,404,405,I10,D3-02120,D3-02010,D3-02100,D3-02000,1201005,10725009,59621000,38341003" />\n			<parameter id="billingcode" name="Billing Diagnosis " value="401,402,403" />\n			\n			<parameter id="documentation1" name="documentation1" value="\'%HTN%\'" />\n			<parameter id="documentation2" name="documentation2" value="\'%HPT%\'" />\n			<parameter id="documentation3" name="documentation3" value="\'%Hypertensive%\'" />\n			<parameter id="documentation4" name="documentation4" value="\'%Hypertension%\'" />\n		</params>\n		<range>\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dxcode" title="HTN Diagnosis Codes Recorded in Disease Registry" name="IFNULL(dxr.dxresearch_code, \'\')" primary="false" />\n			<column id="htn_concerns" title="HTN Text Recorded in Ongoing Concerns" name="IFNULL(NT_c.note, \'\')" primary="false" />\n			<column id="htn_medicalhistory" title="HTN Text Recorded in Medical History" name="IFNULL(NT_m.note, \'\')" primary="false" />\n			<column id="bill" title="Count of Bills Containing code 401, 402, or 403" name="IFNULL(BILL.id, \'\')" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Date of Birth (mm-dd-yy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Phone Number" primary="false" />\n			<column id="dxcode" title="HTN Diagnosis Codes Recorded in Disease Registry" name="IFNULL(dxr.dxresearch_code, \'\')" primary="false" />\n                        <column id="htn_concerns" title="HTN Text Recorded in Ongoing Concerns" name="IFNULL(NT_c.note, \'\')" primary="false" />\n                        <column id="htn_medicalhistory" title="HTN Text Recorded in Medical History" name="IFNULL(NT_m.note, \'\')" primary="false" />\n                        <column id="bill" title="Count of Bills Containing code 401, 402, or 403" name="IFNULL(BILL.id, \'\')" primary="false" />\n\n		</exportColumns>\n <drillDownActions>\n<action id="tickler" name="Tickler"/>\n	<action id="dxUpdate" name="Disease Registry Update" value="401"/>\n	<action id="demoExcl" name="Patient Exclusion"/>\n</drillDownActions>\n<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d \n			\n			LEFT JOIN (\n				SELECT demographic_no, GROUP_CONCAT(dxresearch_code) AS dxresearch_code\n				FROM dxresearch \n				WHERE demographic_no>0 \n				AND `status` = "A"\n				AND dxresearch_code IN ${dxcodes}\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr				\n			ON ( d.demographic_no = dxr.demographic_no)\n			\n			-- NOTE\n			LEFT JOIN(\n				SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n				FROM casemgmt_note n\n				INNER JOIN (\n					SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n					FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n					WHERE c.issue_id = i.issue_id\n					AND ino.id = c.id\n					AND n.note_id = ino.note_id\n					AND i.code = \'Concerns\'\n\n					GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n				) nn\n				ON n.note_id = nn.note_id\n				AND n.archived = 0\n				AND ( n.note like ${documentation1} OR\n                                                n.note LIKE ${documentation2} OR\n                                                n.note LIKE ${documentation3} OR\n                                                n.note LIKE ${documentation4})\n\n				GROUP BY n.demographic_no\n			) NT_c\n			ON (d.demographic_no = NT_c.demographic_no)\n			\n			LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code=\'MedHistory\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note like ${documentation1} OR\n                                                n.note LIKE ${documentation2} OR\n                                                n.note LIKE ${documentation3} OR\n                                                n.note LIKE ${documentation4})\n\n                                GROUP BY n.demographic_no\n                        ) NT_m\n                        ON (d.demographic_no = NT_m.demographic_no)\n\n			-- WITH 2 or more billing diagnosis codes of 401, 402,403\n			LEFT JOIN (\n				SELECT boc.demographic_no, count(distinct boc.id) as id\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boc.id = boi.ch1_id \n				AND boc.status != "D"\n				AND boi.status != "D"\n				AND boi.dx IN ${billingcode} \n				GROUP BY boc.demographic_no \n			) BILL\n			ON (d.demographic_no = BILL.demographic_no)		\n			\n			WHERE d.patient_status = ${pstatus} \n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD HTN Identification</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% HTN Coded in PROB or HPH" toLabel="HTN Coded in PROB or HPH"/>\n		<sharedMapping fromLabel="% Documented as text but not coded" toLabel="Consider HTN: Documented as text but not coded"/>\n		<sharedMapping fromLabel="% Dx in 2+ bills" toLabel="Consider HTN: Dx in 2+ bills"/>\n		<sharedMapping fromLabel="% Total" toLabel="Consider HTN: Total"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD HTN Identification');
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId7, 'Smoking Status  recorded', 'Preventive Health Care', 'Smoking Status', 'OSCAR EMR', '2022-02-02', '% of patients >= 12 years old for whom smoking status is recorded', '', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Smoking Status</subCategory>\n		<name>Smoking Status recorded</name>\n		<metricSetName>OntarioMD Smoking Status</metricSetName>\n                <metricLabel>Not documented</metricLabel>\n\n		<definition>% of patients >= 12 years old for whom smoking status is recorded</definition>\n		<framework>Based on and adapted from AFHTO D2D 3.0 Indicators: Data Dictionary version 4 (Nov 2015)</framework>\n		<frameworkVersion>02-15-2018</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>02-15-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			SmkC : stop smoking in which year\n			SmkS: start smoking in which year\n			SMK: never smoke , the dataField in measurement is "Never",  "Former", "Current"\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n<!--\n			<parameter id="smokingstart" name="Start Smoking in Measurement" value="\'SmkS\'" />		\n			<parameter id="smokingstop" name="Stop Smoking in Measurement" value="\'SmkC\'" />		\n			<parameter id="smokingstatus" name="Smoking Status in Measurement" value="\'SMK\'" />		\n			<parameter id="smokingperday" name="Smoking packs per day in Measurement" value="\'SmkD\'" />		\n			<parameter id="smoking" name="Smoking in Measurement" value="\'Smk%\'" />		\n-->\n			<parameter id="smokingstatus" name="Smoking Status in Intake (Current, Former, Never)" value="\'SMK\'" />\n			<parameter id="smokingperday" name="Smoking packs per day in intake" value="\'SmkD\'" />		\n			<parameter id="smokingstatus_cdm" name="Smoking Status in CDM indicator (yes/no)" value="\'SKST\'" />\n			<parameter id="smokingperday_cdm" name="Smoking packs per day in CDM indicator" value="\'POSK\'" />		\n			<parameter id="dxcode" name="Disease Registry Code" value="\'3051\'" />		\n		</params>\n\n		<range>\n			<lowerLimit id="age" label="Lowest Age" name="Age" value="12" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT\n\n				IF( COUNT(fin.patient) > 0, \n                                         SUM( IF( fin.dx IS NULL AND (fin.status = \'Never\' OR fin.status = \'Former\' OR fin.status = \'No\'), 1, 0) )\n				, 0 ) AS "Non-smokers",\n			\n				IF( COUNT(fin.patient) > 0, \n					SUM( IF( fin.status = \'Current\' OR fin.status = \'Yes\' OR fin.dx > 0, 1, 0) ) \n				, 0 ) AS "Smokers",\n\n				IF( COUNT(fin.patient) > 0,\n                                        SUM( IF( fin.status IS NULL AND fin.dx IS NULL, 1, 0) )     \n                                , 0 ) AS "Not documented"\n			\n			FROM (\n				SELECT\n					d.demographic_no AS patient,\n					dxr.dxresearch_no as dx,\n					SM.dataField as status\n\n				FROM demographic d\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no\n                                        FROM dxresearch\n                                        WHERE demographic_no>0\n                                        AND status = \'A\'\n                                        AND dxresearch_code = ${dxcode}\n					AND coding_system = \'icd9\'\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr \n                                ON d.demographic_no = dxr.demographic_no\n	\n				--Never smoking\n				LEFT JOIN (\n                                        SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n						SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n					ON m1.dateObserved = m2.dateObserved\n	                                AND m1.demographicNo = m2.demographicNo\n					AND ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n					ORDER BY m1.id DESC\n                                ) SM \n                                ON (d.demographic_no = SM.demographicNo)\n\n\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) >= ${lowerLimit.age} \n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>02-15-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="smokingstatus" name="Smoking Status in Intake (Current, Former, Never)" value="\'SMK\'" />\n			<parameter id="smokingperday" name="Smoking packs per day in intake" value="\'SmkD\'" />		\n			<parameter id="smokingstatus_cdm" name="Smoking Status in CDM indicator (yes/no)" value="\'SKST\'" />\n			<parameter id="smokingperday_cdm" name="Smoking packs per day in CDM indicator" value="\'POSK\'" />		\n<!--\n			<parameter id="smokingstart" name="Start Smoking in Measurement" value="\'SmkS\'" />		\n			<parameter id="smokingstop" name="Stop Smoking in Measurement" value="\'SmkC\'" />		\n			<parameter id="smokingstatus" name="Smoking Status in Measurement" value="\'SMK\'" />		\n			<parameter id="smokingperday" name="Smoking packs per day in Measurement" value="\'SmkD\'" />		\n			<parameter id="smoking" name="Smoking in Measurement" value="\'Smk%\'" />		\n-->\n			<parameter id="dxcode" name="Disease Registry Code" value="\'3051\'" />		\n\n		</params>\n\n		<range>\n			<lowerLimit id="age" label="Lowest Age" name="Age" value="12" />\n		</range>\n\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />	\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n<!--                        <column id="lastsmokingstatus" name="IFNULL( SM.dataField, \'\' )" title="Most Recently Recorded Value of SMK or SKST" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SM.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Most Recently Recorded Value of SMK or SKST (mm-dd-yyyy)" primary="false" />\n-->\n		</displayColumns>\n\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />	\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n<!--                        <column id="lastsmokingstatus" name="IFNULL( SM.dataField, \'\' )" title="Most Recently Recorded Value of SMK or SKST" primary="false" />\n                        <column id="lastsmokingstatusdate" name="IFNULL( DATE_FORMAT( SM.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Most Recently Recorded Value of SMK or SKST (mm-dd-yyyy)" primary="false" />\n-->\n		</exportColumns>\n\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT\n			*\n			FROM demographic d\n		\n\n			 LEFT JOIN (\n                                SELECT dxresearch_no, demographic_no, max(start_date) as start_date\n                                        FROM dxresearch\n                                        WHERE demographic_no>0\n					AND status = \'A\'\n                                        AND dxresearch_code = ${dxcode}\n					AND coding_system = \'icd9\'\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n                        ) dxr\n                        ON d.demographic_no = dxr.demographic_no\n\n                        --Never smoking\n			LEFT JOIN (\n                                SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                FROM measurements m1\n                                RIGHT JOIN (\n                                        SELECT demographicNo, MAX(dateObserved) as dateObserved\n                                        FROM measurements\n                                        WHERE ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n                                        AND demographicNo > 0\n                                        GROUP BY demographicNo\n                                ) m2\n                                ON m1.dateObserved = m2.dateObserved\n                                AND m1.demographicNo = m2.demographicNo\n                                AND ( type = ${smokingstatus} OR type = ${smokingstatus_cdm} )\n                                ORDER BY m1.id DESC\n                        ) SM\n                        ON (d.demographic_no = SM.demographicNo)\n\n			--Smoking packs per day\n--			 LEFT JOIN (\n --                               SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateEntered\n  --                              FROM measurements m1\n   --                             INNER JOIN (\n    --                                    SELECT MAX(id) AS id\n     --                                   FROM measurements\n      --                                  WHERE ( type = ${smokingperday} OR type = ${smokingperday_cdm} )\n       --                                 AND demographicNo > 0\n        --                                GROUP BY demographicNo\n         --                       ) m2\n          --                      ON (m1.id = m2.id)\n           --             ) SMD\n            --            ON (d.demographic_no = SMD.demographicNo)\n	\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n                        AND SM.dataField IS NULL AND dxr.dxresearch_no IS NULL\n\n			AND ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) >= ${lowerLimit.age}	\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n        <sharedMetricSetName>OntarioMD Smoking Status</sharedMetricSetName>\n        <sharedMetricDataId>Status</sharedMetricDataId>\n        <sharedMappings>\n                <sharedMapping fromLabel="% Non-smokers" toLabel="Non-smokers"/>\n                <sharedMapping fromLabel="% Smokers" toLabel="Smokers"/>\n                <sharedMapping fromLabel="% Not documented" toLabel="Not documented"/>\n        </sharedMappings>\n\n</indicatorTemplateXML>\n', b'1', b'0', 0, 'Not documented', 'OntarioMD Smoking Status');

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId8,'Consider Osteoarthritis','CDM','Osteoarthritis','DoBC CPQI PSP Panel','2017-08-02','Patients with osteoarthritis dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Osteoarthritis dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 396275006 OR starting with 715\nAND with >=2 Bills with the ICD9 diagnosis code starting with 715 in the last 3 years\"\n		  ii) Osteoarthritis dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 396275006 OR starting with 715\nAND with >= 2 Visit Encounters with Snomed diagnosis code 396275006 or with the ICD9 diagnosis code starting with 715 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Osteoarthritis</subCategory>\n		<name>Consider Osteoarthritis</name>\n		<definition>\n			Patients with osteoarthritis dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Osteoarthritis dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 396275006 OR starting with 715\nAND with >=2 Bills with the ICD9 diagnosis code starting with 715 in the last 3 years\"\n		  ii) Osteoarthritis dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 396275006 OR starting with 715\nAND with >= 2 Visit Encounters with Snomed diagnosis code 396275006 or with the ICD9 diagnosis code starting with 715 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"715\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"396275006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"715\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 715 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 715/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Osteoarthritis dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Osteoarthritis dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'715\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'396275006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 715 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'715\') OR LEFT(b.dx_code2, 3) IN (\'715\') OR LEFT(b.dx_code3, 3) IN (\'715\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'715\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'396275006\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"715\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"396275006\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"715\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 715 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 715/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"715\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'715\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'396275006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 715 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'715\') OR LEFT(b.dx_code2, 3) IN (\'715\') OR LEFT(b.dx_code3, 3) IN (\'715\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'715\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'396275006\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId8,'Osteoarthritis Prevalence','CDM','Osteoarthritis','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Osteoarthritis.','\ni) Osteoarthritis patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 396275006 OR starting with 715\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 396275006 OR starting with 715\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Osteoarthritis</subCategory>\n		<name>Osteoarthritis Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Osteoarthritis.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Osteoarthritis patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 396275006 OR starting with 715\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 396275006 OR starting with 715\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"715\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"396275006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT OSTEOARTHRITIS\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Osteoarthritis\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT OSTEOARTHRITIS\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Osteoarthritis\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'715\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'396275006\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"715\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"396275006\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'715\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'396275006\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId8, 'Immunosupressed', 'Vulnerable Population', 'Patients on Immunosupressive Drugs', 'OSCAR EMR', '2022-02-02', 'Providers Population age 18 and older who have a current or recent Rx for an immunosupressive drug.', 'Version 1.0', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>PHC</author>\n	<uid></uid>\n	<heading>\n		<category>Vulnerable Population (Click on the chart to see details)</category>\n		<subCategory>Patients on Immunosupressive Drugs</subCategory>\n		<name>Immunosupressed</name>\n		<metricSetName></metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Providers Population age 18 and older who have a current or recent Rx for an immunosupressive drug.</definition>\n		<framework>none</framework>\n		<frameworkVersion>01-30-2018</frameworkVersion>\n		<notes>Version 1.2</notes>\n        <graphType>table</graphType>\n	</heading>\n	<indicatorQuery>\n		<version>03-30-2021</version>\n		<params>\n			<!-- constants, the example shows what you would use for reports on adults.  You need to use ${provider} for the placeholder in your SQL -->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n		</params>\n		<range>\n			<!-- numerical constraints, the example shows what you would use for reports on adults.  use ${lowerLimit.age} for the placeholder in the SQL -->\n			<lowerLimit id="age" label="Min Age" name="Age" value="18" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here.  Craft your query to result counts which will then be graphed -->\n			SELECT\n				SUM(fin.MTX) AS "on Methotrexate",\n				SUM(fin.LEF) AS "on Leflunomide",\n				SUM(fin.AZA) AS "on Azathioprine",\n				SUM(fin.PLA) AS "on Hydroxychloroquine",\n				SUM(fin.PRE) AS "on Prednisone",\n				SUM(fin.MYC) AS "on Mycophenolate",\n				SUM(fin.CYC) AS "on Cyclosporine",\n				SUM(fin.TAC) AS "on Tacrolimus oral",\n				SUM(fin.MAB) AS "on Monoclonal Antibodies",\n				SUM(fin.JAK) AS "on JAK Inhibitors"\n				\n			FROM (\n				SELECT\n				  IF( INSTR(dr.GN, \'METHOTREXATE\')> 0 ,1,0) AS MTX,\n				  IF( INSTR(dr.GN, \'LEFLUNOMIDE\')> 0 ,1,0) AS LEF,\n				  IF( INSTR(dr.GN, \'AZATHIOPRINE\')> 0 ,1,0) AS AZA,\n				  IF( INSTR(dr.GN, \'HYDROXYCHLOROQUINE\')> 0 ,1,0) AS PLA,\n				  IF( INSTR(dr.GN, \'PREDNISONE\')> 0 ,1,0) AS PRE,\n				  IF( INSTR(dr.GN, \'MYCOPHENOLATE\')> 0 ,1,0) AS MYC,\n				  IF( INSTR(dr.GN, \'CYCLOSPROINE\')> 0 ,1,0) AS CYC,\n				  IF( INSTR(dr.GN, \'TACROLIMUS\')> 0 ,1,0) AS TAC,\n				  IF( INSTR(dr.GN, \'ZUMAB\')> 1 ,1,0) AS MAB,\n				  IF( INSTR(dr.GN, \'ITNIB\')> 1 ,1,0) AS JAK   \n				FROM demographic de\n				LEFT JOIN drugs dr\n				ON ( de.demographic_no = dr.demographic_no  )\n				WHERE de.provider_no LIKE \'${provider}\'\n				AND de.patient_status LIKE ${pstatus}\n				AND (\n					dr.end_date >= CURDATE() \n					OR dr.written_date > "2021-01-01"\n				)\n				AND (\n					dr.GN LIKE \'METHOTREXATE%\'\n					OR dr.GN LIKE \'LEFLUNOMIDE%\'\n					OR dr.GN LIKE \'AZATHIOPRINE%\' \n					OR dr.GN LIKE\'HYDROXYCHLOROQUINE%\' \n					OR dr.GN LIKE \'PREDNISONE%\'\n					OR dr.GN LIKE \'MYCOPHENOLATE%\'\n					OR dr.GN LIKE \'CYCLOSPROINE%\'\n					OR (dr.GN LIKE \'TACROLIMUS%\' AND dr.route=\'ORAL\')\n					OR dr.GN LIKE \'%ZUMAB%\'\n					OR dr.GN LIKE \'%TNIB%\'\n				) \n				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(de.year_of_birth,"-",de.month_of_birth,"-",de.date_of_birth) ), \n					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n				GROUP BY de.demographic_no HAVING count(de.demographic_no) > -1\n			) fin;\n\n\n        \n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-30-2021</version>\n		<params>\n			<!-- constants, the example shows what you would use for reports on adults.  You need to use ${provider} for the placeholder in your SQL -->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n		</params>\n		<range>\n			<!-- numerical constraints, the example shows what you would use for reports on adults.  use ${lowerLimit.age} for the placeholder in the SQL -->\n			<lowerLimit id="age" label="Min Age" name="Age" value="18" />\n		</range>\n		<displayColumns>\n			<!-- which columns will you display in the drill down.  Usually they start with the first three below -->\n			<column id="demographic" name="de.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( de.last_name, \', \', de.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(de.year_of_birth,\'-\',de.month_of_birth,\'-\',de.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(de.year_of_birth,\'-\',de.month_of_birth,\'-\',de.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( de.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rxdate" name="dr.written_date" title="Rx Date" primary="false" />\n			<column id="trade" name="dr.BN" title="Trade Name" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<!-- which columns will you allow for downloading, usually duplicate of the ones you display but can be different -->\n			<column id="demographic" name="de.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( de.last_name, \', \', de.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(de.year_of_birth,\'-\',de.month_of_birth,\'-\',de.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(de.year_of_birth,\'-\',de.month_of_birth,\'-\',de.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( de.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rxdate" name="dr.written_date" title="Rx Date" primary="false" />\n			<column id="trade" name="dr.BN" title="Trade Name" primary="false" />\n		</exportColumns>\n		<drillDownActions>\n			<action id="tickler" name="Tickler"/>\n			<!-- this allows ticklers to be set for the relevant demographics -->\n			<action id="dxUpdate" name="Disease Registry Update" value="2799"/>\n			<!-- the value is the disease registry code to add -->\n			<action id="patientStatusUpdate" name="Set Patient Inactive"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here Craft your query to provide values for the display and export columns-->\n		SELECT  \n			*\n		FROM drugs dr, demographic de \n		WHERE dr.demographic_no = de.demographic_no \n		AND de.patient_status = ${pstatus}\n		AND (\n			dr.end_date >= CURDATE() \n			OR dr.written_date > "2021-01-01"\n		)\n		AND (\n					dr.GN LIKE \'METHOTREXATE%\'\n					OR dr.GN LIKE \'LEFLUNOMIDE%\'\n					OR dr.GN LIKE \'AZATHIOPRINE%\' \n					OR dr.GN LIKE\'HYDROXYCHLOROQUINE%\' \n					OR dr.GN LIKE \'PREDNISONE%\'\n					OR dr.GN LIKE \'MYCOPHENOLATE%\'\n					OR dr.GN LIKE \'CYCLOSPROINE%\'\n					OR (dr.GN LIKE \'TACROLIMUS%\' AND dr.route=\'ORAL\')\n					OR dr.GN LIKE \'%ZUMAB%\'\n					OR dr.GN LIKE \'%TNIB%\'\n		)\n		AND (de.provider_no LIKE \'${provider}\') \n		AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(de.year_of_birth,"-",de.month_of_birth,"-",de.date_of_birth) ), \n			NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n		GROUP BY de.demographic_no HAVING count(de.demographic_no) > -1;\n        \n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>', b'1', b'0', 0, '', '');

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId9,'Consider COPD','CDM','COPD','DoBC CPQI PSP Panel','2017-08-02','Patients with copd dx in 2+ bills or 2+ visit encounters within last 3 years or FEV1/FVC < 0.7 OR Current Tiotroprium medication\n		','\n		  Created for Doctors of BC\n		  i) COPD dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND with >= 2 Bills with the ICD9 diagnosis code starting with  490-492, 494, 496 in the last 3 years\"\n		  ii) COPD dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND with >= 2 Visit Encounters with Snomed diagnosis code 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005 or the ICD9 diagnosis code starting with 490-492, 494, 496 in the last 3 years\"\n		  iii) \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND has a FEV1 < 0.7 OR Current Tiotroprium medication (ATC code R03BB04)\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>COPD</subCategory>\n		<name>Consider COPD</name>\n		<definition>\n			Patients with copd dx in 2+ bills or 2+ visit encounters within last 3 years or FEV1/FVC &lt; 0.7 OR Current Tiotroprium medication\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) COPD dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND with >= 2 Bills with the ICD9 diagnosis code starting with  490-492, 494, 496 in the last 3 years\"\n		  ii) COPD dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND with >= 2 Visit Encounters with Snomed diagnosis code 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005 or the ICD9 diagnosis code starting with 490-492, 494, 496 in the last 3 years\"\n		  iii) \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND has a FEV1 &lt; 0.7 OR Current Tiotroprium medication (ATC code R03BB04)\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"490,491,492,494,496\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"32398004,63480004,61937009,74417001,185086009,49158009,12295008,13645005\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"490,491,492,494,496\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 490,491,492,494,496 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 490,491,492,494,496/ICD9\" value=\"2\" />\n			<parameter id=\"fev1_fvc\" name=\"FEV1/FVC Result\" value=\"0.7\" />\n			<parameter id=\"drug\" name=\"ATC Code/Class\" value=\"\'R03BB04\'\" />\n			<parameter id=\"numOfMeds\" name=\"Opioid Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with COPD dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with COPD dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND (fin.fev1_fvc &lt; ${fev1_fvc} OR (fin.fev1_fvc &gt; 1 AND fin.fev1_fvc &lt; 100*${fev1_fvc}) OR fin.medcount &gt;= ${numOfMeds})) THEN 1 ELSE 0 END ) , 0) AS \"Number with FEV1/FVC &lt; ${fev1_fvc}% OR Tiotroprium\"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBS.fev1_fvc AS fev1_fvc,\n    MEDS.numOfMeds as medcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN ${dxcodesICD} AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN ${dxcodesSnoMed} AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 490,491,492,494,496 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE b.dx_code1 IN ${billingCode} OR b.dx_code2 IN ${billingCode} OR b.dx_code3 IN ${billingCode}\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code,3) IN ${dxcodesICD}) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN ${dxcodesSnoMed})\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- FEV1/FVC measurement\n  LEFT JOIN (\n    SELECT m.demographicNo AS demographic_no, m.dataField AS fev1_fvc, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = \'FEV1\'\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = \'FEV1\'\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBS\n  ON (d.demographic_no = OBS.demographic_no)\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC LIKE ${drug}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"490,491,492,494,496\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"32398004,63480004,61937009,74417001,185086009,49158009,12295008,13645005\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"490,491,492,494,496\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 490,491,492,494,496 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 490,491,492,494,496/ICD9\" value=\"2\" />\n			<parameter id=\"fev1_fvc\" name=\"FEV1/FVC Result\" value=\"0.7\" />\n			<parameter id=\"drug\" name=\"ATC Code/Class\" value=\"\'R03BB04\'\" />\n			<parameter id=\"numOfMeds\" name=\"Opioid Medications\" value=\"1\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"fev1_fvc\" name=\"IFNULL( OBS.fev1_fvc, \'NA\')\" title=\"FEV1/FVC\" primary=\"false\" />\n			<column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'NA\')\" title=\"Tiotroprium Medications\" primary=\"false\" />			\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"fev1_fvc\" name=\"IFNULL( OBS.fev1_fvc, \'NA\')\" title=\"FEV1/FVC\" primary=\"false\" />\n			<column id=\"numOfMeds\" name=\"IFNULL( MEDS.numOfMeds, \'NA\')\" title=\"Tiotroprium Medications\" primary=\"false\" />			\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"496\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code,3) IN ${dxcodesICD} AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN ${dxcodesSnoMed} AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 490,491,492,494,496 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE b.dx_code1 IN ${billingCode} OR b.dx_code2 IN ${billingCode} OR b.dx_code3 IN ${billingCode}\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code,3) IN ${dxcodesICD}) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN ${dxcodesSnoMed})\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- FEV1/FVC measurement\n  LEFT JOIN (\n    SELECT m.demographicNo AS demographic_no, m.dataField AS fev1_fvc, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = \'FEV1\'\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = \'FEV1\'\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBS\n  ON (d.demographic_no = OBS.demographic_no)\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC LIKE ${drug}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR (OBS.fev1_fvc IS NOT NULL AND (OBS.fev1_fvc &lt; ${fev1_fvc} OR (OBS.fev1_fvc &gt; 1 AND OBS.fev1_fvc &lt; 100*${fev1_fvc}))) OR (MEDS.numOfMeds IS NOT NULL AND MEDS.numOfMeds &gt;= ${numOfMeds}))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'0', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId9,'COPD Prevalence','CDM','COPD','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with COPD.','\ni) COPD patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>COPD</subCategory>\n		<name>COPD Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with COPD.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) COPD patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"490,491,492,494,496\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"32398004,63480004,61937009,74417001,185086009,49158009,12295008,13645005\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT COPD\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current COPD\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT COPD\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current COPD\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'490\', \'491\', \'492\', \'494\', \'496\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'32398004\', \'63480004\', \'61937009\', \'74417001\', \'185086009\', \'49158009\', \'12295008\', \'13645005\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"490,491,492,494,496\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"32398004,63480004,61937009,74417001,185086009,49158009,12295008,13645005\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'490\', \'491\', \'492\', \'494\', \'496\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'32398004\', \'63480004\', \'61937009\', \'74417001\', \'185086009\', \'49158009\', \'12295008\', \'13645005\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId10,'Consider Chronic Liver Disease','CDM','Chronic Liver Disease','DoBC CPQI PSP Panel','2017-08-02','Patients with chronic liver disease dx in 2+ bills or 2+ visit encounters within last 3 years\n		','\n		  Created for Doctors of BC\n		  i) Chronic Liver Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 328383001 or starting with 571, 573\nAND with >=2 Bills with the billing code starting with 571, 573 in the last 3 years\"\n		  ii) Chronic Liver Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 328383001 or starting with 571, 573\nAND with >=2 Visit Encounters with the Snomed diagnosis code 328383001 or the ICD9 diagnosis code starting with 571, 573 in the last 3 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Liver Disease</subCategory>\n		<name>Consider Chronic Liver Disease</name>\n		<definition>\n			Patients with chronic liver disease dx in 2+ bills or 2+ visit encounters within last 3 years\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Chronic Liver Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 328383001 or starting with 571, 573\nAND with >=2 Bills with the billing code starting with 571, 573 in the last 3 years\"\n		  ii) Chronic Liver Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 328383001 or starting with 571, 573\nAND with >=2 Visit Encounters with the Snomed diagnosis code 328383001 or the ICD9 diagnosis code starting with 571, 573 in the last 3 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"571,573\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"328383001\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"571,573\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 571,573 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 571,573/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Chronic Liver Disease dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Chronic Liver Disease dx in ${numOfVisits}+ visits\"\n-- Consider OBS here if needed  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'571\',\'573\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'328383001\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 571,573 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'571\',\'573\') OR LEFT(b.dx_code2, 3) IN (\'571\',\'573\') OR LEFT(b.dx_code3, 3) IN (\'571\',\'573\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'571\',\'573\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'328383001\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"571,573\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"328383001\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"571,573\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 571,573 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 571,573/ICD9\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"571\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'571\',\'573\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'328383001\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 571,573 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'571\',\'573\') OR LEFT(b.dx_code2, 3) IN (\'571\',\'573\') OR LEFT(b.dx_code3, 3) IN (\'571\',\'573\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'571\',\'573\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'328383001\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n-- Consider OBS here if needed  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits})))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId10,'Chronic Liver Disease Prevalence','CDM','Chronic Liver Disease','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Chronic Liver Disease.','\ni) Chronic Liver Disease: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 328383001 or starting with 571, 573\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 328383001 or starting with 571, 573\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Liver Disease</subCategory>\n		<name>Chronic Liver Disease Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Chronic Liver Disease.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) Chronic Liver Disease: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 328383001 or starting with 571, 573\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 328383001 or starting with 571, 573\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"571,573\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"328383001\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT CHRONIC LIVER DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Chronic Liver Disease\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT CHRONIC LIVER DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Chronic Liver Disease\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'571\', \'573\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'328383001\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"571,573\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"328383001\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'571\', \'573\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'328383001\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId11,'Consider Chronic Kidney Disease','CDM','Chronic Kidney Disease','DoBC CPQI PSP Panel','2017-08-02','Patients with chronic kidney disease dx in 2+ bills or 2+ visit encounters within last 3 years or eGFR <60 or ACR >=3\n		','\n		  Created for Doctors of BC\n		  i) Chronic Kidney Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 585 in the last 3 years\"\n		  ii) Chronic Kidney Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\nAND with >= 2 Visit Encounters with Snomed diagnosis code 90688005, 709044004 or the ICD9 diagnosis code starting with 585 in the last 3 years\"\n		  iii) eGFR <60 or ACR >=3: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 585\nAND with last eGFR (estimated Glomerular Filtration Rate) lab result <60 OR a last ACR (Albumin:creatinine ratio) lab result >=3 OR  2 or more eGFR <60 or ACR >=3 in the last 2 years\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Kidney Disease</subCategory>\n		<name>Consider Chronic Kidney Disease</name>\n		<definition>\n			Patients with chronic kidney disease dx in 2+ bills or 2+ visit encounters within last 3 years or eGFR &lt;60 or ACR &gt;=3\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Created for Doctors of BC\n		  i) Chronic Kidney Disease dx in 2+ bills: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\nAND with >= 2 Bills with the ICD9 diagnosis code starting with 585 in the last 3 years\"\n		  ii) Chronic Kidney Disease dx in 2+ visits: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\nAND with >= 2 Visit Encounters with Snomed diagnosis code 90688005, 709044004 or the ICD9 diagnosis code starting with 585 in the last 3 years\"\n		  iii) eGFR &lt;60 or ACR &gt;=3: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 585\nAND with last eGFR (estimated Glomerular Filtration Rate) lab result &lt;60 OR a last ACR (Albumin:creatinine ratio) lab result &gt;=3 OR  2 or more eGFR &lt;60 or ACR &gt;=3 in the last 2 years\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"582,585\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"90688005,709044004\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"582,585\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 582,585 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 582,585/ICD9\" value=\"2\" />\n			<parameter id=\"obs1Name\" name=\"Obs 1 Name\" value=\"\'EGFR\'\" />\n			<parameter id=\"obs1Result\" name=\"Obs 1 Result\" value=\"60\" />\n			<parameter id=\"obs2Name\" name=\"Obs 2 Name\" value=\"\'ACR\'\" />\n			<parameter id=\"obs2Result\" name=\"Obs 2 Result\" value=\"3\" />\n			<parameter id=\"numOfObs\" name=\"Number of measurements\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 2 YEAR )\" />\n			<upperLimit id=\"labdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Chronic Kidney Disease dx in ${numOfBills}+ bills\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS \"Number with Chronic Kidney Disease dx in ${numOfVisits}+ visits\",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND (fin.result1 &lt; ${obs1Result} OR fin.result2 &gt;= ${obs2Result} OR fin.cntResult1 &gt;= ${numOfObs} OR fin.cntResult2 &gt;= ${numOfObs})) THEN 1 ELSE 0 END ) , 0) AS \"Number with eGFR &lt; ${obs1Result} or ACR &gt;= ${obs2Result}\"  \nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    OBS1LAST.result AS result1,\n    OBS2LAST.result AS result2,\n    OBS1CNT.countOBS AS cntResult1,\n    OBS2CNT.countOBS AS cntResult2,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'582\',\'585\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'90688005\',\'709044004\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 582,585 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'582\',\'585\') OR LEFT(b.dx_code2, 3) IN (\'582\',\'585\') OR LEFT(b.dx_code3, 3) IN (\'582\',\'585\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'582\',\'585\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'90688005\',\'709044004\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs1Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1LAST\n  ON (d.demographic_no = OBS1LAST.demographic_no) \n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs2Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs2Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS2LAST\n  ON (d.demographic_no = OBS2LAST.demographic_no)\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField, count(m.dataField) as countOBS\n    FROM measurements m\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\' AND m.dataField &lt; ${obs1Result}\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdate}\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1CNT\n  ON (d.demographic_no = OBS1CNT.demographic_no) \n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField, count(m.dataField) as countOBS\n    FROM measurements m\n    WHERE m.type = ${obs2Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dataField &gt;= ${obs2Result}\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdate}\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS2CNT\n  ON (d.demographic_no = OBS2CNT.demographic_no)\n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"Provider Number\" value=\"loggedInProvider\" />\n			<parameter id=\"active\" name=\"Active Patients\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"582,585\" />\n                        <parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n                        <parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"90688005,709044004\" />\n                        <parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"billingCode\" name=\"ICD9 Billing Code\" value=\"582,585\" />\n			<parameter id=\"numOfBills\" name=\"Number of ICD9 582,585 Bills\" value=\"2\" />\n			<parameter id=\"numOfVisits\" name=\"Number of Visit Encounters coded 582,585/ICD9\" value=\"2\" />\n			<parameter id=\"obs1Name\" name=\"Obs 1 Name\" value=\"\'EGFR\'\" />\n			<parameter id=\"obs1Result\" name=\"Obs 1 Result\" value=\"60\" />\n			<parameter id=\"obs2Name\" name=\"Obs 2 Name\" value=\"\'ACR\'\" />\n			<parameter id=\"obs2Result\" name=\"Obs 2 Result\" value=\"3\" />\n			<parameter id=\"numOfObs\" name=\"Number of measurements\" value=\"2\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		\n		<range>\n			<lowerLimit id=\"billingdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"billingdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"visitdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 3 YEAR )\" />\n			<upperLimit id=\"visitdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n			<lowerLimit id=\"labdate\" label=\"From Date\" name=\"Date\" value=\"DATE_SUB( NOW(), INTERVAL 2 YEAR )\" />\n			<upperLimit id=\"labdate\" label=\"Date Today\" name=\"Date\" value=\"NOW()\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"lastOBS1\" name=\"IFNULL( OBS1LAST.result, \'NA\')\" title=\"Last EGFR\" primary=\"false\" />\n			<column id=\"testDateOBS1\" name=\"IFNULL( DATE_FORMAT( OBS1LAST.dateObserved, \'%m-%d-%Y\' ), \'NA\')\" title=\"EGFR Date (yyyy-mm-dd)\" primary=\"false\" />\n			<column id=\"numOBS1s\" name=\"IFNULL( OBS1CNT.countOBS, \'0\')\" title=\"Num. eGFR &lt;60 Last 2yrs\" primary=\"false\" />\n			<column id=\"lastOBS2\" name=\"IFNULL( OBS2LAST.result, \'NA\')\" title=\"Last ACR\" primary=\"false\" />\n			<column id=\"testDateOBS2\" name=\"IFNULL( DATE_FORMAT( OBS2LAST.dateObserved, \'%m-%d-%Y\' ), \'NA\')\" title=\"ACR Date (yyyy-mm-dd)\" primary=\"false\" />\n			<column id=\"numOBS2s\" name=\"IFNULL( OBS2CNT.countOBS, \'0\')\" title=\"Num. ACR &gt;=3 Last 2yrs\" primary=\"false\" />\n		</displayColumns>\n		\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n                        <column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n                        <column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"billings\" name=\"IFNULL( BILLING.billcount, \'0\')\" title=\"Billings\" primary=\"false\" />\n			<column id=\"visits\" name=\"IFNULL( VISIT.visitcount, \'0\')\" title=\"Visits\" primary=\"false\" />\n			<column id=\"lastOBS1\" name=\"IFNULL( OBS1LAST.result, \'NA\')\" title=\"Last EGFR\" primary=\"false\" />\n			<column id=\"testDateOBS1\" name=\"IFNULL( DATE_FORMAT( OBS1LAST.dateObserved, \'%m-%d-%Y\' ), \'NA\')\" title=\"EGFR Date (yyyy-mm-dd)\" primary=\"false\" />\n			<column id=\"numOBS1s\" name=\"IFNULL( OBS1CNT.countOBS, \'0\')\" title=\"Num. eGFR &lt;60 Last 2yrs\" primary=\"false\" />\n			<column id=\"lastOBS2\" name=\"IFNULL( OBS2LAST.result, \'NA\')\" title=\"Last ACR\" primary=\"false\" />\n			<column id=\"testDateOBS2\" name=\"IFNULL( DATE_FORMAT( OBS2LAST.dateObserved, \'%m-%d-%Y\' ), \'NA\')\" title=\"ACR Date (yyyy-mm-dd)\" primary=\"false\" />\n			<column id=\"numOBS2s\" name=\"IFNULL( OBS2CNT.countOBS, \'0\')\" title=\"Num. ACR &gt;=3 Last 2yrs\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"dxUpdate\" name=\"Disease Registry Update\" value=\"585\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN (\'582\',\'585\') AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN (\'90688005\',\'709044004\') AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 582,585 in last 3 years\n  LEFT JOIN (\n    SELECT b.demographic_no AS demographic_no, b.dx_code1 AS dxcode1, b.dx_code2 AS dxcode2, b.dx_code3 AS dxcode3, COUNT(b.demographic_no) AS billcount\n    FROM billingmaster b\n    WHERE ( LEFT(b.dx_code1, 3) IN (\'582\',\'585\') OR LEFT(b.dx_code2, 3) IN (\'582\',\'585\') OR LEFT(b.dx_code3, 3) IN (\'582\',\'585\') )\n    AND DATE(b.createdate) &gt; ${lowerLimit.billingdate}\n    AND b.demographic_no &gt; 0\n    GROUP BY b.demographic_no HAVING COUNT(b.demographic_no) &gt; -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code, 3) IN (\'582\',\'585\')) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN (\'90688005\',\'709044004\'))\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- Consider OBS here if needed\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs1Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1LAST\n  ON (d.demographic_no = OBS1LAST.demographic_no) \n  LEFT JOIN (\n    SELECT m.demographicNo AS demographic_no, m.dataField as result, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = ${obs2Name}\n      AND dataField REGEXP \'^[0-9\.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = ${obs2Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS2LAST\n  ON (d.demographic_no = OBS2LAST.demographic_no)\n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField, count(m.dataField) as countOBS\n    FROM measurements m\n    WHERE m.type = ${obs1Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\' AND m.dataField &lt; ${obs1Result}\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdate}\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS1CNT\n  ON (d.demographic_no = OBS1CNT.demographic_no) \n  LEFT JOIN ( \n    SELECT m.demographicNo AS demographic_no, m.dataField, count(m.dataField) as countOBS\n    FROM measurements m\n    WHERE m.type = ${obs2Name}\n    AND m.dataField REGEXP \'^[0-9\.]+$\'\n    AND m.dataField &gt;= ${obs2Result}\n    AND DATE(m.dateObserved) &gt; ${lowerLimit.labdate}\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo HAVING COUNT(m.demographicNo) &gt; -1\n  ) OBS2CNT\n  ON (d.demographic_no = OBS2CNT.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND ( dxr.dxresearch_code IS NULL AND\n  ( (BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR\n    (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR\n    ( (OBS1LAST.result IS NOT NULL AND OBS1LAST.result &lt; ${obs1Result}) OR\n      (OBS2LAST.result IS NOT NULL AND OBS2LAST.result &gt;= ${obs2Result}) OR\n      (OBS1CNT.countOBS IS NOT NULL AND OBS1CNT.countOBS &gt;= ${numOfObs}) OR\n      (OBS2CNT.countOBS IS NOT NULL AND OBS2CNT.countOBS &gt;= ${numOfObs})) )\n  )\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) 
	        VALUES (@dashboardId11,'Chronic Kidney Disease Prevalence','CDM','Chronic Kidney Disease','DoBC CPQI PSP Panel','2017-08-02','Proportion of active patients in the practice coded with Chronic Kidney Disease.','\ni) CKD patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\"\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Kidney Disease</subCategory>\n		<name>Chronic Kidney Disease Prevalence</name>\n		<definition>Proportion of active patients in the practice coded with Chronic Kidney Disease.</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\ni) CKD patients: \"Patient Status: Active\nAND has a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\"\nii) Other patients: \"Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 90688005, 709044004 OR starting with 582, 585\"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>03-13-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = \'${provider}\'\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"582,585\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"90688005,709044004\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<query>\n			<!-- Indicator SQL Query here -->\nSELECT\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITH CURRENT CHRONIC KIDNEY DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is not NULL , 1, 0) ) , 0 ) AS \"Number Active, Current Chronic Kidney Disease\",\n -- TOTAL NUMBER OF PATIENTS NOTED AS ACTIVE WITHOUT CURRENT CHRONIC KIDNEY DISEASE\n IF( COUNT(fin.patient) &gt; 0, SUM( IF( dxresearch_code is NULL , 1, 0) ) , 0 ) AS \"Number Active, No Current Chronic Kidney Disease\"\nFROM (\n SELECT d.demographic_no AS patient, d.patient_status AS pt_status, dxresearch_code\n FROM demographic d\n LEFT JOIN (\n  SELECT demographic_no, dxresearch_code, COUNT(dxresearch_code)\n  FROM dxresearch\n  WHERE status=\'A\' AND\n  (\n   (LEFT(dxresearch_code, 3) IN (\'582\', \'585\') AND coding_system = ${dxcodesSysICD}) OR\n   (dxresearch_code IN (\'90688005\', \'709044004\') AND coding_system LIKE ${dxcodesSysSnoMed})\n   )\n  GROUP BY demographic_no\n  ORDER BY demographic_no\n ) problems\n ON d.demographic_no = problems.demographic_no\n WHERE d.provider_no LIKE \'${provider}\' AND d.patient_status = ${pstatus}\n AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-13-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />	\n			<parameter id=\"pstatus\" name=\"Patient Status\" value=\"\'AC\'\" />\n			<parameter id=\"dxcodesICD\" name=\"Dx Codes (ICD)\" value=\"582,585\" />\n			<parameter id=\"dxcodesSysICD\" name=\"DX CodeSystem (ICD)\" value=\"\'icd9\'\" />\n			<parameter id=\"dxcodesSnoMed\" name=\"Dx Codes (SnoMed)\" value=\"90688005,709044004\" />\n			<parameter id=\"dxcodesSysSnoMed\" name=\"Dx CodeSystem (SnoMed)\" value=\"\'snomed%\'\" />\n			<parameter id=\"excludedPatient\" name=\"Excluded Patient\" value=\"excludedPatient\" />\n		</params>\n		<displayColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \', d.first_name )\" title=\"Patient Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographic\" name=\"d.demographic_no\" title=\"Patient Id\" primary=\"true\" />\n			<column id=\"firstName\" name=\"d.first_name\" title=\"First Name\" primary=\"false\" />\n			<column id=\"lastName\" name=\"d.last_name\" title=\"Last Name\" primary=\"false\" />\n			<column id=\"dob\" name=\"DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )\" title=\"Date of Birth (mm-dd-yy)\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"dxcode\" title=\"Dx System/Code\" name=\"CONCAT(MIN(dxr.coding_system),\'/\',MIN(dxr.dxresearch_code),IF( MIN(dxr.dxresearch_code) != MAX(dxr.dxresearch_code),CONCAT( \' &amp; \', MAX(dxr.coding_system), \'/\', MAX(dxr.dxresearch_code) ),\'\') )\" primary=\"false\" />\n		</exportColumns>\n		<drillDownActions>\n			<action id=\"tickler\" name=\"Tickler\"/>\n			<action id=\"demoExcl\" name=\"Patient Exclusion\"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\nSELECT\n*			\nFROM demographic d\nLEFT JOIN dxresearch dxr\nON d.demographic_no = dxr.demographic_no\nWHERE d.patient_status=${pstatus}\nAND\n(\n (LEFT(dxr.dxresearch_code, 3) IN (\'582\', \'585\') AND dxr.coding_system = ${dxcodesSysICD}) OR\n (dxr.dxresearch_code IN (\'90688005\', \'709044004\') AND dxr.coding_system LIKE ${dxcodesSysSnoMed})\n )\nAND dxr.status = \'A\'\nAND d.provider_no LIKE \'${provider}\'\nAND d.demographic_no NOT IN ${excludedPatient}\nGROUP BY d.demographic_no\nORDER BY COUNT(d.demographic_no) DESC, d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0',0,NULL,NULL);
    INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) 
        VALUES (@dashboardId11, 'eGFR', 'CDM', 'Chronic Kidney Disease', 'OSCAR EMR', '2022-02-02', 'Providers population, age 18 and older, with an eGFR.', 'All Active Patients', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>PHC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Chronic Kidney Disease</subCategory>\n		<name>eGFR</name>\n		<metricSetName>Kidney Disease Screening</metricSetName>\n		<metricLabel>CKD Stage 4 and 5</metricLabel>\n		<definition>Providers population, age 18 and older, who have eGFR measurements by Stage.</definition>\n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n		<frameworkVersion>01-30-2018</frameworkVersion>\n		<notes>All Active Patients</notes>\n		<graphType>table</graphType>\n	</heading>\n	<indicatorQuery>\n		<version>03-30-2021</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="eGFR" name="GFR" value="\'EGFR\'" />\n			<parameter id="height" name="Height" value="\'HT\'" />		\n			<parameter id="weight" name="Weight" value="\'WT\'" />\n		</params>\n		<range>\n\n			<lowerLimit id="age" label="Min Age" name="Age" value="18" />\n					\n			<upperLimit id="height" label="Max Height (cm)" name="Height" value="210.8" />\n			<lowerLimit id="height" label="Min Height (cm)" name="Height" value="91.4" />\n			\n			<lowerLimit id="ckd1" label="Normal Renal Function" name="Normal" value="90" />\n\n			<lowerLimit id="ckd2" label="Stage 2 CKD" name="CKD-2" value="60" />\n			<upperLimit id="ckd2" label="Stage 2 CKD" name="CKD-2" value="89" />\n\n			<lowerLimit id="ckd3" label="Stage 3 CKD" name="CKD-3" value="30" />\n			<upperLimit id="ckd3" label="Stage 3 CKD" name="CKD-3" value="59" />			\n\n			<lowerLimit id="ckd4" label="Stage 4 CKD" name="CKD-4" value="15" />\n			<upperLimit id="ckd4" label="Stage 4 CKD" name="CKD-4" value="29" />\n			\n			<upperLimit id="ckd5" label="Stage 5 CKD" name="CKD-5" value="15" />							\n			\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			\n			SELECT \n	\n				IF( COUNT(fin.patient) > 0, \n						 SUM( IF( fin.EGFR >= ${lowerLimit.ckd1} , 1, 0 ) ) \n				,0 ) AS \'CKD Stage 1 (normal)\',\n				\n				IF( COUNT(fin.patient) > 0, \n						 SUM( IF( fin.EGFR >= ${lowerLimit.ckd2} AND fin.EGFR &lt; ${upperLimit.ckd2}, 1, 0 ) ) \n				,0 ) AS \'CKD Stage  2\',\n				\n				IF( COUNT(fin.patient) > 0, \n						 SUM( IF( fin.EGFR >= ${lowerLimit.ckd3} AND fin.EGFR &lt; ${upperLimit.ckd3}, 1, 0 ) )\n				,0 ) AS \'CKD Stage  3\',\n				\n				IF( COUNT(fin.patient) > 0, \n						 SUM( IF( fin.EGFR >= ${lowerLimit.ckd4} AND fin.EGFR &lt; ${upperLimit.ckd4}, 1, 0 ) ) \n				,0 ) AS \'CKD Stage 4\',\n			\n				IF( COUNT(fin.patient) > 0, \n						SUM( IF( fin.EGFR &lt; ${upperLimit.ckd5}, 1, 0 ) )\n				,0 ) AS \'CKD Stage 5\',	\n			\n				IF( COUNT(fin.patient) > 0, \n						SUM( IF( fin.EGFR = 999, 1, 0 ) ) \n				,0 ) AS \'eGFR Not Recorded\'\n			\n			FROM (\n			\n				SELECT \n			\n					d.demographic_no AS patient,\n					IFNULL( REPLACE(EGFR.dataField, \'>\',\'\'), 999) AS EGFR\n			\n				FROM demographic d \n			\n		\n				-- eGFR Screening\n				LEFT JOIN ( \n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE type = ${eGFR}\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n					ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n					AND m1.type = ${eGFR}\n                                	ORDER BY m1.id DESC\n\n				) EGFR \n				ON (d.demographic_no = EGFR.demographicNo)\n			\n			\n				WHERE d.patient_status = ${pstatus} \n				AND provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n					\n				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>03-30-2021</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="eGFR" name="GFR" value="\'EGFR\'" />\n			<parameter id="height" name="Height" value="\'HT\'" />		\n			<parameter id="weight" name="Weight" value="\'WT\'" />\n		</params>\n		<range>\n\n			<lowerLimit id="age" label="Min Age" name="Age" value="18" />\n					\n			<upperLimit id="height" label="Max Height (cm)" name="Height" value="210.8" />\n			<lowerLimit id="height" label="Min Height (cm)" name="Height" value="91.4" />\n			\n			<lowerLimit id="ckd1" label="Normal Renal Function" name="Normal" value="90" />\n\n			<lowerLimit id="ckd2" label="Stage 2 CKD" name="CKD-2" value="60" />\n			<upperLimit id="ckd2" label="Stage 2 CKD" name="CKD-2" value="89" />\n\n			<lowerLimit id="ckd3" label="Stage 3 CKD" name="CKD-3" value="30" />\n			<upperLimit id="ckd3" label="Stage 3 CKD" name="CKD-3" value="59" />			\n\n			<lowerLimit id="ckd4" label="Stage 4 CKD" name="CKD-4" value="15" />\n			<upperLimit id="ckd4" label="Stage 4 CKD" name="CKD-4" value="29" />\n			\n			<upperLimit id="ckd5" label="Stage 5 CKD" name="CKD-5" value="15" />							\n			\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="height" name="IFNULL(HT.dataField, \'\')" title="Height" primary="false" />	\n			<column id="weight" name="IFNULL(WT.dataField, \'\')" title="Weight" primary="false" />				\n			<column id="EGFR" name="IFNULL( EGFR.dataField, \'\')" title="eGFR" primary="false" />\n			<column id="egfrdate" name="IFNULL( DATE_FORMAT( EGFR.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Last eGFR (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="height" name="IFNULL(HT.dataField, \'\')" title="Height" primary="false" />	\n			<column id="weight" name="IFNULL(WT.dataField, \'\')" title="Weight" primary="false" />				\n			<column id="EGFR" name="IFNULL( EGFR.dataField, \'\')" title="eGFR" primary="false" />\n			<column id="egfrdate" name="IFNULL( DATE_FORMAT( EGFR.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Date of Last eGFR (mm-dd-yyyy)" primary="false" />\n		</exportColumns>\n		<drillDownActions>\n			<action id="tickler" name="Tickler"/>\n			<action id="patientStatusUpdate" name="Set Patient Inactive"/>\n			<action id="dxUpdate" name="Disease Registry Update (Chronic Kidney Disease)" value="585"/>\n			<action id="demoExcl" name="Patient Exclusion"/>\n		</drillDownActions>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d \n	\n				-- Look for eGFR of 30 or less\n				LEFT JOIN ( \n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE type = ${eGFR}\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n					ON m1.dateObserved = m2.dateObserved\n                                	AND m1.demographicNo = m2.demographicNo\n					AND m1.type = ${eGFR}\n                                	ORDER BY m1.id DESC\n\n				) EGFR \n				ON (d.demographic_no = EGFR.demographicNo)\n				\n				LEFT JOIN ( \n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE type = ${height}\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n					ON m1.dateObserved = m2.dateObserved\n                                        AND m1.demographicNo = m2.demographicNo\n					AND m1.type = ${height}\n                                        ORDER BY m1.id DESC\n				) HT \n				ON (d.demographic_no = HT.demographicNo)\n				\n				-- get the weights so that they can be filtered out.\n				LEFT JOIN ( \n					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved\n                                        FROM measurements m1\n                                        RIGHT JOIN (\n						SELECT demographicNo, MAX(DateObserved) as dateObserved\n                                                FROM measurements\n                                                WHERE type = ${weight}\n                                                AND demographicNo > 0\n                                                GROUP BY demographicNo\n                                        ) m2\n					ON m1.dateObserved = m2.dateObserved\n                                        AND m1.demographicNo = m2.demographicNo\n					AND m1.type = ${weight}\n                                        ORDER BY m1.id DESC\n\n				) WT \n				ON (d.demographic_no = WT.demographicNo)\n			\n		\n			WHERE d.patient_status = ${pstatus} \n			AND provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n				NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n\n                       AND REPLACE(EGFR.dataField,\'>\',\'\') &lt; ${upperLimit.ckd4} \n\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1	\n\n\n\n		</query>\n	</drillDownQuery>\n	\n</indicatorTemplateXML>\n', b'1', b'0', 0, 'CKD Stage 4 and 5', 'CKD Screening');

END IF;
-- phc for everywhere other than BC we need to patch the default templates
 
IF EXISTS( (SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='billing_on_cheader1') ) THEN
    IF NOT EXISTS( (SELECT * from `indicatorTemplate` WHERE `notes` = "ON") ) THEN
        UPDATE `indicatorTemplate` SET `active` = false,`notes` ="BC"  WHERE `name` LIKE '%Patient Status (Seen/Billed)%' ;
        UPDATE `indicatorTemplate` SET `active` = false WHERE `notes` ="BC" ;
        -- ON versions with `notes` = "ON" --
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId3, 'Influenza Immunization', 'Preventive Health Care', 'Immunization', 'OSCAR EMR', '2022-03-03', 'Active patient population age 65 and older who received influenza immunization within the last 12 months.', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Immunization</subCategory>\n		<name>Influenza Immunization</name>\n		<metricSetName>Influenza Immunization</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Active patient population age 65 and older who received influenza immunization within the last 12 months.</definition>\n		<framework>Based on CIHI and MOHLTC</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes>ON</notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="prevention" name="Immunization" value="\'Flu\'" />\n			<parameter id="inf" name="inf" value="\'[Inf]%\'" />\n			<parameter id="pstatus" name="PatientStatus" value="\'AC\'" />	\n			<parameter id="servicecode" name="ServiceCode" value="\'Q130A\'" />\n		</params>\n		<range>\n			<lowerLimit id="age" label="Min Patient Age" name="Age" value="65" />\n			\n			<lowerLimit id="date" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			\n			<lowerLimit id="billdate" label="From Date" name="Date" value="DATE_FORMAT( CONCAT(IF(9 > MONTH(NOW()), YEAR(NOW()) - 1, YEAR(NOW())),\'-\',9,\'-\',30), \'%Y-%m-%d\' )" />\n			<upperLimit id="billdate" label="To Date" name="Date" value="DATE_FORMAT( CONCAT(IF(9 > MONTH(NOW()), YEAR(NOW()), YEAR(NOW()) + 1),\'-\',1,\'-\',31), \'%Y-%m-%d\' )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n\n				IF ( COUNT(fin.patient) > 0,\n					SUM(IF(fin.flu > 0 OR fin.bill > 0, 1, 0))\n				,0 ) AS "With Influenza Immunization",\n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM(IF( fin.flu = 0 AND fin.bill = 0  AND fin.flu2 = 0, 1, 0))\n				,0 ) AS "No Influenza Immunization",\n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM(IF( fin.flu = 0 AND fin.bill = 0 AND fin.flu2 > 0, 1, 0))\n				,0 ) AS "Refused Influenza Immunization"\n			FROM(\n				SELECT \n				d.demographic_no AS patient,\n				IFNULL(FLU.id, 0) as flu,\n				IFNULL(BILL.id, 0) as bill,\n				IFNULL(FLU2.id, 0) as flu2\n			\n				FROM demographic d\n			\n				-- LOOK FOR INFLUENZA VACCINES\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					WHERE (p.prevention_type = ${prevention} OR  p.prevention_type LIKE ${inf})\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND DATE(p.prevention_date) BETWEEN ${lowerLimit.billdate} AND ${upperLimit.billdate} \n					AND p.demographic_no > 0\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) FLU \n				ON (d.demographic_no = FLU.demographic_no )\n				\n				-- WITH a tracking code of Q130A between Sep 30 and Jan 31 of the current flu season\n				LEFT JOIN (\n					SELECT b1.id, b1.demographic_no, b1.billing_date\n					FROM billing_on_cheader1 b1, billing_on_item b2\n					WHERE b1.id = b2.ch1_id\n					AND b1.status != \'D\'\n					AND b2.service_code = ${servicecode}\n					AND b2.service_date BETWEEN ${lowerLimit.billdate} AND ${upperLimit.billdate}\n					AND b1.demographic_no > 0\n					GROUP BY b1.demographic_no HAVING COUNT(b1.demographic_no) > -1\n				) BILL\n				ON (d.demographic_no = BILL.demographic_no )\n				\n				-- influenza immunization refusal \n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					WHERE (p.prevention_type = ${prevention} OR  p.prevention_type LIKE ${inf})\n					AND p.deleted = 0\n					AND p.refused = 1\n					AND DATE(p.prevention_date) BETWEEN ${lowerLimit.billdate} AND ${upperLimit.billdate}\n					AND p.demographic_no > 0\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) FLU2 \n				ON (d.demographic_no = FLU2.demographic_no )\n			\n				-- WHERE THE PATIENTS AGE AT THE TIME OF THE FLU SHOT\n				WHERE d.patient_status = ${pstatus} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				AND ( ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n			\n			)fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="prevention" name="Immunization" value="\'Flu\'" />\n			<parameter id="inf" name="inf" value="\'[Inf]%\'" />\n			<parameter id="pstatus" name="PatientStatus" value="\'AC\'" />\n			<parameter id="servicecode" name="ServiceCode" value="\'Q130A\'" />\n			<parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\n		</params>\n		<range>\n			<lowerLimit id="age" label="Min Patient Age" name="Age" value="65" />\n			\n			<lowerLimit id="date" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n			\n			<lowerLimit id="billdate" label="From Date" name="Date" value="DATE_FORMAT( CONCAT(IF(9 > MONTH(NOW()), YEAR(NOW()) - 1, YEAR(NOW())),\'-\',9,\'-\',30), \'%Y-%m-%d\' )" />\n			<upperLimit id="billdate" label="To Date" name="Date" value="DATE_FORMAT( CONCAT(IF(9 > MONTH(NOW()), YEAR(NOW()), YEAR(NOW()) + 1),\'-\',1,\'-\',31), \'%Y-%m-%d\' )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="preventionDate" name="IFNULL( DATE_FORMAT( DATE(FLU0.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Most Recent Immunization Date (mm-dd-yyyy)" primary="false" />\n			<column id="billingDate" name="IFNULL( DATE_FORMAT( DATE(BILL_M.billing_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Q130A Tracking Code (mm-dd-yyyy)" primary="false" />\n			<column id="refused" name="IFNULL(FLU0_R.refused, \'\')" title="Immunization Refusal Status" primary="false" />\n			<column id="refusedDate" name="IFNULL( DATE_FORMAT( DATE(FLU0_R.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Refusal (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n 			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="preventionDate" name="IFNULL( DATE_FORMAT( DATE(FLU0.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Most Recent Immunization Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billingDate" name="IFNULL( DATE_FORMAT( DATE(BILL_M.billing_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Q130A Tracking Code (mm-dd-yyyy)" primary="false" />\n                        <column id="refused" name="IFNULL(FLU0_R.refused, \'\')" title="Immunization Refusal Status" primary="false" />\n                        <column id="refusedDate" name="IFNULL( DATE_FORMAT( DATE(FLU0_R.prevention_date), \'%m-%d-%Y\' ) , \'\')" title="Date of Most Recent Refusal (mm-dd-yyyy)" primary="false" />\n\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d\n		\n			-- LOOK FOR INFLUENZA VACCINES\n			LEFT JOIN ( \n				SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n				FROM preventions p	\n				WHERE (p.prevention_type = ${prevention} OR  p.prevention_type LIKE ${inf})\n				AND p.deleted = 0\n				AND p.refused = 0\n				AND DATE(p.prevention_date) BETWEEN ${lowerLimit.billdate} AND ${upperLimit.billdate} \n				AND p.demographic_no > 0\n				GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n			) FLU \n			ON (d.demographic_no = FLU.demographic_no )\n			\n			-- WITH  influenza immunization refusal \n			LEFT JOIN ( \n				SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n				FROM preventions p	\n				WHERE (p.prevention_type = ${prevention} OR  p.prevention_type LIKE ${inf})\n				AND p.deleted = 0\n				AND p.refused = 1\n				AND DATE(p.prevention_date) BETWEEN ${lowerLimit.billdate} AND ${upperLimit.billdate}\n				AND p.demographic_no > 0\n				GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n			) FLU2 \n			ON (d.demographic_no = FLU2.demographic_no )\n			\n\n			-- WITH most recent influenza immunization \n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date\n                                FROM preventions p\n                                WHERE (p.prevention_type = ${prevention} OR  p.prevention_type LIKE ${inf})\n                                AND p.deleted = 0\n                                AND p.refused = 0\n                                AND p.demographic_no > 0\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) FLU0\n                        ON (d.demographic_no = FLU0.demographic_no )\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, p.id, MAX(p.prevention_date) AS prevention_date, \'Refused\' AS refused\n                                FROM preventions p\n                                WHERE (p.prevention_type = ${prevention} OR  p.prevention_type LIKE ${inf})\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.demographic_no > 0\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) FLU0_R\n                        ON (d.demographic_no = FLU0_R.demographic_no )\n\n			-- WITH a tracking code of Q130A between Sep 30 and Jan 31 of the current flu season\n			LEFT JOIN (\n				SELECT b1.id, b1.demographic_no, MAX(b1.billing_date) AS billing_date\n				FROM billing_on_cheader1 b1, billing_on_item b2\n				WHERE b1.id = b2.ch1_id\n				AND b1.status != \'D\'\n				AND b2.service_code = ${servicecode}\n				AND b2.service_date BETWEEN ${lowerLimit.billdate} AND ${upperLimit.billdate}\n				AND b1.demographic_no > 0\n				GROUP BY b1.demographic_no HAVING COUNT(b1.demographic_no) > -1\n			) BILL\n			ON (d.demographic_no = BILL.demographic_no )\n		\n		  	-- Most recent of Q130A\n                        LEFT JOIN (\n                                SELECT b1.id, b1.demographic_no, MAX(b2.service_date) AS billing_date\n                                FROM billing_on_cheader1 b1, billing_on_item b2\n                                WHERE b1.id = b2.ch1_id\n				AND b1.status != \'D\'\n                                AND b2.service_code = ${servicecode}\n                                AND b1.demographic_no > 0\n                                GROUP BY b1.demographic_no HAVING COUNT(b1.demographic_no) > -1\n                        ) BILL_M\n                        ON (d.demographic_no = BILL_M.demographic_no )\n\n			-- WHERE THE PATIENTS AGE AT THE TIME OF THE FLU SHOT\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND ( ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), \n				NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )\n		\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Influenza Immunization</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% No Influenza Immunization" toLabel="Influenza overdue"/>\n		<sharedMapping fromLabel="% With Influenza Immunization" toLabel="Influenza up to date"/>\n		<sharedMapping fromLabel="% Refused Influenza Immunization" toLabel="Influenza refused"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Influenza Immunization');
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId3, 'Breast Cancer Screening Recall', 'Preventive Health Care', 'Cancer', 'OSCAR EMR', '2022-02-02', '% of female patients aged 50 to 74 who had a mammogram within the past two years:\n- Number of individuals in the denominator who had a mammogram within the past 24 months.\n- excluding patients with a diagnostic code V4571 for Mastectomy\n- patients w', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n<author>Trinity Healthcare Technologies for Oscar EMR</author>\n<uid></uid>\n<heading>\n<category>Preventive Health Care (Click on the chart to see details)</category>\n<subCategory>Cancer</subCategory>\n<name>Breast Cancer Screening Recall</name>\n<metricSetName>Breast Cancer Screening Overdue</metricSetName>\n<metricLabel></metricLabel>\n<definition>female patients aged 50 to 74 who had a mammogram within the past two years:\n- Number of individuals in the denominator who had a mammogram within the past 24 months.\n- excluding patients with a diagnostic code V4571 for Mastectomy\n- patients with a null or “pending” prevention result are overdue.\n</definition>\n<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n<frameworkVersion>2022-03-03</frameworkVersion>\n<notes></notes>\n        <graphType>table</graphType>\n</heading>\n<indicatorQuery>\n<version>2022-03-03</version>\n<params>\n<!-- \nRequired parameter provider. Value options are: \n[ an individual providerNo, or provider range ] ie: value="370, 1001" \n"all" ie: value="all" including null.\n"loggedInProvider" ie:\nDefault is "loggedInProvider"\nUse this parameter in the query as ${provider}\nThis parameter should be used for fetching patient\'s assigned to a MRP.\nie: WHERE demographic.provider_no = ${provider}\n-->\n<parameter id="provider" name="provider_no" value="loggedInProvider" />\n<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n<parameter id="prevention" name="MAM" value="\'MAM\'" />\n<parameter id="gender" name="GenderFemale" value="\'F\'" />\n<!-- 174 female breast cancer -->\n<parameter id="dxexclude" name="Exclude Dx" value="V4571, 174" />\n<!-- Q131A Mammography tracking code, Q141 Mammogram exclusion code -->\n<parameter id="servicecode131" name="Service Code" value="\'Q131A\'" />\n<parameter id="servicecode141" name="Service Code" value="\'Q141A\'" />\n<parameter id="documentation1" name="documentation1" value="\'%mastectomy%\'" />\n<parameter id="documentation2" name="documentation2" value="\'%cancer breast%\'" />\n<parameter id="documentation3" name="documentation3" value="\'%breast ca%\'" />\n<parameter id="documentation4" name="documentation4" value="\'%ca breast%\'" />\n</params>\n<range>\n<upperLimit id="age" label="Max Age" name="Age" value="74" />\n<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n\n<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />\n<lowerLimit id="date1" label="1 Month" name="Date1" value="DATE_SUB( NOW(), INTERVAL 1 MONTH )" />\n<lowerLimit id="date2" label="2 Month" name="Date2" value="DATE_SUB( NOW(), INTERVAL 2 MONTH )" />\n<lowerLimit id="date3" label="3 Month" name="Date3" value="DATE_SUB( NOW(), INTERVAL 3 MONTH )" />\n\n<lowerLimit id="date16" label="16 Months" name="Date16" value="DATE_SUB( NOW(), INTERVAL 16 MONTH )" />\n\n<lowerLimit id="date17" label="17 Months" name="Date17" value="DATE_SUB( NOW(), INTERVAL 17 MONTH )" />\n<lowerLimit id="date20" label="20 Months" name="Date20" value="DATE_SUB( NOW(), INTERVAL 20 MONTH )" />\n\n<lowerLimit id="date21" label="21 Months" name="Date21" value="DATE_SUB( NOW(), INTERVAL 21 MONTH )" />\n<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n\n<lowerLimit id="date25" label="25 Months" name="Date25" value="DATE_SUB( NOW(), INTERVAL 25 MONTH )" />\n<lowerLimit id="date27" label="27 Months" name="Date27" value="DATE_SUB( NOW(), INTERVAL 27 MONTH )" />\n</range>\n<query>\n<!-- Indicator SQL Query here -->\nSELECT \nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam24 IS NULL AND fin.bill131_24 IS NULL AND fin.mam_r24 IS NULL AND fin.mam_p24 IS NULL AND ( fin.mam25_27 > 0 OR fin.bill131_25_27 > 0), 1, 0 ) )\n\n,0 ) AS "less than 3 months overdue",\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam27 IS NULL AND fin.bill131_27 IS NULL AND fin.mam_r24 IS NULL AND fin.mam_p24 IS NULL, 1, 0 ) )\n,0 ) AS "more than 3 months overdue",\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam24 IS NULL AND fin.bill131_24 IS NULL AND fin.mam_p2 > 0, 1, 0 ))\n\n,0 ) AS "less than 2 months pending",\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam24 IS NULL AND fin.bill131_24 IS NULL AND fin.mam_p2 IS NULL AND fin.mam_p3_24 > 0 , 1, 0 ))\n,0 ) AS "more than 2 months pending",\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam24 IS NULL AND fin.bill131_24 IS NULL AND fin.mam_p24 IS NULL AND fin.mam_r24 > 0 , 1, 0 ))\n,0 ) AS "Declined",\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam20 IS NULL AND fin.bill131_20 IS NULL AND ( fin.mam21_24 > 0 OR fin.bill131_21_24 > 0 ) , 1, 0 ))\n,0 ) AS "Due in less than 4 months",\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx IS NULL AND fin.mam_i IS NULL AND fin.billQ141A IS NULL AND fin.mam16 IS NULL AND fin.bill131_16 IS NULL AND ( fin.mam17_20 > 0 OR fin.bill131_17_20 > 0 ) , 1, 0 ))\n,0 ) AS "Due in more than 4 and less than 7 months"\n\nFROM (\nSELECT \n    d.demographic_no AS \'patient\', \n    MAM16.id AS mam16,\n    MAM17_20.id AS mam17_20,\n    MAM20.id AS mam20,\n    MAM21_24.id AS mam21_24,\n    MAM24.id AS mam24,\n    MAM25_27.id AS mam25_27,\n    MAM27.id AS mam27,\n    MAM_p24.id AS mam_p24,\n    MAM_p2.id AS mam_p2,\n    MAM_p3_24.id AS mam_p3_24,\n    MAM_r24.id AS mam_r24,\n    BILL131_16.id AS bill131_16, \n    BILL131_17_20.id AS bill131_17_20, \n    BILL131_20.id AS bill131_20, \n    BILL131_21_24.id AS bill131_21_24, \n    BILL131_24.id AS bill131_24, \n    BILL131_25_27.id AS bill131_25_27, \n    BILL131_27.id AS bill131_27, \n    BILL141.id AS billQ141A,\n    MAM_i.id AS mam_i,\n    dxr.dxresearch_no AS dx \n\nFROM demographic d\n\nLEFT JOIN ( \n                                        SELECT dxresearch_no, demographic_no\n                                        FROM dxresearch\n                                        WHERE demographic_no>0\n                                        AND status = \'A\'\n                                        AND coding_system = \'icd9\'\n                                        AND dxresearch_code IN ${dxexclude}\n                                        GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n                                )dxr \n                                ON ( d.demographic_no = dxr.demographic_no) \n\n-- GET last MAMMOGRAM ENTRIES FROM PREVENTIONS\nLEFT JOIN (\n\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date17}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM16\n                                ON (d.demographic_no = MAM16.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date20} AND ${lowerLimit.date17} >= p.prevention_date\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM17_20\n                                ON (d.demographic_no = MAM17_20.demographic_no)\n\n LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date20}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM20\n                                ON (d.demographic_no = MAM20.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date24} AND ${lowerLimit.date20} > p.prevention_date\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM21_24\n                                ON (d.demographic_no = MAM21_24.demographic_no)\n\nLEFT JOIN ( \n                                    SELECT p.demographic_no, p.id\n                                    FROM preventions p, preventionsExt pe\n                                    WHERE pe.prevention_id = p.id \n                                    AND p.prevention_type = ${prevention}\n                                    AND p.deleted = 0\n                                    AND p.refused = 0\n                                    AND pe.keyval = "result" \n                                    AND pe.val != "pending"\n                                    AND p.prevention_date >= ${lowerLimit.date24}\n                                    GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1 \n                                ) MAM24\n                                ON (d.demographic_no = MAM24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND p.prevention_date >= ${lowerLimit.date27} AND ${lowerLimit.date24} > p.prevention_date\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM25_27\n                                ON (d.demographic_no = MAM25_27.demographic_no)\n\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND p.prevention_date >= ${lowerLimit.date27}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM27\n                                ON (d.demographic_no = MAM27.demographic_no)\n\n-- MAM pending\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result" \n                                        AND pe.val = "pending"\n                                        AND p.prevention_date >= ${lowerLimit.date24}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM_p24\n                                ON (d.demographic_no = MAM_p24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND p.prevention_date >= ${lowerLimit.date2}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM_p2\n                                ON (d.demographic_no = MAM_p2.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p, preventionsExt pe\n                                        WHERE pe.prevention_id = p.id \n                                        AND p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND p.prevention_date >= ${lowerLimit.date24} AND ${lowerLimit.date2} > p.prevention_date\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM_p3_24\n                                ON (d.demographic_no = MAM_p3_24.demographic_no)\n\n-- MAM declined or refused\n                                LEFT JOIN (\n                                        SELECT p.demographic_no, p.id \n                                        FROM preventions p\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\nAND p.prevention_date >= ${lowerLimit.date24}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) MAM_r24\n                                ON (d.demographic_no = MAM_r24.demographic_no)\n\n\n-- billing for Q131A \n LEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date > ${lowerLimit.date17}\n                                        GROUP BY boc.demographic_no\n                                ) BILL131_16\n                                ON (d.demographic_no = BILL131_16.demographic_no)\n\nLEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date >= ${lowerLimit.date20} AND ${lowerLimit.date17} >= boi.service_date\n                                        GROUP BY boc.demographic_no\n                                ) BILL131_17_20\n                                ON (d.demographic_no = BILL131_17_20.demographic_no)\n\nLEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date >= ${lowerLimit.date20}\n                                        GROUP BY boc.demographic_no\n                                ) BILL131_20\n                                ON (d.demographic_no = BILL131_20.demographic_no)\n\nLEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id \n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date >= ${lowerLimit.date24}\n                                        GROUP BY boc.demographic_no \n                                ) BILL131_24\n                                ON (d.demographic_no = BILL131_24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date >= ${lowerLimit.date27}\n                                        GROUP BY boc.demographic_no\n                                ) BILL131_27\n                                ON (d.demographic_no = BILL131_27.demographic_no)\n\n\nLEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date >= ${lowerLimit.date27} AND ${lowerLimit.date24} > boi.service_date\n                                        GROUP BY boc.demographic_no\n                                ) BILL131_25_27\n                                ON (d.demographic_no = BILL131_25_27.demographic_no)\n\n LEFT JOIN (\n                                        SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode131}\n                                        AND boi.service_date >= ${lowerLimit.date24} AND ${lowerLimit.date20} > boi.service_date\n                                        GROUP BY boc.demographic_no\n                                ) BILL131_21_24\n                                ON (d.demographic_no = BILL131_21_24.demographic_no)\n\n\n-- WITHOUT a service code of Q141A billed\nLEFT JOIN (\n            SELECT boc.id, boc.demographic_no, boc.billing_date\n            FROM billing_on_cheader1 boc, billing_on_item boi\n            WHERE boc.id = boi.ch1_id \n            AND boc.status != \'D\'\n            AND boi.status != \'D\'\n            AND boi.service_code = ${servicecode141}\n            GROUP BY boc.demographic_no \n) BILL141\nON (d.demographic_no = BILL141.demographic_no)\n\n-- Notes\n-- Use Ineligible in 24month searching to replace note searching\n                                LEFT JOIN (\n\n                                        SELECT demographic_no, id\n                                        FROM preventions\n                                        WHERE prevention_type = ${prevention}\n                                        AND deleted = 0\n                                        AND refused = 2\n                                        AND prevention_date >= ${lowerLimit.date24}\n                                        GROUP BY demographic_no\n\n                                ) MAM_i\n                                ON (d.demographic_no = MAM_i.demographic_no)\n\n\nWHERE d.patient_status = ${pstatus}\nAND d.provider_no = \'${provider}\'\nAND d.sex = ${gender}\nAND d.demographic_no > 0 \nAND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), ${upperLimit.date} ) / 365.25 ) ) \nBETWEEN ${lowerLimit.age} AND ${upperLimit.age}\nGROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n) fin\n</query>\n</indicatorQuery>\n<drillDownQuery>\n<version>2022-03-03</version>\n<params>\n<parameter id="provider" name="provider_no" value="loggedInProvider" />\n<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n<parameter id="prevention" name="MAM" value="\'MAM\'" />\n<parameter id="gender" name="GenderFemale" value="\'F\'" />\n<!-- 174 female breast cancer -->\n<parameter id="dxexclude" name="Exclude Dx" value="V4571, 174" />\n<!-- Q131A Mammography tracking code, Q141 Mammogram exclusion code -->\n<parameter id="servicecode131" name="Service Code" value="\'Q131A\'" />\n<parameter id="servicecode141" name="Service Code" value="\'Q141A\'" />\n<parameter id="documentation1" name="documentation1" value="\'%mastectomy%\'" />\n<parameter id="documentation2" name="documentation2" value="\'%cancer breast%\'" />\n<parameter id="documentation3" name="documentation3" value="\'%breast ca%\'" />\n<parameter id="documentation4" name="documentation4" value="\'%ca breast%\'" />\n\n</params>\n<range>\n<upperLimit id="age" label="Max Age" name="Age" value="74" />\n<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />\n\n                        <lowerLimit id="date1" label="1 Month" name="Date1" value="DATE_SUB( NOW(), INTERVAL 1 MONTH )" />\n<lowerLimit id="date2" label="2 Month" name="Date2" value="DATE_SUB( NOW(), INTERVAL 2 MONTH )" />\n<lowerLimit id="date3" label="3 Month" name="Date3" value="DATE_SUB( NOW(), INTERVAL 3 MONTH )" />\n\n                        <lowerLimit id="date16" label="16 Months" name="Date16" value="DATE_SUB( NOW(), INTERVAL 16 MONTH )" />\n                        <lowerLimit id="date17" label="17 Months" name="Date17" value="DATE_SUB( NOW(), INTERVAL 17 MONTH )" />\n                        <lowerLimit id="date20" label="20 Months" name="Date20" value="DATE_SUB( NOW(), INTERVAL 20 MONTH )" />\n\n                        <lowerLimit id="date21" label="21 Months" name="Date21" value="DATE_SUB( NOW(), INTERVAL 21 MONTH )" />\n                        <lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n\n                        <lowerLimit id="date25" label="25 Months" name="Date25" value="DATE_SUB( NOW(), INTERVAL 25 MONTH )" />\n                        <lowerLimit id="date27" label="27 Months" name="Date27" value="DATE_SUB( NOW(), INTERVAL 27 MONTH )" />\n</range>\n<displayColumns>\n<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="mamstatus" name="IFNULL(MAM0.refused, \'\')" title="Mammogram Tracking Status" primary="false" />\n                        <column id="mam" name="IFNULL(MAM0.val, \'\')" title="Mammogram Result" primary="false" />\n                        <column id="mamdate" name="IFNULL( DATE_FORMAT(MAM0.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Mammogram Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billQ131ADate" name="IFNULL( DATE_FORMAT(BILL131.service_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q131A Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date  (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n\n</displayColumns>\n<exportColumns>\n<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="mamstatus" name="IFNULL(MAM0.refused, \'\')" title="Mammogram Tracking Status" primary="false" />\n                        <column id="mam" name="IFNULL(MAM0.val, \'\')" title="Mammogram Result" primary="false" />\n                        <column id="mamdate" name="IFNULL( DATE_FORMAT(MAM0.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Mammogram Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billQ131ADate" name="IFNULL( DATE_FORMAT(BILL131.service_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q131A Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date  (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n</exportColumns>\n<query>\n<!-- Drilldown SQL Query here -->\nSELECT \n*\nFROM demographic d\nLEFT JOIN ( \nSELECT dxresearch_no, demographic_no\nFROM dxresearch\nWHERE demographic_no>0\nAND status = \'A\'\nAND coding_system = \'icd9\'\nAND dxresearch_code IN ${dxexclude}\nGROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n\n)dxr \nON ( d.demographic_no = dxr.demographic_no) \n\n\n-- GET last NOT refused MAMMOGRAM ENTRIES FROM PREVENTIONS\n                        LEFT JOIN (\n                                SELECT p.demographic_no, MAX(p.prevention_date) AS prevention_date, pe.val, p.id, IF(p.refused=0, "Complete", "Refused") AS refused\n                                FROM preventions p\nLEFT JOIN preventionsExt pe\n                                ON ( pe.prevention_id = p.id ) \n                                WHERE p.prevention_type = ${prevention}\n                                AND p.deleted = 0\n                                AND p.refused = 0\nAND pe.keyval = "result" \nAND pe.val != "pending"\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) MAM\n                        ON (d.demographic_no = MAM.demographic_no)\n\n-- latest tracking status\n                        LEFT JOIN (\n\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n                                JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n                                        SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${prevention}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n                                ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${prevention}\nAND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n                        ) MAM0\n                        ON (d.demographic_no = MAM0.demographic_no)\n\n                        -- MAM pending\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n                                FROM preventions p\n                                LEFT JOIN preventionsExt pe\n                                ON ( pe.prevention_id = p.id ) \n                                WHERE p.prevention_type = ${prevention}\n                                AND p.deleted = 0\n                                AND p.refused = 0\nAND pe.keyval = "result" \nAND pe.val = "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date24}\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) MAM_p\n                        ON (d.demographic_no = MAM_p.demographic_no)\n\n                        -- MAM declined or refused\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id\n                                FROM preventions p\n                                WHERE p.prevention_type = ${prevention}\n                                AND p.deleted = 0\n                                AND p.refused = 1\nAND DATE(p.prevention_date) >= ${lowerLimit.date24}\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) MAM_d\n                        ON (d.demographic_no = MAM_d.demographic_no)\n\n-- Last Seen Date\nLEFT JOIN (\n                                SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND ${upperLimit.date} > DATE(a.appointment_date)\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n                        ) app1\n                        ON (d.demographic_no = app1.demographic_no)\n\n                        -- Next Appointment Date\nLEFT JOIN (\n                                SELECT a.demographic_no, a.appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND DATE(a.appointment_date) >= ${upperLimit.date}\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n                        ) app2\n                        ON (d.demographic_no = app2.demographic_no)\n\n-- billing for Q131A\n                        LEFT JOIN (\n                                SELECT boc.demographic_no, MAX(boi.service_date) as service_date, boi.id\n                                FROM billing_on_cheader1 boc, billing_on_item boi\n                                WHERE boc.id = boi.ch1_id\nAND boc.status != \'D\'\n                                AND boi.status != \'D\'\n                                AND boi.service_code =  ${servicecode131}\n                                GROUP BY boc.demographic_no\n                        ) BILL131\n                        ON (d.demographic_no = BILL131.demographic_no)\n\n                        -- WITHOUT a service code of Q141A billed\n                        LEFT JOIN (\n                                SELECT boc.id, boc.demographic_no, boc.billing_date\n                                FROM billing_on_cheader1 boc, billing_on_item boi\n                                WHERE boc.id = boi.ch1_id\nAND boc.status != \'D\'\n                                AND boi.status != \'D\'\n                                AND boi.service_code = ${servicecode141}\n                                GROUP BY boc.demographic_no\n                        ) BILL141\n                        ON (d.demographic_no = BILL141.demographic_no)\n\n-- Notes\n                        -- Use Ineligible in 24month searching to replace note searching\n                        LEFT JOIN (\n\n                                SELECT demographic_no, id\n                                FROM preventions\n                                WHERE prevention_type = ${prevention}\n                                AND deleted = 0\n                                AND refused = 2\n                                AND prevention_date >= ${lowerLimit.date24}\n                                GROUP BY demographic_no\n\n                        ) MAM_i\n                        ON (d.demographic_no = MAM_i.demographic_no)\n\nWHERE d.patient_status = ${pstatus}\nAND d.provider_no = \'${provider}\'\nAND d.sex = ${gender}\nAND d.demographic_no > 0 \nAND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), ${upperLimit.date} ) / 365.25 ) ) \nBETWEEN ${lowerLimit.age} AND ${upperLimit.age}\nAND dxr.dxresearch_no IS NULL\nAND MAM_i.id IS NULL\nAND BILL141.id IS NULL\nGROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n</query>\n</drillDownQuery>\n<shared>true</shared>\n<sharedMetricSetName>OntarioMD Breast Cancer Screening Overdue</sharedMetricSetName>\n<sharedMetricDataId>Status</sharedMetricDataId>\n<sharedMappings>\n                <sharedMapping fromLabel="% less than 3 months overdue" toLabel="&lt;= 3 months Overdue"/>\n                <sharedMapping fromLabel="% more than 3 months overdue" toLabel="&gt; 3 months Overdue"/>\n                <sharedMapping fromLabel="% less than 2 months pending" toLabel="&lt; 2 months Pending"/>\n                <sharedMapping fromLabel="% more than 2 months pending" toLabel="&gt;= 2 months Pending"/>\n                <sharedMapping fromLabel="% Declined" toLabel="Declined"/>\n                <sharedMapping fromLabel="% Due in less than 4 months" toLabel="Due in &lt; 4 months"/>\n                <sharedMapping fromLabel="% Due in more than 4 and less than 7 months" toLabel="Due in &gt;= 4 and &lt; 7 months"/>\n        </sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Breast Cancer Screening Overdue');
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId3, 'Colorectal Cancer Screening Recall', 'Preventive Health Care', 'Cancer', 'OSCAR EMR', '2022-02-02', 'Patient Care: Colorectal Cancer Screening:\n % of patients aged 50 to 74 years old, inclusive, with an FOBT  within the past two years, \n sigmoidoscopy within 5 years or a colonoscopy within the past 10 years. - patients with a null or “pending” preven', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n<author>Trinity Healthcare Technologies for Oscar EMR, bugs by PHC</author>\n<uid></uid>\n<heading>\n<category>Preventive Health Care (Click on the chart to see details)</category>\n<subCategory>Cancer</subCategory>\n<name>Colorectal Cancer Screening Recall</name>\n<metricSetName>Colorectal Cancer Screen Overdue</metricSetName>\n<metricLabel></metricLabel>\n<definition>Patient Care: Colorectal Cancer Screening:\n Patients aged 50 to 74 years old, inclusive, with an FOBT  within the past two years, \n sigmoidoscopy within 5 years or a colonoscopy within the past 10 years. - patients with a null or “pending” prevention result are overdue.</definition>\n<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n<frameworkVersion>2022-03-03</frameworkVersion>\n<notes>ON</notes><graphType>table</graphType>\n</heading>\n<indicatorQuery>\n<version>2022-03-03</version>\n<params>\n<!-- \nRequired parameter provider. Value options are: \n[ an individual providerNo, or provider range ] ie: value="370, 1001" \n"all" ie: value="all" including null.\n"loggedInProvider" ie:\nDefault is "loggedInProvider"\nUse this parameter in the query as ${provider}\nThis parameter should be used for fetching patient\'s assigned to a MRP.\nie: WHERE demographic.provider_no = ${provider}\n-->\n<parameter id="provider" name="provider_no" value="loggedInProvider" />\n<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n<parameter id="loincfobt" name="FOBT LOINC" value="2335-8,29771-3,58453-2,14563-1,14564-9,14565-6" />\n<parameter id="colonoscopy" name="Colonoscopy" value="\'COLONOSCOPY\'" />\n<parameter id="dxexclusions" name="Exclude Dx Codes" value="154,153,556,555,V1005" />\n<parameter id="preventionfobt" name="FOBT Prevention" value="\'FOBT\'" />\n\n<parameter id="servicecode" name="Service Code Prevention" value="\'Q133A\'" />\n</params>\n<range>\n<upperLimit id="age" label="Max Age" name="Age" value="74" />\n<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n\n<upperLimit id="date" label="Current Date" name="currentDate" value="NOW()" />\n\n<lowerLimit id="date2" label="2 Months" name="Date2" value="DATE_SUB( NOW(), INTERVAL 2 MONTH )" />\n<lowerLimit id="date3" label="3 Months" name="Date3" value="DATE_SUB( NOW(), INTERVAL 3 MONTH )" />\n\n<lowerLimit id="date16" label="16 Months" name="Date16" value="DATE_SUB( NOW(), INTERVAL 16 MONTH )" />\n<lowerLimit id="date17" label="17 Months" name="Date17" value="DATE_SUB( NOW(), INTERVAL 17 MONTH )" />\n<lowerLimit id="date20" label="20 Months" name="Date20" value="DATE_SUB( NOW(), INTERVAL 20 MONTH )" />\n<lowerLimit id="date21" label="21 Months" name="Date21" value="DATE_SUB( NOW(), INTERVAL 21 MONTH )" />\n<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n<lowerLimit id="date112" label="112 Months" name="Date112" value="DATE_SUB( NOW(), INTERVAL 112 MONTH )" />\n<lowerLimit id="date113" label="113 Months" name="Date113" value="DATE_SUB( NOW(), INTERVAL 113 MONTH )" />\n<lowerLimit id="date116" label="116 Months" name="Date116" value="DATE_SUB( NOW(), INTERVAL 116 MONTH )" />\n<lowerLimit id="date117" label="117 Months" name="Date117" value="DATE_SUB( NOW(), INTERVAL 117 MONTH )" />\n<lowerLimit id="date120" label="120 Months" name="Date120" value="DATE_SUB( NOW(), INTERVAL 120 MONTH )" />\n\n<lowerLimit id="date27" label="27 Months" name="Date27" value="DATE_SUB( NOW(), INTERVAL 27 MONTH )" />\n<lowerLimit id="date25" label="25 Months" name="Date25" value="DATE_SUB( NOW(), INTERVAL 25 MONTH )" />\n\n<lowerLimit id="date121" label="121 Months" name="Date121" value="DATE_SUB( NOW(), INTERVAL 121 MONTH )" />\n<lowerLimit id="date123" label="123 Months" name="Date123" value="DATE_SUB( NOW(), INTERVAL 123 MONTH )" />\n<lowerLimit id="date124" label="124 Months" name="Date123" value="DATE_SUB( NOW(), INTERVAL 124 MONTH )" />\n</range>\n<query>\n<!-- Indicator SQL Query here -->\nSELECT \nIF ( COUNT(fin.patient) > 0,\n SUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt24 = 0 AND fin.colo120 = 0 AND fin.bill24 = 0 AND fin.fobt_d24 = 0 AND fin.fobt_p24 = 0 AND (fin.fobt27_25 > 0 OR fin.colo123_121 > 0 OR fin.bill27_25 > 0) , 1, 0 ))\n,0 ) AS \'&lt;= 3 months Overdue\',\n\nIF ( COUNT(fin.patient) > 0,\n SUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt27 = 0 AND fin.colo123 = 0 AND fin.bill27 = 0 AND fin.fobt_d24 = 0 AND fin.fobt_p24 = 0, 1, 0 ))\n,0 ) AS \'&gt; 3 months Overdue\', \n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt24 = 0 AND fin.colo120 = 0 AND fin.bill24 = 0 AND fin.fobt_p2 > 0, 1, 0 ))\n,0 ) AS \'&lt; 2 months Pending\',\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt24 = 0 AND fin.colo120 = 0 AND fin.bill24 = 0 AND fin.fobt_p2 = 0 AND fin.fobt_p24_3 > 0, 1, 0 ) )\n,0 ) AS \'&gt;= 2 months Pending\',\n\nIF ( COUNT(fin.patient) > 0,\nSUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt24 = 0 AND fin.colo120 = 0 AND fin.bill24 = 0 AND fin.fobt_p24 = 0 AND fin.fobt_d24 > 0, 1, 0 ) )\n,0 ) AS \'Declined\',\n\nIF ( COUNT(fin.patient) > 0,\n SUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt20 = 0 AND fin.colo116 = 0 AND fin.bill20 = 0 AND ( fin.fobt24_21 > 0 OR fin.colo120_117 > 0 OR fin.bill24_21 > 0 ), 1, 0 ) )\n,0 ) AS \'Due in &lt; 4 months\',\n\nIF ( COUNT(fin.patient) > 0,\n SUM( IF( fin.dx = 0 AND fin.fobt_i = 0 AND fin.fobt16 = 0 AND fin.colo112 = 0 AND fin.bill16 = 0 AND ( fin.fobt20_17 > 0 OR fin.colo116_113 > 0 OR fin.bill20_17 > 0 ), 1, 0 ) )\n,0 ) AS \'Due in &gt;= 4 and &lt; 7 months\'\nFROM (\n\nSELECT \n    d.demographic_no AS patient,\n    IFNULL(COLO112.id, 0) AS colo112,\n    IFNULL(COLO116.id, 0) AS colo116,\n    IFNULL(COLO120.id, 0) AS colo120,\n    IFNULL(COLO123.id, 0) AS colo123,\n    IFNULL(COLO123_121.id, 0) AS colo123_121,\n    IFNULL(COLO124.id, 0) AS colo124,\n    IFNULL(COLO120_117.id, 0) AS colo120_117,\n    IFNULL(COLO116_113.id, 0) AS colo116_113,\n    IFNULL(FOBT24.id, 0) AS fobt24,\n    IFNULL(FOBT27_25.id, 0) AS fobt27_25,\n    IFNULL(FOBT27.id, 0) AS fobt27,\n    IFNULL(FOBT24_21.id, 0) AS fobt24_21,\n    IFNULL(FOBT20_17.id, 0) AS fobt20_17,\n    IFNULL(FOBT20.id, 0) AS fobt20,\n    IFNULL(FOBT16.id, 0) AS fobt16,\n    IFNULL(FOBT_p2.id, 0) AS fobt_p2,\n    IFNULL(FOBT_p24.id, 0) AS fobt_p24,\n    IFNULL(FOBT_p24_3.id, 0) AS fobt_p24_3,\n    IFNULL(FOBT_d24.id, 0) AS fobt_d24,\n    IFNULL(BILL16.id, 0) AS bill16,\n    IFNULL(BILL20.id, 0) AS bill20,\n    IFNULL(BILL24.id, 0) AS bill24,\n    IFNULL(BILL27_25.id, 0) AS bill27_25,\n    IFNULL(BILL27.id, 0) AS bill27,\n    IFNULL(BILL24_21.id, 0) AS bill24_21,\n    IFNULL(BILL20_17.id, 0) AS bill20_17,\n    IFNULL(FOBT_i.id, 0) AS fobt_i,\n    IFNULL(dxr.dxresearch_no, 0) AS dx\n\nFROM demographic d\n\nLEFT JOIN (\n            SELECT dxresearch_no, demographic_no\n            FROM dxresearch\n            WHERE demographic_no>0\n            AND dxresearch_code IN ${dxexclusions}\n            AND `status` = \'A\'\n            AND coding_system = \'icd9\'\n            GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n            ) dxr \n            ON ( d.demographic_no = dxr.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${colonoscopy}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) > ${lowerLimit.date113}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) COLO112\n                                ON (d.demographic_no = COLO112.demographic_no )\n\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${colonoscopy}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date116}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) COLO116\n                                ON (d.demographic_no = COLO116.demographic_no )\n\n\n-- Look for colonoscopy results from the last 120 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${colonoscopy}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date120}\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) COLO120\n            ON (d.demographic_no = COLO120.demographic_no )\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${colonoscopy}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date123}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) COLO123\n                                ON (d.demographic_no = COLO123.demographic_no )\n\n-- Look for colonoscopy results Between 121 -123 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${colonoscopy}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date123} AND ${lowerLimit.date120} > DATE(p.prevention_date)\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) COLO123_121\n            ON (d.demographic_no = COLO123_121.demographic_no )\n\n-- Look for colonoscopy results from the last 124 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${colonoscopy}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date124}\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) COLO124\n            ON (d.demographic_no = COLO124.demographic_no )\n\n-- Look for colonoscopy results Between 117 -120 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${colonoscopy}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date120} AND ${lowerLimit.date116} > DATE(p.prevention_date)\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) COLO120_117\n            ON (d.demographic_no = COLO120_117.demographic_no )\n\n-- Look for colonoscopy results Between 113 -116 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${colonoscopy}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date116} AND ${lowerLimit.date113} >= DATE(p.prevention_date)\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) COLO116_113\n            ON (d.demographic_no = COLO116_113.demographic_no )\n\n-- Look for FOBT req from the last 24 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date24}\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) FOBT24\n            ON (d.demographic_no = FOBT24.demographic_no )\n\n-- Look for FOBT req Between 25 -27 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date27} AND ${lowerLimit.date24} > DATE(p.prevention_date)\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) FOBT27_25\n            ON (d.demographic_no = FOBT27_25.demographic_no )\n\n-- Look for FOBT req from the last 27 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date27}\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) FOBT27\n            ON (d.demographic_no = FOBT27.demographic_no )\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date20}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT20\n                                ON (d.demographic_no = FOBT20.demographic_no )\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) > ${lowerLimit.date17}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT16\n                                ON (d.demographic_no = FOBT16.demographic_no )\n\n-- Look for FOBT req Between 21 -24 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date24} AND ${lowerLimit.date20} > DATE(p.prevention_date)\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) FOBT24_21\n            ON (d.demographic_no = FOBT24_21.demographic_no )\n\n-- Look for FOBT req Between 17 -20 months\nLEFT JOIN ( \n            SELECT p.demographic_no, p.id, pe.val\n            FROM preventions p\n            INNER JOIN preventionsExt pe\n            ON (pe.prevention_id = p.id AND pe.keyval = "result")\n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.val != "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date20} AND ${lowerLimit.date17} >= DATE(p.prevention_date)\n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n        ) FOBT20_17\n        ON (d.demographic_no = FOBT20_17.demographic_no )\n\n-- FOBT pending\nLEFT JOIN (\n           SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n           FROM preventions p\n           LEFT JOIN preventionsExt pe\n           ON pe.prevention_id = p.id\n           WHERE p.prevention_type = ${preventionfobt}\n           AND p.deleted = 0\n           AND p.refused = 0\n           AND pe.keyval = "result"\n            AND pe.val = "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date24} AND ${lowerLimit.date2} > DATE(p.prevention_date)\n           GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n           ) FOBT_p24_3\n                                ON (d.demographic_no = FOBT_p24_3.demographic_no)\n\nLEFT JOIN    (\n            SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n            FROM preventions p\n            LEFT JOIN preventionsExt pe\n            ON pe.prevention_id = p.id \n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.keyval = "result" \n            AND pe.val = "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date24} \n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) FOBT_p24\n            ON (d.demographic_no = FOBT_p24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date2}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT_p2\n                                ON (d.demographic_no = FOBT_p2.demographic_no)\n\n-- FOBT declined or refused\nLEFT JOIN (\nSELECT p.demographic_no, p.id \nFROM preventions p\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 1\nAND DATE(p.prevention_date) >= ${lowerLimit.date24}\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT_d24\nON (d.demographic_no = FOBT_d24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no, boi.service_date\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode}\n                                        AND DATE(boi.service_date) > ${lowerLimit.date17}\n                                        GROUP BY boc.demographic_no\n                                ) BILL16\n                                ON (d.demographic_no = BILL16.demographic_no)\n\n\nLEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no, boi.service_date\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date20}\n                                        GROUP BY boc.demographic_no\n                                ) BILL20\n                                ON (d.demographic_no = BILL20.demographic_no)\n\n--without billing for Q133A in the last 24  months\nLEFT JOIN (\n            SELECT boc.id, boc.demographic_no, boi.service_date\n            FROM billing_on_cheader1 boc, billing_on_item boi\n            WHERE boc.id = boi.ch1_id \n            AND boc.status != \'D\'\n            AND boi.status != \'D\'\n            AND boi.service_code =  ${servicecode}\n            AND DATE(boi.service_date) >= ${lowerLimit.date24} \n            GROUP BY boc.demographic_no \n            ) BILL24\n            ON (d.demographic_no = BILL24.demographic_no)\n\n--without billing for Q133A Between 25 -27 months\nLEFT JOIN (\n            SELECT boc.id, boc.demographic_no, boi.service_date\n            FROM billing_on_cheader1 boc, billing_on_item boi\n            WHERE boc.id = boi.ch1_id \n            AND boc.status != \'D\'\n            AND boi.status != \'D\'\n            AND boi.service_code =  ${servicecode}\n            AND DATE(boi.service_date) >= ${lowerLimit.date27} AND ${lowerLimit.date24} > DATE(boi.service_date)\n            GROUP BY boc.demographic_no \n            ) BILL27_25\n            ON (d.demographic_no = BILL27_25.demographic_no)\n\n--without billing for Q133A from the last 27 months\nLEFT JOIN (\n            SELECT boc.id, boc.demographic_no, boi.service_date\n            FROM billing_on_cheader1 boc, billing_on_item boi\n            WHERE boc.id = boi.ch1_id \n            AND boc.status != \'D\'\n            AND boi.status != \'D\'\n            AND boi.service_code =  ${servicecode}\n            AND DATE(boi.service_date) >= ${lowerLimit.date27} \n            GROUP BY boc.demographic_no \n            ) BILL27\n            ON (d.demographic_no = BILL27.demographic_no)\n\n--without billing for Q133A Between 21 -24 months\nLEFT JOIN (\n            SELECT boc.id, boc.demographic_no, boi.service_date\n            FROM billing_on_cheader1 boc, billing_on_item boi\n            WHERE boc.id = boi.ch1_id \n            AND boc.status != \'D\'\n            AND boi.status != \'D\'\n            AND boi.service_code =  ${servicecode}\n            AND DATE(boi.service_date) >= ${lowerLimit.date24} AND ${lowerLimit.date20} > DATE(boi.service_date)\n            GROUP BY boc.demographic_no \n            ) BILL24_21\n            ON (d.demographic_no = BILL24_21.demographic_no)\n\n--without billing for Q133A Between 17 -20 months\n            LEFT JOIN (\n            SELECT boc.id, boc.demographic_no, boi.service_date\n            FROM billing_on_cheader1 boc, billing_on_item boi\n            WHERE boc.id = boi.ch1_id \n            AND boc.status != \'D\'\n            AND boi.status != \'D\'\n            AND boi.service_code =  ${servicecode}\n            AND DATE(boi.service_date) >= ${lowerLimit.date20} AND ${lowerLimit.date17} >= DATE(boi.service_date)\n            GROUP BY boc.demographic_no \n            ) BILL20_17\n            ON (d.demographic_no = BILL20_17.demographic_no)\n\n-- Notes\nLEFT JOIN (\n            SELECT demographic_no, id\n            FROM preventions \n            WHERE (prevention_type = ${colonoscopy} OR prevention_type = ${preventionfobt})\n            AND deleted = 0 \n            AND refused = 2 \n            AND prevention_date >= ${lowerLimit.date24}\n            GROUP BY demographic_no\n            ) FOBT_i\n            ON (d.demographic_no = FOBT_i.demographic_no)\n\n-- WHERE THE PATIENT\'S AGE AT THE TIME OF THE COLONOSCOPY ...\n-- Excluding patients previously diagnosed.\nWHERE d.patient_status = ${pstatus} \nAND d.provider_no = \'${provider}\'\nAND d.demographic_no > 0\nAND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \nBETWEEN ${lowerLimit.age} AND ${upperLimit.age}\nGROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n) fin\n</query>\n</indicatorQuery>\n<drillDownQuery>\n<version>2022-03-03</version>\n<params>\n<parameter id="provider" name="provider_no" value="loggedInProvider" />\n<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n<parameter id="loincfobt" name="FOBT LOINC" value="2335-8,29771-3,58453-2,14563-1,14564-9,14565-6" />\n<parameter id="colonoscopy" name="Colonoscopy" value="\'COLONOSCOPY\'" />\n<parameter id="dxexclusions" name="Exclude Dx Codes" value="154,153,556,555,V1005" />\n<parameter id="preventionfobt" name="FOBT Prevention" value="\'FOBT\'" />\n<parameter id="servicecode" name="Service Code Prevention" value="\'Q133A\'" />\n</params>\n<range>\n<upperLimit id="age" label="Max Age" name="Age" value="74" />\n<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n\n<upperLimit id="date" label="Current Date" name="currentDate" value="NOW()" />\n<lowerLimit id="date2" label="2 Months" name="Date2" value="DATE_SUB( NOW(), INTERVAL 2 MONTH )" />\n<lowerLimit id="date3" label="3 Months" name="Date3" value="DATE_SUB( NOW(), INTERVAL 3 MONTH )" />\n\n<lowerLimit id="date16" label="16 Months" name="Date16" value="DATE_SUB( NOW(), INTERVAL 16 MONTH )" />\n<lowerLimit id="date17" label="17 Months" name="Date17" value="DATE_SUB( NOW(), INTERVAL 17 MONTH )" />\n<lowerLimit id="date20" label="20 Months" name="Date20" value="DATE_SUB( NOW(), INTERVAL 20 MONTH )" />\n<lowerLimit id="date21" label="21 Months" name="Date21" value="DATE_SUB( NOW(), INTERVAL 21 MONTH )" />\n<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n<lowerLimit id="date112" label="112 Months" name="Date112" value="DATE_SUB( NOW(), INTERVAL 112 MONTH )" />\n<lowerLimit id="date113" label="113 Months" name="Date113" value="DATE_SUB( NOW(), INTERVAL 113 MONTH )" />\n<lowerLimit id="date116" label="116 Months" name="Date116" value="DATE_SUB( NOW(), INTERVAL 116 MONTH )" />\n<lowerLimit id="date117" label="117 Months" name="Date117" value="DATE_SUB( NOW(), INTERVAL 117 MONTH )" />\n<lowerLimit id="date120" label="120 Months" name="Date120" value="DATE_SUB( NOW(), INTERVAL 120 MONTH )" />\n\n<lowerLimit id="date27" label="27 Months" name="Date27" value="DATE_SUB( NOW(), INTERVAL 27 MONTH )" />\n<lowerLimit id="date25" label="25 Months" name="Date25" value="DATE_SUB( NOW(), INTERVAL 25 MONTH )" />\n\n<lowerLimit id="date121" label="121 Months" name="Date121" value="DATE_SUB( NOW(), INTERVAL 121 MONTH )" />\n<lowerLimit id="date123" label="123 Months" name="Date123" value="DATE_SUB( NOW(), INTERVAL 123 MONTH )" />\n<lowerLimit id="date124" label="124 Months" name="Date123" value="DATE_SUB( NOW(), INTERVAL 124 MONTH )" />\n</range>\n<displayColumns>\n<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="colotrackingstatus" name="IFNULL(COLO0_t.refused, \'\')" title="Colonoscopy Tracking Status" primary="false" />\n<column id="coloscopy" name="IFNULL(COLO0_t.val, \'\')" title="Colonoscopy Result" primary="false" />\n                        <column id="coloscopydate" name="IFNULL( DATE_FORMAT( COLO0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Colonoscopy Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="fobttrackingstatus" name="IFNULL(FOBT0_t.refused, \'\')" title="FOBT Tracking Status" primary="false" />\n                        <column id="fobtprevention" name="IFNULL(FOBT0_t.val, \'\')" title="FOBT Result" primary="false" />\n                        <column id="fobtpreventiondate" name="IFNULL( DATE_FORMAT( FOBT0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billQ133Adate" name="IFNULL( DATE_FORMAT( BILL0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q133A Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n\n</displayColumns>\n<exportColumns>\n<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n<column id="colotrackingstatus" name="IFNULL(COLO0_t.refused, \'\')" title="Colonoscopy Tracking Status" primary="false" />\n<column id="coloscopy" name="IFNULL(COLO0_t.val, \'\')" title="Colonoscopy Result" primary="false" />\n<column id="coloscopydate" name="IFNULL( DATE_FORMAT( COLO0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Colonoscopy Test Date (mm-dd-yyyy)" primary="false" />\n<column id="fobttrackingstatus" name="IFNULL(FOBT0_t.refused, \'\')" title="FOBT Tracking Status" primary="false" />\n<column id="fobtprevention" name="IFNULL(FOBT0_t.val, \'\')" title="FOBT Result" primary="false" />\n<column id="fobtpreventiondate" name="IFNULL( DATE_FORMAT( FOBT0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Test Date (mm-dd-yyyy)" primary="false" />\n<column id="billQ133Adate" name="IFNULL( DATE_FORMAT( BILL0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q133A Date (mm-dd-yyyy)" primary="false" />\n<column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n<column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n</exportColumns>\n<query>\n<!-- Drilldown SQL Query here -->\nSELECT\n*\nFROM demographic d\n\nLEFT JOIN (\nSELECT dxresearch_no, demographic_no\nFROM dxresearch\nWHERE demographic_no>0\nAND dxresearch_code IN ${dxexclusions}\nAND `status` = \'A\'\nAND coding_system = \'icd9\'\nGROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n) dxr \nON ( d.demographic_no = dxr.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${colonoscopy}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) > ${lowerLimit.date113}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) COLO112\n                                ON (d.demographic_no = COLO112.demographic_no )\n\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${colonoscopy}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date116}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) COLO116\n                                ON (d.demographic_no = COLO116.demographic_no )\n\n\n-- Look for colonoscopy results from the last 120 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${colonoscopy}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date120}\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) COLO120\nON (d.demographic_no = COLO120.demographic_no )\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${colonoscopy}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date123}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) COLO123\n                                ON (d.demographic_no = COLO123.demographic_no )\n\n-- Look for colonoscopy results Between 121 -123 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${colonoscopy}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date123} AND ${lowerLimit.date120} > DATE(p.prevention_date)\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) COLO123_121\nON (d.demographic_no = COLO123_121.demographic_no )\n\n-- Look for colonoscopy results from the last 124 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${colonoscopy}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date124}\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) COLO124\nON (d.demographic_no = COLO124.demographic_no )\n\n-- Look for colonoscopy results Between 117 -120 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${colonoscopy}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date120} AND ${lowerLimit.date116} > DATE(p.prevention_date)\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) COLO120_117\nON (d.demographic_no = COLO120_117.demographic_no )\n\n-- Look for colonoscopy results Between 113 -116 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${colonoscopy}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date116} AND ${lowerLimit.date113} >= DATE(p.prevention_date)\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) COLO116_113\nON (d.demographic_no = COLO116_113.demographic_no )\n\n-- Look for FOBT req from the last 24 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date24}\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT24\nON (d.demographic_no = FOBT24.demographic_no )\n\n-- Look for FOBT req Between 25 -27 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date27} AND ${lowerLimit.date24} > DATE(p.prevention_date)\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT27_25\nON (d.demographic_no = FOBT27_25.demographic_no )\n\n-- Look for FOBT req from the last 27 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date27}\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT27\nON (d.demographic_no = FOBT27.demographic_no )\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date20}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT20\n                                ON (d.demographic_no = FOBT20.demographic_no )\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, pe.val\n                                        FROM preventions p\n                                        INNER JOIN preventionsExt pe\n                                        ON (pe.prevention_id = p.id AND pe.keyval = "result")\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) > ${lowerLimit.date17}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT16\n                                ON (d.demographic_no = FOBT16.demographic_no )\n\n-- Look for FOBT req Between 21 -24 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date24} AND ${lowerLimit.date20} > DATE(p.prevention_date)\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT24_21\nON (d.demographic_no = FOBT24_21.demographic_no )\n\n-- Look for FOBT req Between 17 -20 months\nLEFT JOIN ( \nSELECT p.demographic_no, p.id, pe.val\nFROM preventions p\nINNER JOIN preventionsExt pe\nON (pe.prevention_id = p.id AND pe.keyval = "result")\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 0\nAND pe.val != "pending"\nAND DATE(p.prevention_date) >= ${lowerLimit.date20} AND ${lowerLimit.date17} >= DATE(p.prevention_date)\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT20_17\nON (d.demographic_no = FOBT20_17.demographic_no )\n\n-- FOBT pending\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date24} AND ${lowerLimit.date2} > DATE(p.prevention_date)\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT_p24_3\n                                ON (d.demographic_no = FOBT_p24_3.demographic_no)\n\nLEFT JOIN  (\n            SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n            FROM preventions p\n            LEFT JOIN preventionsExt pe\n            ON pe.prevention_id = p.id \n            WHERE p.prevention_type = ${preventionfobt}\n            AND p.deleted = 0\n            AND p.refused = 0\n            AND pe.keyval = "result" \n            AND pe.val = "pending"\n            AND DATE(p.prevention_date) >= ${lowerLimit.date24} \n            GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n            ) FOBT_p24\n            ON (d.demographic_no = FOBT_p24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT p.demographic_no, p.id, MAX(prevention_date) AS prevention_date\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${preventionfobt}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date2}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) FOBT_p2\n                                ON (d.demographic_no = FOBT_p2.demographic_no)\n\n-- FOBT declined or refused\nLEFT JOIN (\nSELECT p.demographic_no, p.id \nFROM preventions p\nWHERE p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\nAND p.refused = 1\nAND DATE(p.prevention_date) >= ${lowerLimit.date24}\nGROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n) FOBT_d24\nON (d.demographic_no = FOBT_d24.demographic_no)\n\nLEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no, boi.service_date\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode}\n                                        AND DATE(boi.service_date) > ${lowerLimit.date17}\n                                        GROUP BY boc.demographic_no\n                                ) BILL16\n                                ON (d.demographic_no = BILL16.demographic_no)\n\n\nLEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no, boi.service_date\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != \'D\'\n                                        AND boi.status != \'D\'\n                                        AND boi.service_code =  ${servicecode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date20}\n                                        GROUP BY boc.demographic_no\n                                ) BILL20\n                                ON (d.demographic_no = BILL20.demographic_no)\n\n--without billing for Q133A in the last 24  months\nLEFT JOIN (\nSELECT boc.id, boc.demographic_no, boi.service_date\nFROM billing_on_cheader1 boc, billing_on_item boi\nWHERE boc.id = boi.ch1_id \nAND boc.status != \'D\'\nAND boi.status != \'D\'\nAND boi.service_code =  ${servicecode}\nAND DATE(boi.service_date) >= ${lowerLimit.date24} \nGROUP BY boc.demographic_no \n) BILL24\nON (d.demographic_no = BILL24.demographic_no)\n\n--without billing for Q133A Between 25 -27 months\nLEFT JOIN (\nSELECT boc.id, boc.demographic_no, boi.service_date\nFROM billing_on_cheader1 boc, billing_on_item boi\nWHERE boc.id = boi.ch1_id \nAND boc.status != \'D\'\nAND boi.status != \'D\'\nAND boi.service_code =  ${servicecode}\nAND DATE(boi.service_date) >= ${lowerLimit.date27} AND ${lowerLimit.date24} > DATE(boi.service_date)\nGROUP BY boc.demographic_no \n) BILL27_25\nON (d.demographic_no = BILL27_25.demographic_no)\n\n--without billing for Q133A from the last 27 months\nLEFT JOIN (\nSELECT boc.id, boc.demographic_no, boi.service_date\nFROM billing_on_cheader1 boc, billing_on_item boi\nWHERE boc.id = boi.ch1_id \nAND boc.status != \'D\'\nAND boi.status != \'D\'\nAND boi.service_code =  ${servicecode}\nAND DATE(boi.service_date) >= ${lowerLimit.date27} \nGROUP BY boc.demographic_no \n) BILL27\nON (d.demographic_no = BILL27.demographic_no)\n\n--without billing for Q133A Between 21 -24 months\nLEFT JOIN (\nSELECT boc.id, boc.demographic_no, boi.service_date\nFROM billing_on_cheader1 boc, billing_on_item boi\nWHERE boc.id = boi.ch1_id \nAND boc.status != \'D\'\nAND boi.status != \'D\'\nAND boi.service_code =  ${servicecode}\nAND DATE(boi.service_date) >= ${lowerLimit.date24} AND ${lowerLimit.date20} > DATE(boi.service_date)\nGROUP BY boc.demographic_no \n) BILL24_21\nON (d.demographic_no = BILL24_21.demographic_no)\n\n--without billing for Q133A Between 17 -20 months\nLEFT JOIN (\nSELECT boc.id, boc.demographic_no, boi.service_date\nFROM billing_on_cheader1 boc, billing_on_item boi\nWHERE boc.id = boi.ch1_id \nAND boc.status != \'D\'\nAND boi.status != \'D\'\nAND boi.service_code =  ${servicecode}\nAND DATE(boi.service_date) >= ${lowerLimit.date20} AND ${lowerLimit.date17} >= DATE(boi.service_date)\nGROUP BY boc.demographic_no \n) BILL20_17\nON (d.demographic_no = BILL20_17.demographic_no)\n\n-- Notes\nLEFT JOIN (\nSELECT demographic_no, id\nFROM preventions \nWHERE (prevention_type = ${colonoscopy} OR prevention_type = ${preventionfobt})\nAND deleted = 0 \nAND refused = 2 \nAND prevention_date >= ${lowerLimit.date24}\nGROUP BY demographic_no\n) FOBT_i\nON (d.demographic_no = FOBT_i.demographic_no)\n\n\n-- get the latest colo\n                        LEFT JOIN (\n\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n                                JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n                                        SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${colonoscopy}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n                                ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${colonoscopy}\nAND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n                        ) COLO0_t \n                        ON (d.demographic_no = COLO0_t.demographic_no)\n\n\n-- get the latest fobt\n\nLEFT JOIN (\n\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n                                JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n                                        SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${preventionfobt}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n                                ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${preventionfobt}\nAND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n                        ) FOBT0_t\n                        ON (d.demographic_no = FOBT0_t.demographic_no)\n\n\nLEFT JOIN (\n                                SELECT boc.id, boc.demographic_no, MAX(boi.service_date) AS billing_date\n                                FROM billing_on_cheader1 boc, billing_on_item boi\n                                WHERE boc.id = boi.ch1_id\n                                AND boc.status != \'D\'\n                                AND boi.status != \'D\'\n                                AND boi.service_code = ${servicecode}\n                                GROUP BY boc.demographic_no\n                        ) BILL0\n                        ON (d.demographic_no = BILL0.demographic_no)\n\n-- Last Seen Date\nLEFT JOIN (\nSELECT a.demographic_no, max(a.appointment_date) as appointment_date\nFROM appointment a, demographic d\nWHERE a.demographic_no = d.demographic_no\nAND d.provider_no = \'${provider}\'\nAND ${upperLimit.date} > DATE(a.appointment_date)\nAND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\nAND a.demographic_no > 0\nGROUP BY a.demographic_no\n) app1\nON (d.demographic_no = app1.demographic_no)\n\n-- Next Appointment Date\nLEFT JOIN (\nSELECT a.demographic_no, a.appointment_date\nFROM appointment a, demographic d\nWHERE a.demographic_no = d.demographic_no\nAND d.provider_no = \'${provider}\'\nAND DATE(a.appointment_date) >= ${upperLimit.date}\nAND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\nAND a.demographic_no > 0\nGROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n) app2\nON (d.demographic_no = app2.demographic_no)\n\n-- WHERE THE PATIENT\'S AGE AT THE TIME OF THE COLONOSCOPY\n-- Exclude Cancer diagnosis.\nWHERE d.patient_status = ${pstatus}\nAND d.provider_no = \'${provider}\'\nAND d.demographic_no > 0\nAND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \nBETWEEN ${lowerLimit.age} AND ${upperLimit.age}\nAND dxr.dxresearch_no IS NULL AND FOBT_i.id IS NULL\nGROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n</query>\n</drillDownQuery>\n<shared>true</shared>\n<sharedMetricSetName>OntarioMD Colorectal Cancer Screen Overdue</sharedMetricSetName>\n<sharedMetricDataId>Status</sharedMetricDataId>\n<sharedMappings>\n<sharedMapping fromLabel="% &lt;= 3 months Overdue" toLabel="&lt;= 3 months Overdue"/>\n<sharedMapping fromLabel="% &gt; 3 months Overdue" toLabel="&gt; 3 months Overdue"/>\n<sharedMapping fromLabel="% &lt; 2 months Pending" toLabel="&lt; 2 months Pending"/>\n<sharedMapping fromLabel="% &gt;= 2 months Pending" toLabel="&gt;= 2 months Pending"/>\n<sharedMapping fromLabel="% Declined" toLabel="Declined"/>\n<sharedMapping fromLabel="% Due in &lt; 4 months" toLabel="Due in &lt; 4 months"/>\n<sharedMapping fromLabel="% Due in &gt;= 4 and &lt; 7 months" toLabel="Due in &gt;= 4 and &lt; 7 months"/>\n</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Colorectal Cancer Screen Overdue');
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId3, 'Cervical Cancer Screening Recall', 'Preventive Health Care', 'Cancer', 'Based on and adapted from HQO\'s PCPM: Priority Measures for System and Practice Levels (Oct 2015)', '2022-03-03', 'Target population: consists of enrolled female patients who are between 21 and 69 years of age, inclusive, as of March 31st of the fiscal year for which the bonus is being claimed. Note: only patients who are sexually active should be used in the calculat', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Cancer</subCategory>\n		<name>Cervical Cancer Screening Recall</name>\n		<metricSetName>OntarioMD Cervical Ca Screening Overdue</metricSetName>\n		<metricLabel></metricLabel>	\n		<definition>Target population: consists of enrolled female patients who are between 21 and 69 years of age, inclusive, as of March 31st of the fiscal year for which the bonus is being claimed. Note: only patients who are sexually active should be used in the calculation for the bonus Service Period: by 42 months prior to March 31st of the fiscal year for which the bonus is being claimed. Service Codes reported: G365A, L713A, L643A, E430A, E431A, Q678A, tracking code Q011A and exclusion code Q140A</definition>\n		<framework>Based on and adapted from HQO\'s PCPM: Priority Measures for System and Practice Levels (Oct 2015)</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n    <graphType>table</graphType>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="exclusionCode" name="billing_exclusion_code" value="\'Q140A\'" />\n			<parameter id="serviceCode" name="billing_service_code" value="\'Q011A\'" />\n			<parameter id="dxexclusion" name="exclusion_dx_code" value="V4577,683,684,685,686,687,688,689" />\n			<parameter id="prevention" name="prevention_code" value="\'PAP\'" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincpap" name="PAP LOINC" value="47527-7,49050-8,10524-7" />\n			<parameter id="gender" name="Patient Gender" value="\'F\'" />		\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="69" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="21" />\n			\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="CURRENT_DATE()" />\n			\n			<lowerLimit id="date1" label="1 Month" name="Date1" value="DATE_SUB( CURRENT_DATE(), INTERVAL 1 MONTH )" />\n			<lowerLimit id="date2" label="2 Month" name="Date2" value="DATE_SUB( CURRENT_DATE(), INTERVAL 2 MONTH )" />\n			<lowerLimit id="date28" label="28 Month" name="Date28" value="DATE_SUB( CURRENT_DATE(), INTERVAL 28 MONTH )" />\n			<lowerLimit id="date29" label="29 Months History" name="Date29" value="DATE_SUB( CURRENT_DATE(), INTERVAL 29 MONTH )" />\n			<lowerLimit id="date32" label="32 Months History" name="Date32" value="DATE_SUB( CURRENT_DATE(), INTERVAL 32 MONTH )" />\n			<lowerLimit id="date33" label="33 Months History" name="Date33" value="DATE_SUB( CURRENT_DATE(), INTERVAL 33 MONTH )" />\n			<lowerLimit id="date36" label="36 Months History" name="Date36" value="DATE_SUB( CURRENT_DATE(), INTERVAL 36 MONTH )" />\n			<lowerLimit id="date37" label="37 Months History" name="Date37" value="DATE_SUB( CURRENT_DATE(), INTERVAL 37 MONTH )" />\n			<lowerLimit id="date39" label="39 Months History" name="Date39" value="DATE_SUB( CURRENT_DATE(), INTERVAL 39 MONTH )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap36 = 0 AND fin.papm36 = 0 AND fin.bill36 = 0 AND fin.pap_d36 = 0 AND fin.pap_p36 = 0 AND ( fin.pap39_37 > 0 OR fin.papm39_37 > 0 OR fin.bill39_37 > 0), 1, 0 ) )\n\n				,0 ) AS "less than 3 months overdue",\n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap39 = 0 AND fin.papm39 = 0 AND fin.bill39 = 0 AND fin.pap_d36 = 0 AND fin.pap_p36 = 0 , 1, 0 ))\n				,0 ) AS "more than 3 months overdue",\n			\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap36 = 0 AND fin.papm36 = 0 AND fin.bill36 = 0 AND fin.pap_p1 > 0, 1, 0 ) )\n				,0 ) AS "less than 1 month pending",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap36 = 0 AND fin.papm36 = 0 AND fin.bill36 = 0 AND fin.pap_p1 = 0 AND fin.pap_p2_36 > 0, 1, 0 )) \n				,0 ) AS "more than 1 month pending",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap36 = 0 AND fin.papm36 = 0 AND fin.bill36 = 0 AND fin.pap_p36 = 0 AND fin.pap_d36 > 0, 1, 0 ))\n				,0 ) AS "Declined",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap32 = 0 AND fin.papm32 = 0 AND fin.bill32 = 0 AND ( fin.pap36_33 > 0 OR fin.papm36_33 > 0 OR fin.bill36_33 > 0 ), 1, 0 ))\n				,0 ) AS "Due in less than 4 months",\n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.dxexclusion = 0 AND fin.bill140 = 0 AND fin.pap_i = 0 AND fin.pap29 = 0 AND fin.papm29 = 0 AND fin.bill29 = 0 AND ( fin.pap32_29 > 0 OR fin.papm32_29 > 0 OR fin.bill32_29 > 0 ), 1, 0 ))\n				,0 ) AS "Due in more than 4 and less than 7 months"\n			FROM (\n			\n				SELECT \n			\n					d.demographic_no AS patient,\n					IFNULL(PAP29.id, 0) AS pap29, \n					IFNULL(PAP32.id, 0) AS pap32, \n					IFNULL(PAP36.id, 0) AS pap36, \n					IFNULL(PAP39_37.id, 0) AS pap39_37, \n					IFNULL(PAP39.id, 0) AS pap39,\n					IFNULL(PAP36_33.id, 0) AS pap36_33,			\n					IFNULL(PAP32_29.id, 0) AS pap32_29,\n					IFNULL(PAP_p36.id, 0) AS pap_p36,\n					IFNULL(PAP_p2_36.id, 0) AS pap_p2_36,\n					IFNULL(PAP_p1.id, 0) AS pap_p1,\n					IFNULL(PAP_d36.id, 0) AS pap_d36,\n					IFNULL(BILL140.id, 0) AS bill140,\n					IFNULL(BILL29.id, 0) AS bill29,\n					IFNULL(BILL32.id, 0) AS bill32,\n					IFNULL(BILL36.id, 0) AS bill36,\n					IFNULL(BILL39.id, 0) AS bill39,\n					IFNULL(BILL36_33.id, 0) AS bill36_33,\n					IFNULL(BILL32_29.id, 0) AS bill32_29,\n					IFNULL(BILL39_37.id, 0) AS bill39_37,\n					IFNULL(dxr.dxresearch_no, 0) AS dxexclusion,\n					IFNULL(PAP_i.id, 0) AS pap_i,\n					IFNULL(PAPM29.id, 0) as papm29,\n					IFNULL(PAPM32.id, 0) as papm32,\n					IFNULL(PAPM36.id, 0) as papm36,\n					IFNULL(PAPM39_37.id, 0) as papm39_37,\n					IFNULL(PAPM36_33.id, 0) as papm36_33,\n					IFNULL(PAPM32_29.id, 0) as papm32_29,\n					IFNULL(PAPM39.id, 0) as papm39\n			\n				FROM demographic d\n\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no\n					FROM dxresearch\n					WHERE demographic_no>0\n					AND status = \'A\'\n					AND coding_system = \'icd9\'\n					AND dxresearch_code IN ${dxexclusion}\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr\n				ON ( d.demographic_no = dxr.demographic_no)\n				\n				-- Look for possible PAP results in measurements.\n				LEFT JOIN (\n					SELECT m2.demographicNo, m2.id\n					FROM measurements m2\n					JOIN measurementsExt me\n					ON m2.id = me.measurement_id\n					JOIN measurementMap mm\n					ON me.val = mm.`name`\n					WHERE me.keyval = "name"\n					AND mm.loinc_code IN ${loincpap}\n					AND m2.demographicNo > 0\n					AND DATE(m2.dateObserved) >= ${lowerLimit.date39} AND ${lowerLimit.date36} > DATE(m2.dateObserved)\n					GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n				) PAPM39_37\n				ON (d.demographic_no = PAPM39_37.demographicNo)\n			\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date36} AND ${lowerLimit.date32} > DATE(m2.dateObserved)\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM36_33\n                                ON (d.demographic_no = PAPM36_33.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date32} AND ${lowerLimit.date29} >= DATE(m2.dateObserved)\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM32_29\n                                ON (d.demographic_no = PAPM32_29.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date39}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM39\n                                ON (d.demographic_no = PAPM39.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date36}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM36\n                                ON (d.demographic_no = PAPM36.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date1}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM1\n                                ON (d.demographic_no = PAPM1.demographicNo)\n\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date36} AND ${lowerLimit.date1} > DATE(m2.dateObserved)\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM2_36\n                                ON (d.demographic_no = PAPM2_36.demographicNo)\n\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) > ${lowerLimit.date29}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM29\n                                ON (d.demographic_no = PAPM29.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date32}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM32 \n                                ON (d.demographic_no = PAPM32.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) > ${lowerLimit.date29}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) PAP29\n                                ON (d.demographic_no = PAP29.demographic_no)\n\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date32}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) PAP32\n                                ON (d.demographic_no = PAP32.demographic_no)\n\n				-- WITHOUT a recorded pap smear in the past 36 months\n				LEFT JOIN (\n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP36\n				ON (d.demographic_no = PAP36.demographic_no)\n				\n				-- WITH a recorded pap smear in the past 37 months to 39 months inclusive\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date39} AND ${lowerLimit.date36} > DATE(p.prevention_date)\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP39_37\n				ON (d.demographic_no = PAP39_37.demographic_no)\n				\n				-- WITH a recorded pap smear in the past 39 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) > ${lowerLimit.date39}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP39\n				ON (d.demographic_no = PAP39.demographic_no)\n				\n				-- WITH a recorded pap smear in the between 33 and 36 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36} AND ${lowerLimit.date32} >  DATE(p.prevention_date) \n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP36_33\n				ON (d.demographic_no = PAP36_33.demographic_no)\n				\n				-- WITH a recorded pap smear in the between 29 and 32 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id, pe.val, p.refused\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date32} AND ${lowerLimit.date29} >= DATE(p.prevention_date)\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP32_29\n				ON (d.demographic_no = PAP32_29.demographic_no)\n				\n				-- PAP pending\n  				LEFT JOIN (\n					SELECT p.demographic_no, p.id\n					FROM preventions p\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result" \n					AND pe.val = "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP_p36\n				ON (d.demographic_no = PAP_p36.demographic_no)\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date36} AND ${lowerLimit.date1} > DATE(p.prevention_date)\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) PAP_p2_36\n                                ON (d.demographic_no = PAP_p2_36.demographic_no)\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date1}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) PAP_p1\n                                ON (d.demographic_no = PAP_p1.demographic_no)\n\n				-- PAP declined or refused\n				LEFT JOIN (\n					SELECT p.demographic_no, p.id \n					FROM preventions p\n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 1\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) PAP_d36\n				ON (d.demographic_no = PAP_d36.demographic_no)\n			\n				-- WITHOUT service code of Q140A billed\n				LEFT JOIN (\n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boi.service_code = ${exclusionCode} \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boc.id = boi.ch1_id\n					GROUP BY boc.demographic_no \n				) BILL140\n				ON (d.demographic_no = BILL140.demographic_no)\n					\n				-- WITHOUT a Q011A billed in the last 36 Months\n				LEFT JOIN (\n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode} \n					AND DATE(boi.service_date) >= ${lowerLimit.date36}\n					GROUP BY boc.demographic_no \n				) BILL36\n				ON (d.demographic_no = BILL36.demographic_no)\n				\n				-- WITHOUT a Q011A billed in the last 39 Months\n				LEFT JOIN ( \n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode}\n					AND DATE(boi.service_date) >= ${lowerLimit.date39}\n					GROUP BY boc.demographic_no \n				) BILL39\n				ON (d.demographic_no = BILL39.demographic_no)\n				\n			\n				LEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != "D"\n                                        AND boi.status != "D"\n                                        AND boi.service_code = ${serviceCode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date39} AND ${lowerLimit.date36} > DATE(boi.service_date)\n                                        GROUP BY boc.demographic_no\n                                ) BILL39_37\n                                ON (d.demographic_no = BILL39_37.demographic_no)\n\n				-- WITHOUT a Q011A billed in the last 33 to 36 Months inclusive\n				LEFT JOIN ( \n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode}\n					AND DATE(boi.service_date) >= ${lowerLimit.date36} AND ${lowerLimit.date32} > DATE(boi.service_date)\n					GROUP BY boc.demographic_no \n				) BILL36_33\n				ON (d.demographic_no = BILL36_33.demographic_no)\n				\n				-- WITHOUT a Q011A billed in the last 33 to 36 Months inclusive\n				LEFT JOIN ( \n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode} \n					AND DATE(boi.service_date) >= ${lowerLimit.date32} AND ${lowerLimit.date29} >= DATE(boi.service_date)\n					GROUP BY boc.demographic_no \n				) BILL32_29\n				ON (d.demographic_no = BILL32_29.demographic_no)\n					\n				LEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != "D"\n                                        AND boi.status != "D"\n                                        AND boi.service_code = ${serviceCode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date32} \n                                        GROUP BY boc.demographic_no\n                                ) BILL32\n                                ON (d.demographic_no = BILL32.demographic_no)\n\n				LEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != "D"\n                                        AND boi.status != "D"\n                                        AND boi.service_code = ${serviceCode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date29}\n                                        GROUP BY boc.demographic_no\n                                ) BILL29\n                                ON (d.demographic_no = BILL29.demographic_no)\n\n				-- NOTE\n				LEFT JOIN (\n					SELECT demographic_no, id\n					FROM preventions \n					WHERE prevention_type = ${prevention}\n					AND deleted = 0 \n					AND refused = 2 \n					AND prevention_date >= ${lowerLimit.date36}\n					GROUP BY demographic_no\n				) PAP_i\n				ON (d.demographic_no = PAP_i.demographic_no)\n			\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND d.sex = ${gender}\n				AND d.demographic_no > 0 \n				AND FLOOR( ABS( DATEDIFF( STR_TO_DATE( CONCAT(d.year_of_birth,",",d.month_of_birth,",",d.date_of_birth), \'%Y,%m,%d\' ), CURRENT_DATE() ) / 365.25 ) ) \n				BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="exclusionCode" name="billing_exclusion_code" value="\'Q140A\'" />\n			<parameter id="serviceCode" name="billing_service_code" value="\'Q011A\'" />\n			<parameter id="dxexclusion" name="exclusion_dx_code" value="V4577,683,684,685,686,687,688,689" />\n			<parameter id="prevention" name="prevention_code" value="\'PAP\'" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincpap" name="PAP LOINC" value="47527-7,49050-8,10524-7" />\n			<parameter id="gender" name="Patient Gender" value="\'F\'" />		\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="69" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="21" />\n			\n			<upperLimit id="date" label="Current Date" name="CurrentDate" value="CURRENT_DATE()" />\n			\n			<lowerLimit id="date1" label="1 Month" name="Date1" value="DATE_SUB( CURRENT_DATE(), INTERVAL 1 MONTH )" />\n			<lowerLimit id="date2" label="2 Month" name="Date2" value="DATE_SUB( CURRENT_DATE(), INTERVAL 2 MONTH )" />\n			<lowerLimit id="date28" label="28 Month" name="Date28" value="DATE_SUB( CURRENT_DATE(), INTERVAL 28 MONTH )" />\n			<lowerLimit id="date29" label="29 Months History" name="Date29" value="DATE_SUB( CURRENT_DATE(), INTERVAL 29 MONTH )" />\n			<lowerLimit id="date32" label="32 Months History" name="Date32" value="DATE_SUB( CURRENT_DATE(), INTERVAL 32 MONTH )" />\n			<lowerLimit id="date33" label="33 Months History" name="Date33" value="DATE_SUB( CURRENT_DATE(), INTERVAL 33 MONTH )" />\n			<lowerLimit id="date36" label="36 Months History" name="Date36" value="DATE_SUB( CURRENT_DATE(), INTERVAL 36 MONTH )" />\n			<lowerLimit id="date37" label="37 Months History" name="Date37" value="DATE_SUB( CURRENT_DATE(), INTERVAL 37 MONTH )" />\n			<lowerLimit id="date39" label="39 Months History" name="Date39" value="DATE_SUB( CURRENT_DATE(), INTERVAL 39 MONTH )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURRENT_DATE() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="trackingstatus" name="IFNULL( PAP0_t.refused, \'\')" title="PAP Tracking Status" primary="false" />\n			<column id="papstatus" name="IFNULL(PAP0_t.val, \'\')" title="PAP Result" primary="false" />\n			<column id="papdate" name="IFNULL( DATE_FORMAT(PAP0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest PAP Test Date (mm-dd-yyyy)" primary="false" />\n			<column id="billQ011ADate" name="IFNULL( DATE_FORMAT(BILL1_0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q011A Date (mm-dd-yyyy)" primary="false" />\n			<column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date  (mm-dd-yyyy)" primary="false" />\n			<column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURRENT_DATE() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="trackingstatus" name="IFNULL( PAP0_t.refused, \'\')" title="PAP Tracking Status" primary="false" />\n                        <column id="papstatus" name="IFNULL(PAP0_t.val, \'\')" title="PAP Result" primary="false" />\n                        <column id="papdate" name="IFNULL( DATE_FORMAT(PAP0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest PAP Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="billQ011ADate" name="IFNULL( DATE_FORMAT(BILL1_0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q011A Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date  (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->	\n			SELECT \n				* \n			FROM demographic d\n			LEFT JOIN (\n				SELECT dxresearch_no, demographic_no\n				FROM dxresearch\n				WHERE demographic_no>0\n				AND status = \'A\'\n				AND coding_system = \'icd9\'\n				AND dxresearch_code IN ${dxexclusion}\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			) dxr\n			ON ( d.demographic_no = dxr.demographic_no)\n			\n			-- get the latest pap\n			LEFT JOIN (\n				SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n				FROM preventions p\n				JOIN preventionsExt pe\n				ON p.id = pe.prevention_id\n				RIGHT JOIN (\n						SELECT demographic_no, MAX(prevention_date) AS prevention_date\n						FROM preventions\n						WHERE prevention_type = ${prevention}\n						AND deleted = 0\n						GROUP BY demographic_no\n				) p2\n				ON p.prevention_date = p2.prevention_date\n				AND p.demographic_no = p2.demographic_no\n				AND p.prevention_type = ${prevention}\n				AND p.deleted = 0\n				WHERE pe.keyval = "result"\n				ORDER BY p.id DESC\n			) PAP0_t\n			ON (d.demographic_no = PAP0_t.demographic_no)\n\n				-- Look for possible PAP results in measurements.\n\n				LEFT JOIN (\n					SELECT m2.demographicNo, m2.id\n					FROM measurements m2\n					JOIN measurementsExt me\n					ON m2.id = me.measurement_id\n					JOIN measurementMap mm\n					ON me.val = mm.`name`\n					WHERE me.keyval = "name"\n					AND mm.loinc_code IN ${loincpap}\n					AND m2.demographicNo > 0\n					AND DATE(m2.dateObserved) >= ${lowerLimit.date39} AND ${lowerLimit.date36} > DATE(m2.dateObserved)\n					GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n\n				) PAPM39_37\n				ON (d.demographic_no = PAPM39_37.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date36} AND ${lowerLimit.date32} > DATE(m2.dateObserved)\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM36_33\n                                ON (d.demographic_no = PAPM36_33.demographicNo)\n\n                                LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date32} AND ${lowerLimit.date29} >= DATE(m2.dateObserved)\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM32_29\n                                ON (d.demographic_no = PAPM32_29.demographicNo)	\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date39}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n\n                                ) PAPM39\n                                ON (d.demographic_no = PAPM39.demographicNo)\n\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date36}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n\n                                ) PAPM36\n                                ON (d.demographic_no = PAPM36.demographicNo)\n\n\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date1}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n\n                                ) PAPM1\n                                ON (d.demographic_no = PAPM1.demographicNo)\n\n\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date36} AND ${lowerLimit.date1} > DATE(m2.dateObserved)\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n\n                                ) PAPM2_36\n                                ON (d.demographic_no = PAPM2_36.demographicNo)\n\n\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) > ${lowerLimit.date29}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n\n                                ) PAPM29\n                                ON (d.demographic_no = PAPM29.demographicNo)\n\n				LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincpap}\n                                        AND m2.demographicNo > 0\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date32}\n                                        GROUP BY m2.demographicNo HAVING COUNT(m2.demographicNo) > -1\n                                ) PAPM32\n                                ON (d.demographic_no = PAPM32.demographicNo)\n\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                	AND DATE(p.prevention_date) > ${lowerLimit.date29}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n                                ) PAP29\n                        	ON (d.demographic_no = PAP29.demographic_no)\n\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val != "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date32}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                                ) PAP32\n                                ON (d.demographic_no = PAP32.demographic_no)\n\n				-- WITHOUT a recorded pap smear in the past 36 months\n\n				LEFT JOIN (\n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP36\n				ON (d.demographic_no = PAP36.demographic_no)\n\n				\n\n				-- WITH a recorded pap smear in the past 37 months to 39 months inclusive\n\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date39} AND ${lowerLimit.date36} > DATE(p.prevention_date)\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP39_37\n				ON (d.demographic_no = PAP39_37.demographic_no)\n\n\n				-- WITH a recorded pap smear in the past 39 months\n\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) > ${lowerLimit.date39}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP39\n				ON (d.demographic_no = PAP39.demographic_no)\n\n				\n\n				-- WITH a recorded pap smear in the between 33 and 36 months\n\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36} AND ${lowerLimit.date32} >  DATE(p.prevention_date) \n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP36_33\n				ON (d.demographic_no = PAP36_33.demographic_no)\n\n				\n\n				-- WITH a recorded pap smear in the between 29 and 32 months\n\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id, pe.val, p.refused\n					FROM preventions p		\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date32} AND ${lowerLimit.date29} >= DATE(p.prevention_date)\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP32_29\n				ON (d.demographic_no = PAP32_29.demographic_no)\n\n\n				-- PAP pending\n\n  				LEFT JOIN (\n					SELECT p.demographic_no, p.id\n					FROM preventions p\n					LEFT JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result" \n					AND pe.val = "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP_p36\n				ON (d.demographic_no = PAP_p36.demographic_no)\n\n\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date36} AND ${lowerLimit.date1} > DATE(p.prevention_date)\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n                                ) PAP_p2_36\n                                ON (d.demographic_no = PAP_p2_36.demographic_no)\n\n\n\n				LEFT JOIN (\n                                        SELECT p.demographic_no, p.id\n                                        FROM preventions p\n                                        LEFT JOIN preventionsExt pe\n                                        ON pe.prevention_id = p.id\n                                        WHERE p.prevention_type = ${prevention}\n                                        AND p.deleted = 0\n                                        AND p.refused = 0\n                                        AND pe.keyval = "result"\n                                        AND pe.val = "pending"\n                                        AND DATE(p.prevention_date) >= ${lowerLimit.date1}\n                                        GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n                                ) PAP_p1\n                                ON (d.demographic_no = PAP_p1.demographic_no)\n\n\n\n				-- PAP declined or refused\n\n				LEFT JOIN (\n					SELECT p.demographic_no, p.id \n					FROM preventions p\n					WHERE p.prevention_type = ${prevention}\n					AND p.deleted = 0\n					AND p.refused = 1\n					AND DATE(p.prevention_date) >= ${lowerLimit.date36}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n\n				) PAP_d36\n				ON (d.demographic_no = PAP_d36.demographic_no)\n\n\n			-- WITHOUT service code of Q140A billed\n			LEFT JOIN (\n				SELECT boc.id, boc.demographic_no\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boi.service_code = ${exclusionCode} \n				AND boc.status != "D"\n				AND boi.status != "D"\n				AND boc.id = boi.ch1_id\n				GROUP BY boc.demographic_no \n			) BILL140\n			ON (d.demographic_no = BILL140.demographic_no)\n				\n			LEFT JOIN (\n				SELECT boc.id, boc.demographic_no, MAX(boi.service_date) AS billing_date\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boc.id = boi.ch1_id\n				AND boc.status != \'D\'\n				AND boi.status != "D"\n				AND boi.service_code = ${serviceCode}\n				GROUP BY boc.demographic_no\n			) BILL1_0\n			ON (d.demographic_no = BILL1_0.demographic_no)\n			\n				-- WITHOUT a Q011A billed in the last 36 Months\n\n				LEFT JOIN (\n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode} \n					AND DATE(boi.service_date) >= ${lowerLimit.date36}\n					GROUP BY boc.demographic_no \n\n				) BILL36\n				ON (d.demographic_no = BILL36.demographic_no)\n\n				\n\n				-- WITHOUT a Q011A billed in the last 39 Months\n\n				LEFT JOIN ( \n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode}\n					AND DATE(boi.service_date) >= ${lowerLimit.date39}\n					GROUP BY boc.demographic_no \n\n				) BILL39\n				ON (d.demographic_no = BILL39.demographic_no)\n\n\n\n				LEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != "D"\n                                        AND boi.status != "D"\n                                        AND boi.service_code = ${serviceCode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date39} AND ${lowerLimit.date36} > DATE(boi.service_date)\n                                        GROUP BY boc.demographic_no\n\n                                ) BILL39_37\n                                ON (d.demographic_no = BILL39_37.demographic_no)\n\n\n\n				-- WITHOUT a Q011A billed in the last 33 to 36 Months inclusive\n\n				LEFT JOIN ( \n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode}\n					AND DATE(boi.service_date) >= ${lowerLimit.date36} AND ${lowerLimit.date32} > DATE(boi.service_date)\n					GROUP BY boc.demographic_no \n\n				) BILL36_33\n				ON (d.demographic_no = BILL36_33.demographic_no)\n\n				\n\n				-- WITHOUT a Q011A billed in the last 33 to 36 Months inclusive\n\n				LEFT JOIN ( \n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.service_code = ${serviceCode} \n					AND DATE(boi.service_date) >= ${lowerLimit.date32} AND ${lowerLimit.date29} >= DATE(boi.service_date)\n					GROUP BY boc.demographic_no \n\n				) BILL32_29\n				ON (d.demographic_no = BILL32_29.demographic_no)\n\n					\n\n				LEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != "D"\n                                        AND boi.status != "D"\n                                        AND boi.service_code = ${serviceCode}\n                                        AND DATE(boi.service_date) >= ${lowerLimit.date32} \n                                        GROUP BY boc.demographic_no\n\n                                ) BILL32\n                                ON (d.demographic_no = BILL32.demographic_no)\n\n	\n				LEFT JOIN (\n                                        SELECT boc.id, boc.demographic_no\n                                        FROM billing_on_cheader1 boc, billing_on_item boi\n                                        WHERE boc.id = boi.ch1_id\n                                        AND boc.status != "D"\n                                        AND boi.status != "D"\n                                        AND boi.service_code = ${serviceCode}\n                                        AND DATE(boi.service_date) > ${lowerLimit.date29}\n                                        GROUP BY boc.demographic_no\n                                ) BILL29\n                                ON (d.demographic_no = BILL29.demographic_no)\n				\n			-- NOTE\n			LEFT JOIN (\n				SELECT demographic_no, id\n				FROM preventions \n				WHERE prevention_type = ${prevention}\n				AND deleted = 0 \n				AND refused = 2 \n				AND prevention_date > ${lowerLimit.date36}\n				GROUP BY demographic_no\n			) PAP_i\n			ON (d.demographic_no = PAP_i.demographic_no)\n			\n			-- Last Seen Date\n			LEFT JOIN (\n				SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n				FROM appointment a, demographic d\n				WHERE a.demographic_no = d.demographic_no\n				AND d.provider_no = \'${provider}\'\n				AND ${upperLimit.date} > DATE(a.appointment_date)\n				AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n				AND a.demographic_no > 0\n				GROUP BY a.demographic_no\n			) app1\n			ON (d.demographic_no = app1.demographic_no)\n\n			-- Next Appointment Date\n			LEFT JOIN (\n				SELECT a.demographic_no, a.appointment_date\n				FROM appointment a, demographic d\n				WHERE a.demographic_no = d.demographic_no\n				AND d.provider_no = \'${provider}\'\n				AND DATE(a.appointment_date) >= ${upperLimit.date}\n				AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n				AND a.demographic_no > 0\n				GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n			) app2\n			ON (d.demographic_no = app2.demographic_no)\n		\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.sex = ${gender}\n			AND d.demographic_no > 0 \n			AND FLOOR( ABS( DATEDIFF( STR_TO_DATE( CONCAT(d.year_of_birth,",",d.month_of_birth,",",d.date_of_birth), \'%Y,%m,%d\' ), CURRENT_DATE() ) / 365.25 ) ) \n			BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n			AND dxr.dxresearch_no IS NULL AND PAP_i.id IS NULL AND BILL140.id IS NULL\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Cervical Ca Screening Overdue</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% less than 3 months overdue" toLabel="&lt;= 3 months Overdue"/>\n		<sharedMapping fromLabel="% more than 3 months overdue" toLabel="&gt; 3 months Overdue"/>\n		<sharedMapping fromLabel="% less than 1 month pending" toLabel="&lt; 1 month Pending"/>\n		<sharedMapping fromLabel="% more than 1 month pending" toLabel="&gt;= 1 month Pending"/>\n		<sharedMapping fromLabel="% Declined" toLabel="Declined"/>\n		<sharedMapping fromLabel="% Due in less than 4 months" toLabel="Due in &lt; 4 months"/>\n		<sharedMapping fromLabel="% Due in more than 4 and less than 7 months" toLabel="Due in &gt;= 4 and &lt; 7 months"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Cervical Ca Screening Overdue');
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId3, 'Colorectal Cancer Screening', 'Preventive Health Care', 'Cancer', 'OSCAR EMR', '2022-02-02', 'Patient Care: Colorectal Cancer Screening:\n% of patients aged 50 to 74 years old, inclusive, with an FOBT  within the past two years, \nsigmoidoscopy within 5 years or a colonoscopy within the past 10 years. - patients with a null or “pending” prevention r', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Cancer</subCategory>\n		<name>Colorectal Cancer Screening</name>\n		<metricSetName>Colorectal Cancer Screen</metricSetName>\n		<metricLabel></metricLabel>\n		<definition>Patient Care: Colorectal Cancer Screening:\n% of patients aged 50 to 74 years old, inclusive, with an FOBT or FIT within the past two years, \nsigmoidoscopy within 5 years or a colonoscopy within the past 10 years. - patients with a null or “pending” prevention result are overdue.</definition>\n		<framework>Based on and adapted from CIHI’s 2012 Indicator Technical Specifications (Nov 2012)</framework>\n		<frameworkVersion>01-29-2018</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>01-29-2018</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincfobt" name="FOBT LOINC" value="2335-8,29771-3,58453-2,14563-1,14564-9,14565-6" />\n			<parameter id="colonoscopy" name="Colonoscopy" value="\'COLONOSCOPY\'" />\n			<parameter id="dxexclusions" name="Exclude Dx Codes" value="154,153,556,555,V1005" />\n			<parameter id="preventionfobt" name="FOBT Prevention" value="\'FOBT\'" />\n\n			<parameter id="servicecode" name="Service Code Prevention" value="\'Q133A\'" />\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="74" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n			\n			<upperLimit id="date" label="Current Date" name="currentDate" value="NOW()" />\n			\n			<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n			<lowerLimit id="date120" label="120 Months" name="Date120" value="DATE_SUB( NOW(), INTERVAL 120 MONTH )" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				IF ( COUNT(fin.patient) > 0,\n					 SUM( IF( (fin.colo > 0 OR fin.fobt > 0 OR fin.fobtm  > 0 OR fin.bill > 0) AND fin.fobt_i IS NULL AND fin.dx IS NULL, 1, 0 ) ) \n				,0 ) AS \'With One Test\',\n			\n				IF ( COUNT(fin.patient) > 0,\n					 SUM( IF( fin.colo IS NULL AND fin.fobt IS NULL AND fin.fobtm IS NULL AND fin.bill IS NULL AND fin.fobt_i IS NULL AND fin.dx IS NULL, 1, 0 ) )\n				,0 ) AS \'With No Tests\', \n				\n				IF ( COUNT(fin.patient) > 0,\n					SUM( IF( fin.fobt_i > 0 OR fin.dx > 0 , 1, 0 ) )\n				,0 ) AS \'Excluded\'\n				\n			FROM (\n			\n				SELECT \n				d.demographic_no AS patient,\n				COLO.id AS colo,\n				FOBT.id AS fobt,\n				BILL.id AS bill,\n				FOBT_i.id AS fobt_i,\n				dxr.dxresearch_no AS dx,				\n				FOBTM.id AS fobtm\n			\n				FROM demographic d\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no\n						FROM dxresearch\n						WHERE demographic_no>0\n						AND status = \'A\'\n						AND dxresearch_code IN ${dxexclusions}\n						GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) dxr \n				ON ( d.demographic_no = dxr.demographic_no) \n			\n				-- Look for colonoscopy results from the last 120 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					INNER JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${colonoscopy}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND p.prevention_date >= ${lowerLimit.date120}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) COLO\n				ON (d.demographic_no = COLO.demographic_no )\n			\n				-- Look for FOBT req from the last 24 months\n				LEFT JOIN ( \n					SELECT p.demographic_no, p.id\n					FROM preventions p	\n					INNER JOIN preventionsExt pe\n					ON pe.prevention_id = p.id \n					WHERE p.prevention_type = ${preventionfobt}\n					AND p.deleted = 0\n					AND p.refused = 0\n					AND pe.keyval = "result"\n					AND pe.val != "pending"\n					AND DATE(p.prevention_date) >= ${lowerLimit.date24}\n					GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n				) FOBT\n				ON (d.demographic_no = FOBT.demographic_no )\n			\n				-- Look for possible FOBT results in measurementsExt.\n		                LEFT JOIN (\n					SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincfobt}\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date24}\n                                        GROUP BY m2.demographicNo\n\n                        	) FOBTM\n                        	ON (d.demographic_no = FOBTM.demographicNo)\n	\n\n				--without billing for Q133A in the last 24  months\n				LEFT JOIN (\n					SELECT boc.id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != \'D\'\n					AND boi.status != \'D\'\n					AND boi.service_code =  ${servicecode}\n					AND DATE(boi.service_date) >= ${lowerLimit.date24} \n					GROUP BY boc.demographic_no \n				) BILL\n				ON (d.demographic_no = BILL.demographic_no)\n\n				-- Ineligible\n				LEFT JOIN (\n\n                                        SELECT demographic_no, id\n                                        FROM preventions\n                                        WHERE prevention_type = ${preventionfobt}\n                                        AND deleted = 0\n                                        AND refused = 2\n                                        AND prevention_date >= ${lowerLimit.date24}\n                                        GROUP BY demographic_no\n\n                                ) FOBT_i\n                                ON (d.demographic_no = FOBT_i.demographic_no)\n	\n\n				-- WHERE THE PATIENT\'S AGE AT THE TIME OF THE COLONOSCOPY ...\n				-- Excluding patients previously diagnosed.\n\n				WHERE d.patient_status = ${pstatus} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0\n				AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \n					BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>01-29-2018</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />\n			<parameter id="loincfobt" name="FOBT LOINC" value="2335-8,29771-3,58453-2,14563-1,14564-9,14565-6" />\n			<parameter id="colonoscopy" name="Colonoscopy" value="\'COLONOSCOPY\'" />\n			<parameter id="dxexclusions" name="Exclude Dx Codes" value="154,153,556,555,V1005" />\n			<parameter id="preventionfobt" name="FOBT Prevention" value="\'FOBT\'" />	\n			<parameter id="servicecode" name="Service Code Prevention" value="\'Q133A\'" />	\n		</params>\n		<range>\n			<upperLimit id="age" label="Max Age" name="Age" value="74" />\n			<lowerLimit id="age" label="Min Age" name="Age" value="50" />\n			\n			<upperLimit id="date" label="Current Date" name="currentDate" value="NOW()" />\n			\n			<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n			<lowerLimit id="date120" label="120 Months" name="Date120" value="DATE_SUB( NOW(), INTERVAL 120 MONTH )" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="coloscopytrackingstatus" name="IFNULL(COLO0_t.refused, \'\')" title="Colonoscopy Tracking Status" primary="false" />\n                        <column id="coloscopy" name="IFNULL(COLO0_t.val, \'\')" title="Colonoscopy Result" primary="false" />\n                        <column id="coloscopydate" name="IFNULL( DATE_FORMAT( COLO0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Colonoscopy Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="fobttrackingstatus" name="IFNULL(FOBT0_t.refused, \'\')" title="FOBT Tracking Status" primary="false" />\n                        <column id="fobtprevention" name="IFNULL(FOBT0_t.val, \'\')" title="FOBT Result" primary="false" />\n                        <column id="fobtpreventiondate" name="IFNULL( DATE_FORMAT( FOBT0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Test Date (mm-dd-yyyy)" primary="false" />\n<!--\n			<column id="fobtlab" name="IFNULL(FOBTM0.dataField, \'\')" title="FOBT Lab Result" primary="false" />\n			<column id="fobtlabdate" name="IFNULL( DATE_FORMAT( FOBTM0.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Lab Date (mm-dd-yyyy)" primary="false" />\n-->\n			<column id="billQ133Adate" name="IFNULL( DATE_FORMAT( BILL0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q133A Tracking Code Date (mm-dd-yyyy)" primary="false" />\n			<column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n			<column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n			<column id="q142a" name="IFNULL( DATE_FORMAT( BILL1.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q142A Tracking Code Date (mm-dd-yyyy)" primary="false" />\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n                        <column id="rosterstatus" name="IFNULL( d.roster_status, \'\')" title="Patient Roster Status" primary="false" />\n			<column id="rosterdate" name="IFNULL( DATE_FORMAT(d.roster_date, \'%m-%d-%Y\' ), \'\')" title="Rostered Date (mm-dd-yyyy)" primary="false" />\n                        <column id="coloscopytrackingstatus" name="IFNULL(COLO0_t.refused, \'\')" title="Colonoscopy Tracking Status" primary="false" />\n                        <column id="coloscopy" name="IFNULL(COLO0_t.val, \'\')" title="Colonoscopy Result" primary="false" />\n                        <column id="coloscopydate" name="IFNULL( DATE_FORMAT( COLO0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest Colonoscopy Test Date (mm-dd-yyyy)" primary="false" />\n                        <column id="fobttrackingstatus" name="IFNULL(FOBT0_t.refused, \'\')" title="FOBT Tracking Status" primary="false" />\n                        <column id="fobtprevention" name="IFNULL(FOBT0_t.val, \'\')" title="FOBT Result" primary="false" />\n                        <column id="fobtpreventiondate" name="IFNULL( DATE_FORMAT( FOBT0_t.prevention_date, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Test Date (mm-dd-yyyy)" primary="false" />\n<!--\n                        <column id="fobtlab" name="IFNULL(FOBTM0.dataField, \'\')" title="FOBT Lab Result" primary="false" />\n                        <column id="fobtlabdate" name="IFNULL( DATE_FORMAT( FOBTM0.dateObserved, \'%m-%d-%Y\' ), \'\')" title="Latest FOBT Lab Date (mm-dd-yyyy)" primary="false" />\n-->\n                        <column id="billQ133Adate" name="IFNULL( DATE_FORMAT( BILL0.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q133A Tracking Code Date (mm-dd-yyyy)" primary="false" />\n                        <column id="lastappdate" name="IFNULL( DATE_FORMAT(app1.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Last Seen Date (mm-dd-yyyy)" primary="false" />\n                        <column id="nextappdate" name="IFNULL( DATE_FORMAT(app2.appointment_date, \'%m-%d-%Y\' ), \'\')" title="Next Appointment Date (mm-dd-yyyy)" primary="false" />\n			<column id="q142a" name="IFNULL( DATE_FORMAT( BILL1.billing_date, \'%m-%d-%Y\' ), \'\')" title="Latest Q142A Tracking Code Date (mm-dd-yyyy)" primary="false" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT\n			*\n			FROM demographic d\n			LEFT JOIN (\n				SELECT dxresearch_no, demographic_no\n                                FROM dxresearch\n                                WHERE demographic_no>0\n				AND status = \'A\'\n                                AND dxresearch_code IN ${dxexclusions}\n                                GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr \n			ON ( d.demographic_no = dxr.demographic_no)\n		\n			-- Look for colonoscopy results from the last 120 months\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val\n                                FROM preventions p\n                                INNER JOIN preventionsExt pe\n                                ON pe.prevention_id = p.id\n                                WHERE p.prevention_type = ${colonoscopy}\n                                AND p.deleted = 0\n                                AND p.refused = 0\n                                AND pe.keyval = "result"\n                                AND pe.val != "pending"\n                                AND p.prevention_date >= ${lowerLimit.date120}\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) COLO\n                        ON (d.demographic_no = COLO.demographic_no )\n\n			-- all COLO tracking status\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n				JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n					SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${colonoscopy}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n				ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${colonoscopy}\n				AND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n\n                        ) COLO0_t\n                        ON (d.demographic_no = COLO0_t.demographic_no )\n\n                        -- Look for FOBT req from the last 24 months\n                        LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val\n                                FROM preventions p\n                                INNER JOIN preventionsExt pe\n                                ON pe.prevention_id = p.id\n                                WHERE p.prevention_type = ${preventionfobt}\n                                AND p.deleted = 0\n                                AND p.refused = 0\n                                AND pe.keyval = "result"\n                                AND pe.val != "pending"\n                                AND DATE(p.prevention_date) >= ${lowerLimit.date24}\n                                GROUP BY p.demographic_no HAVING COUNT(p.demographic_no) > -1\n                        ) FOBT\n                        ON (d.demographic_no = FOBT.demographic_no )\n\n			-- all FOBT tracking status\n			LEFT JOIN (\n                                SELECT p.demographic_no, p.id, pe.val, p.prevention_date, IF(p.refused = 1, "Refused", IF(p.refused = 2, "Ineligible", "Complete") ) AS refused\n                                FROM preventions p\n                                JOIN preventionsExt pe\n                                ON p.id = pe.prevention_id\n                                RIGHT JOIN (\n                                        SELECT demographic_no, MAX(prevention_date) AS prevention_date\n                                        FROM preventions\n                                        WHERE prevention_type = ${preventionfobt}\n                                        AND deleted = 0\n                                        GROUP BY demographic_no\n                                ) p2\n                                ON p.prevention_date = p2.prevention_date\n                                AND p.demographic_no = p2.demographic_no\n                                AND p.prevention_type = ${preventionfobt}\n				AND p.deleted = 0\n                                WHERE pe.keyval = "result"\n                                ORDER BY p.id DESC\n\n                        ) FOBT0_t\n                        ON (d.demographic_no = FOBT0_t.demographic_no )\n\n\n                        -- Look for possible FOBT results in measurementsExt.\n			 LEFT JOIN (\n                                        SELECT m2.demographicNo, m2.id\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loincfobt}\n                                        AND DATE(m2.dateObserved) >= ${lowerLimit.date24}\n                                        GROUP BY m2.demographicNo\n\n                        ) FOBTM\n                        ON (d.demographic_no = FOBTM.demographicNo)\n\n\n			--without billing for Q133A in the last 24  months\n			LEFT JOIN (\n				SELECT boc.id, boc.demographic_no\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boc.id = boi.ch1_id \n				AND boc.status != \'D\'\n				AND boi.status != \'D\'\n				AND boi.service_code =  ${servicecode}\n				AND DATE(boi.service_date) >= ${lowerLimit.date24} \n				GROUP BY boc.demographic_no \n			) BILL\n			ON (d.demographic_no = BILL.demographic_no)\n\n			LEFT JOIN (\n                                SELECT boc.id, boc.demographic_no, MAX(boi.service_date) AS billing_date\n                                FROM billing_on_cheader1 boc, billing_on_item boi\n                                WHERE boc.id = boi.ch1_id\n                                AND boc.status != \'D\'\n                                AND boi.status != \'D\'\n                                AND boi.service_code =  ${servicecode}\n                                GROUP BY boc.demographic_no\n                        ) BILL0\n                        ON (d.demographic_no = BILL0.demographic_no)\n\n			-- Q142A\n			LEFT JOIN (\n                                SELECT boc.id, boc.demographic_no, MAX(boi.service_date) AS billing_date\n                                FROM billing_on_cheader1 boc, billing_on_item boi\n                                WHERE boc.id = boi.ch1_id\n                                AND boc.status != \'D\'\n                                AND boi.status != \'D\'\n                                AND boi.service_code = \'Q142A\'\n                                GROUP BY boc.demographic_no\n                        ) BILL1\n                        ON (d.demographic_no = BILL1.demographic_no)\n\n			 -- Last Seen Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, max(a.appointment_date) as appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND ${upperLimit.date} > DATE(a.appointment_date)\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no\n                        ) app1\n                        ON (d.demographic_no = app1.demographic_no)\n\n                        -- Next Appointment Date\n                        LEFT JOIN (\n                                SELECT a.demographic_no, a.appointment_date\n                                FROM appointment a, demographic d\n                                WHERE a.demographic_no = d.demographic_no\n                                AND d.provider_no = \'${provider}\'\n                                AND DATE(a.appointment_date) >= ${upperLimit.date}\n                                AND a.status != \'D\' AND a.status != \'C\' AND a.status != \'N\'\n                                AND a.demographic_no > 0\n                                GROUP BY a.demographic_no HAVING COUNT(a.demographic_no) > -1\n                        ) app2\n                        ON (d.demographic_no = app2.demographic_no)\n\n			-- note\n			-- Ineligible\n                        LEFT JOIN (\n\n                                SELECT demographic_no, id\n                                FROM preventions\n                                WHERE prevention_type = ${preventionfobt}\n                                AND deleted = 0\n                                AND refused = 2\n                                AND prevention_date >= ${lowerLimit.date24}\n                                GROUP BY demographic_no\n\n                        ) FOBT_i\n                        ON (d.demographic_no = FOBT_i.demographic_no)\n\n		\n			-- WHERE THE PATIENT\'S AGE AT THE TIME OF THE COLONOSCOPY\n			-- Exclude Cancer diagnosis.\n\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0\n			AND FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), NOW() ) / 365.25 ) ) \n				BETWEEN ${lowerLimit.age} AND ${upperLimit.age}\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD Colorectal Cancer Screen</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% With One Test" toLabel="Screening up to date"/>\n		<sharedMapping fromLabel="% With No Tests" toLabel="Screening overdue"/>\n		<sharedMapping fromLabel="% Excluded" toLabel="Excluded"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Colorectal Cancer Screen'),
        (@dashboardId3, 'Childhood Immunization Recall', 'Preventive Health Care', 'Immunization', 'Based on and adapted from AFHTO D2D 3.0 Indicators: Data Dictionary version 4 (Nov 2015)', '2022-03-03', 'Patients approaching 30 months and immunizations as recommended by the National Advisory Committee on immunizations.', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc.</author>\n	<uid></uid>\n	<heading>\n		<category>Preventive Health Care (Click on the chart to see details)</category>\n		<subCategory>Immunization</subCategory>\n		<name>Childhood Immunization Recall</name>\n		<metricSetName>Childhood Immunization Recall</metricSetName>\n		<metricLabel>Complete</metricLabel>\n		<definition>Patients approaching months who have received all of the ministry-supplied immunizations as recommended by the National Advisory Committee on immunizations.</definition>\n		<framework>Based on and adapted from AFHTO D2D 3.0 Indicators: Data Dictionary version 4 (Nov 2015)</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="dTaPIPVHib" name="DTaPIPVHib" value="\'%DTaP-IPV-Hib%\'" />\n			<parameter id="pneumococcal" name="Pneumococcal" value="\'%Pneu-C%\'" />\n			<parameter id="rotavirus" name="Rotavirus" value="\'%Rot%\'" />\n			<parameter id="meningococcal" name="Meningococcal" value="\'%MenC-C%\'" />\n			<parameter id="measlesMumpsRubella" name="MeaslesMumpsRubella" value="\'%MMR%\'" />\n			<parameter id="varicella" name="Varicella" value="\'VZ\'" />\n			<parameter id="varicella2" name="Varicella2" value="\'[Var] Varicella\'" />\n\n		</params>\n		<range>\n<!--\n			<upperLimit id="age" label="Max Age Months" name="Age" value="2.41667" />\n			<lowerLimit id="age" label="Min Age Months" name="Age" value="1.5" />\n-->						\n			<upperLimit id="age" label="Max Age Months" name="Age" value="29" />\n                        <lowerLimit id="age" label="Min Age Months" name="Age" value="18" />\n\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n            <lowerLimit id="date" label="12 Months" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				-- count patients that satisfy all 5 requirements\n				IF( COUNT(fin.patient) > 0,\n					SUM(\n						IF( fin.dtap >= 4  \n						AND fin.pneu >= 3  \n						AND fin.menc >= 1\n						AND fin.mmr >= 1\n						AND fin.vz >= 1\n						, 1, 0 )\n					) \n				, 0 ) AS \'% Complete\',\n			\n				-- the remainder missed one of the 5 requirements.\n				IF( COUNT(fin.patient) > 0,					\n                                        SUM(\n                                                IF( (4 > fin.dtap AND fin.dtap_r = 0 AND ( fin.pneu >= 3 OR fin.pneu_r = 0) AND (fin.menc >= 1 OR fin.menc_r = 0) AND (fin.mmr >= 1 OR fin.mmr_r = 0 ) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 3 > fin.pneu AND fin.pneu_r = 0 AND (fin.dtap >= 4 OR fin.dtap_r = 0) AND (fin.menc >= 1 OR fin.menc_r = 0) AND (fin.mmr >= 1 OR fin.mmr_r = 0 ) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 1 > fin.menc AND fin.menc_r = 0 AND (fin.pneu >= 3 OR fin.pneu_r = 0) AND (fin.dtap >= 4 OR fin.dtap_r = 0) AND (fin.mmr >= 1 OR fin.mmr_r = 0 ) AND (fin.vz >= 1 OR fin.vz_r = 0) )\n                                                OR ( 1 > fin.mmr AND fin.mmr_r = 0 AND (fin.menc >= 1 OR fin.menc_r = 0) AND (fin.pneu >= 3 OR fin.pneu_r = 0 ) AND (fin.dtap >= 4 OR fin.dtap_r = 0) AND (fin.vz >=1 OR fin.vz_r = 0) )\n                                                OR ( 1 > fin.vz AND fin.vz_r = 0 AND (fin.mmr >= 1 OR fin.mmr_r = 0) AND (fin.menc >= 1 OR fin.menc_r = 0 ) AND (fin.pneu >= 3 OR fin.pneu_r = 0 ) AND (fin.dtap >= 4 OR fin.dtap_r = 0 ) )\n\n						, 1, 0 )\n					) \n				, 0 ) AS \'Incomplete\',\n				\n				IF( COUNT(fin.patient) > 0,\n					SUM(\n						IF( ( 4 > fin.dtap AND fin.dtap_r > 0) \n						OR ( 3 > fin.pneu AND fin.pneu_r > 0) \n						OR ( fin.menc = 0 AND fin.menc_r > 0)\n						OR ( fin.mmr = 0 AND fin.mmr_r > 0) \n						OR ( fin.vz = 0 AND fin.vz_r > 0)\n						, 1, 0 )\n					) \n				, 0 )AS \'Declined one or more\'\n			\n			FROM (\n				SELECT  \n					d.demographic_no AS \'patient\',\n					IFNULL( DTaP.id, 0 ) AS \'dtap\',\n					IFNULL( DTaP_r.id, 0 ) AS \'dtap_r\',\n					IFNULL( PNEU.id, 0 ) AS \'pneu\',\n					IFNULL( PNEU_r.id, 0 ) AS \'pneu_r\',\n					IFNULL( MC.id, 0 ) AS \'menc\',\n					IFNULL( MC_r.id, 0 ) AS \'menc_r\',\n					IFNULL( MM.id, 0 ) AS \'mmr\',\n					IFNULL( MM_r.id, 0 ) AS \'mmr_r\',\n					IFNULL( VZ.id, 0 ) AS \'vz\',\n					IFNULL( VZ_r.id, 0 ) AS \'vz_r\'\n					\n				FROM demographic d\n			\n				-- 4 instances of - DTaP-IPV-Hib - Diphtheria, Tetanus, Pertussis, Polio, Haemophilus influenzae type B\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${dTaPIPVHib}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no \n				) DTaP\n				ON (d.demographic_no = DTaP.demographic_no)\n			\n				-- WITH  a refusal of any of the following - DTaP-IPV-Hib,  Pneumococcal conjugate,  Meningococcal Conjugate C,  Measles, Mumps, Rubella or Var  - Varicella\n				-- in the past 12 months\n				-- refused in the past 12 months\n                                LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${dTaPIPVHib}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n                                        AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) DTaP_r\n                                ON (d.demographic_no = DTaP_r.demographic_no)\n\n				\n				-- 3 instances of - Pneu-C-13  - Pneumococcal Conjugate 13\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${pneumococcal}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no \n				) PNEU\n				ON (d.demographic_no = PNEU.demographic_no)\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${pneumococcal}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) PNEU_r\n                                ON (d.demographic_no = PNEU_r.demographic_no)\n			\n				-- 1 instance of - Men-C-C  - Meningococcal Conjugate \n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${meningococcal}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no\n				) MC\n				ON (d.demographic_no = MC.demographic_no)\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${meningococcal}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) MC_r\n                                ON (d.demographic_no = MC_r.demographic_no)\n\n				\n				-- 1 instance of - MMR  - Measles, Mumps, Rubella\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no\n				) MM\n				ON (d.demographic_no = MM.demographic_no)\n			\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) MM_r\n                                ON (d.demographic_no = MM_r.demographic_no)\n\n				-- 1 instance of - Var  - Varicella\n				LEFT JOIN ( \n					SELECT p.demographic_no, COUNT(p.id) AS id\n					FROM preventions p		 \n					WHERE p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2}\n					AND p.deleted = 0\n					AND p.refused = 0\n					GROUP BY p.demographic_no\n				) VZ\n				ON (d.demographic_no = VZ.demographic_no)\n				\n				LEFT JOIN (\n                                        SELECT p.demographic_no, COUNT(p.id) AS id\n                                        FROM preventions p\n                                        WHERE p.prevention_type = ${varicella}  OR p.prevention_type = ${varicella2}\n                                        AND p.deleted = 0\n                                        AND p.refused = 1\n					AND p.prevention_date > ${lowerLimit.date}\n                                        GROUP BY p.demographic_no\n                                ) VZ_r\n                                ON (d.demographic_no = VZ_r.demographic_no)\n			\n				-- PATIENTS BETWEEN 30 TO 42 MONTHS OLD\n				WHERE d.patient_status = ${pstatus}\n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				AND CURRENT_DATE() >= DATE_ADD(DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), INTERVAL ${lowerLimit.age} MONTH)\n                        	AND DATE_ADD(DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), INTERVAL ${upperLimit.age} MONTH) >= CURRENT_DATE()\n				\n			) fin;\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />	\n			<parameter id="dTaPIPVHib" name="DTaPIPVHib" value="\'%DTaP-IPV-Hib%\'" />\n			<parameter id="pneumococcal" name="Pneumococcal" value="\'%Pneu-C%\'" />\n			<parameter id="rotavirus" name="Rotavirus" value="\'%Rot%\'" />\n			<parameter id="meningococcal" name="Meningococcal" value="\'%MenC-C%\'" />\n			<parameter id="measlesMumpsRubella" name="MeaslesMumpsRubella" value="\'%MMR%\'" />\n			<parameter id="varicella" name="Varicella" value="\'VZ\'" />\n			<parameter id="varicella2" name="Varicella2" value="\'[Var] Varicella\'" />\n\n			<parameter id="sharedMetricLabel" name="sharedMetricLabel" value="sharedMetricLabel" />\n		</params>\n		<range>\n<!--\n			<upperLimit id="age" label="Max Age Months" name="Age" value="2.41667" />\n			<lowerLimit id="age" label="Min Age Months" name="Age" value="1.5" />\n-->\n			<upperLimit id="age" label="Max Age Months" name="Age" value="29" />\n                        <lowerLimit id="age" label="Min Age Months" name="Age" value="18" />\n	\n			<upperLimit id="date" label="Date Today" name="Date" value="NOW()" />\n            <lowerLimit id="date" label="12 Months" name="Date" value="DATE_SUB( NOW(), INTERVAL 12 MONTH )" />\n\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="ROUND( ABS(DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) / 365.25), 1)" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			\n			<column id="dtapcount" name="IFNULL( DTaP.id, \'\' )" title="Count of DTaP instances" primary="false" />\n<!--			<column id="dtaprefused" name="IFNULL( REF_dtap.refused, \'No\' )" title="DTaP Refused Status" primary="false" />\n-->			<column id="pneucount" name="IFNULL( PNEU.id, 0 )" title="Count of Pneumococcal instances" primary="false" />\n<!--			<column id="pneurefused" name="IFNULL( REF_pneu.refused, \'No\' )" title="Pneumococcal Refused Status" primary="false" />\n-->			<column id="mencount" name="IFNULL( MC.id, 0 )" title="Count of Meningococcal Instances" primary="false" />\n<!--			<column id="menrefused" name="IFNULL( REF_men.refused, \'No\' )" title="Meningococcal Refused Status" primary="false" />\n-->			<column id="mmrcount" name="IFNULL( MM.id, 0 )" title="Count of MMR instances" primary="false" />\n<!--			<column id="mmrrefused" name="IFNULL( REF_mmr.refused, \'No\' )" title="MMR Refused Status" primary="false" />\n-->			<column id="vzcount" name="IFNULL( VZ.id, 0 )" title="Count of Varicella instances" primary="false" />\n<!--			<column id="vzrefused" name="IFNULL( REF_vz.refused, \'No\' )" title="Varicella Refused Status" primary="false" />\n-->			<column id="rotcount" name="IFNULL( ROT.id, 0 )" title="Count of Rotovirus instances" primary="false" />\n<!--			<column id="rotrefused" name="IFNULL( REF_rot.refused, \'No\' )" title="Rotovirus Refused Status" primary="false" />\n-->\n\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="ROUND( ABS(DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) / 365.25), 1)" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dtapcount" name="IFNULL( DTaP.id, \'\' )" title="Count of DTaP instances" primary="false" />\n<!--                    <column id="dtaprefused" name="IFNULL( REF_dtap.refused, \'No\' )" title="DTaP Refused Status" primary="false" />\n-->                     <column id="pneucount" name="IFNULL( PNEU.id, 0 )" title="Count of Pneumococcal instances" primary="false" />\n<!--                    <column id="pneurefused" name="IFNULL( REF_pneu.refused, \'No\' )" title="Pneumococcal Refused Status" primary="false" />\n-->                     <column id="mencount" name="IFNULL( MC.id, 0 )" title="Count of Meningococcal Instances" primary="false" />\n<!--                    <column id="menrefused" name="IFNULL( REF_men.refused, \'No\' )" title="Meningococcal Refused Status" primary="false" />\n-->                     <column id="mmrcount" name="IFNULL( MM.id, 0 )" title="Count of MMR instances" primary="false" />\n<!--                    <column id="mmrrefused" name="IFNULL( REF_mmr.refused, \'No\' )" title="MMR Refused Status" primary="false" />\n-->                     <column id="vzcount" name="IFNULL( VZ.id, 0 )" title="Count of Varicella instances" primary="false" />\n<!--                    <column id="vzrefused" name="IFNULL( REF_vz.refused, \'No\' )" title="Varicella Refused Status" primary="false" />\n-->                     <column id="rotcount" name="IFNULL( ROT.id, 0 )" title="Count of Rotovirus instances" primary="false" />\n<!--                    <column id="rotrefused" name="IFNULL( REF_rot.refused, \'No\' )" title="Rotovirus Refused Status" primary="false" />\n-->\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->				\n			SELECT  \n			*\n			FROM demographic d\n		\n			-- 4 instances of - DTaP-IPV-Hib - Diphtheria, Tetanus, Pertussis, Polio, Haemophilus influenzae type B\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${dTaPIPVHib}\n				AND p.deleted = 0\n				AND p.refused = 0 \n				GROUP BY p.demographic_no\n			) DTaP\n			ON (d.demographic_no = DTaP.demographic_no)\n		\n			 -- WITH  a refusal of any of the following - DTaP-IPV-Hib,  Pneumococcal conjugate,  Meningococcal Conjugate C,  Measles, Mumps, Rubella or Var  - Varicella\n                        -- in the past 12 months\n                        -- refused in the past 12 months\n                        LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${dTaPIPVHib}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) DTaP_r\n                        ON (d.demographic_no = DTaP_r.demographic_no)\n\n			-- 3 instances of - Pneu-C-13  - Pneumococcal Conjugate 13\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${pneumococcal}\n				AND p.deleted = 0\n				AND p.refused = 0 \n				GROUP BY p.demographic_no\n			) PNEU\n			ON (d.demographic_no = PNEU.demographic_no)\n		\n		 	LEFT JOIN (\n                              	SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${pneumococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) PNEU_r\n                        ON (d.demographic_no = PNEU_r.demographic_no)\n		\n			-- 1 instance of - Men-C-C  - Meningococcal Conjugate \n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${meningococcal}\n				AND p.deleted = 0\n				AND p.refused = 0\n				GROUP BY p.demographic_no \n			) MC\n			ON (d.demographic_no = MC.demographic_no)\n		\n			LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${meningococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) MC_r\n                        ON (d.demographic_no = MC_r.demographic_no)\n\n			-- 1 instance of - MMR  - Measles, Mumps, Rubella\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n				AND p.deleted = 0\n				AND p.refused = 0\n				GROUP BY p.demographic_no\n			) MM\n			ON (d.demographic_no = MM.demographic_no)\n		\n			LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) MM_r\n                        ON (d.demographic_no = MM_r.demographic_no)\n\n			-- 1 instance of - Var  - Varicella\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2}\n				AND p.deleted = 0\n				AND p.refused = 0\n				GROUP BY p.demographic_no\n			) VZ\n			ON (d.demographic_no = VZ.demographic_no)\n			\n			 LEFT JOIN (\n                                SELECT p.demographic_no, COUNT(p.id) AS id\n                                FROM preventions p\n                                WHERE p.prevention_type = ${varicella} OR p.prevention_type = ${varicella2}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                AND p.prevention_date > ${lowerLimit.date}\n                                GROUP BY p.demographic_no\n                        ) VZ_r\n                        ON (d.demographic_no = VZ_r.demographic_no)\n			-- instances of - Rot-1  - Rotavirus\n			LEFT JOIN ( \n				SELECT p.demographic_no, COUNT(p.id) AS id\n				FROM preventions p		 \n				WHERE p.prevention_type LIKE ${rotavirus}\n				AND p.deleted = 0\n				AND p.refused = 0\n 				GROUP BY p.demographic_no\n			) ROT\n			ON (d.demographic_no = ROT.demographic_no)\n		\n			-- WITH  a refusal of any of the following - DTaP-IPV-Hib,  Pneumococcal conjugate,  Meningococcal Conjugate C,  Measles, Mumps, Rubella or Var  - Varicella\n			\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${dTaPIPVHib}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_dtap\n                        ON (d.demographic_no = REF_dtap.demographic_no)\n	\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${pneumococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_pneu\n                        ON (d.demographic_no = REF_pneu.demographic_no)\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${meningococcal}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_men\n                        ON (d.demographic_no = REF_men.demographic_no)\n		\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${varicella}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_var\n                        ON (d.demographic_no = REF_var.demographic_no)\n\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${measlesMumpsRubella}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_mmr\n                        ON (d.demographic_no = REF_mmr.demographic_no)\n\n			 LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${varicella}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_vz\n                        ON (d.demographic_no = REF_vz.demographic_no)\n\n			LEFT JOIN (\n                                SELECT p.demographic_no, \'Yes\' AS refused\n                                FROM preventions p\n                                WHERE p.prevention_type LIKE ${rotavirus}\n                                AND p.deleted = 0\n                                AND p.refused = 1\n                                GROUP BY p.demographic_no\n                        ) REF_rot\n                        ON (d.demographic_no = REF_rot.demographic_no)\n\n			-- PATIENTS BETWEEN 30 TO 42 MONTHS OLD\n			WHERE d.patient_status = ${pstatus}\n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			AND CURRENT_DATE() >= DATE_ADD(DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), INTERVAL ${lowerLimit.age} MONTH) \n			AND DATE_ADD(DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), INTERVAL ${upperLimit.age} MONTH) >= CURRENT_DATE()	\n                        AND DTaP.id>=4 AND PNEU.id>=3 AND MC.id>=1 AND MM.id>=1 AND VZ.id>=1\n\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName>OntarioMD Childhood Immunization Recall</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% Complete" toLabel="Complete"/>\n		<sharedMapping fromLabel="% Incomplete" toLabel="Incomplete"/>\n		<sharedMapping fromLabel="% Declined one or more" toLabel="Declined one or more"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD Childhood Immunization Recall');

        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId6, 'Consider Diabetes', 'CDM', 'Diabetes', 'OSCAREMR', '2022-03-03', '# of active patients with diabetes ICD9: 250 ICD10: E10,E11 SNOMED:DB-610 SNOMED-CT: 46635009, 44054006, 73211009', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>Trinity Healthcare Technologies for Oscar EMR</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>Diabetes</subCategory>\n		<name>Consider Diabetes</name>\n		<metricSetName>OntarioMD DM Identification</metricSetName>\n		<metricLabel></metricLabel>\n		<definition># of active patients with diabetes ICD9: 250 ICD10: E10,E11 SNOMED:DB-610 SNOMED-CT: 46635009, 44054006, 73211009</definition>\n		<framework>OSCAR EMR</framework>\n		<frameworkVersion>2022-03-03</frameworkVersion>\n		<graphType>bar</graphType>\n		<notes></notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					( an individual providerNo, or provider range ) ie: value="370, 1001" \n					"all" ie: value="all" including null.\n					"loggedInProvider" ie:\n				Default is "loggedInProvider"\n				Use this parameter in the query as ${provider}\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="a1c" name="a1c" value="\'A1C\'" />\n			<parameter id="dxcodes" name="Dx Research Codes" value="250,E10,E11,DB-610,46635009,44054006,73211009" />\n			<parameter id="billingcode" name="Billing Diagnosis " value="\'250\'" />\n			\n			<parameter id="dxcodes2" name="Dx Research Codes" value="7902,DB-61200,9414007" />\n			<parameter id="dxcodes3" name="Dx Research Codes" value="249,2564,6488,7751,79029" />\n			\n			<parameter id="documentation1" name="documentation1" value="\'%Pre-diabet%\'" />\n			<parameter id="documentation2" name="documentation2" value="REGEXP \'[[:&lt;:]]Prediabet[[:>:]]\'" />\n			<parameter id="documentation3" name="documentation3" value="\'%Pre diabet%\'" />\n			<parameter id="documentation4" name="documentation4" value="\'%Borderline diabet%\'" />\n			<parameter id="documentation5" name="documentation5" value="\'%Impaired Glucose%\'" />\n			<parameter id="documentation6" name="documentation6" value="\'%Impaired Fasting%\'" />\n			<parameter id="documentation7" name="documentation7" value="REGEXP \'[[:&lt;:]]IGT[[:>:]]\'" />\n			<parameter id="documentation8" name="documentation8" value="REGEXP \'[[:&lt;:]]IFG[[:>:]]\'" />\n			<parameter id="documentation9" name="documentation9" value="REGEXP \'[[:&lt;:]]gest[[:>:]]\'" />\n			<parameter id="documentation10" name="documentation10" value="REGEXP \'[[:&lt;:]]PCOS[[:>:]]\'" />\n			<parameter id="documentation11" name="documentation11" value="\'%polycystic ovar%\'" />\n			\n			<parameter id="documentation13" name="documentation13" value="REGEXP \'[[:&lt;:]]diabet[[:>:]]\'" />\n			<parameter id="documentation14" name="documentation14" value="REGEXP \'[[:&lt;:]]DM[[:>:]]\'" />\n			<parameter id="documentation15" name="documentation15" value="REGEXP \'[[:&lt;:]]DM2[[:>:]]\'" />\n			<parameter id="documentation16" name="documentation16" value="REGEXP \'[[:&lt;:]]t2d[[:>:]]\'" />\n\n			<parameter id="rx" name="Active Prescriptions Drug Name" value="\'Acarbose|Glibenclamide|Gliclazide|Glimepiride|insulin|Metformin|Sitagliptin|Tolbutamide\'" /> \n\n			<parameter id="loinc" name="LOINC Code" value="17856-6,4548-4,17855-8,71875-9" />\n		</params>\n		<range>\n			<lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n			\n			<lowerLimit id="a1c" label="Min HbA1C Result" name="A1c Tests" value="6.5" />\n		</range>\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT \n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx > 0, 1, 0) ) \n				, 0) AS "Diabetes Coded in PROB or HPH",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND fin.note1 = 0 AND fin.dx2 = 0 AND fin.dx3 = 0 AND fin.note2 > 0, 1, 0) ) \n				, 0) AS "Documented as text but not coded",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND fin.note1 = 0 AND fin.dx2 = 0 AND fin.dx3 = 0 AND fin.bill >= 2 , 1, 0) ) \n				, 0) AS "Dx in 2+ bills",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND fin.note1 = 0 AND fin.dx2 = 0 AND fin.dx3 = 0 AND ( fin.a1c > ${lowerLimit.a1c} OR fin.a1c_m > ${lowerLimit.a1c} ) , 1, 0) ) \n				, 0) AS "HbA1C &gt; 6.9",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND fin.note1 = 0 AND fin.dx2 = 0 AND fin.dx3 = 0 AND fin.drug > 0, 1, 0) ) \n				, 0) AS "Medications present",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND (fin.note3 > 0 OR fin.dx3 > 0), 1, 0) ) \n				, 0) AS "Other Conditions",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND (fin.note4 > 0 OR fin.dx2 > 0), 1, 0) ) \n				, 0) AS "Pre-Diabetes",\n				\n				IF ( COUNT(fin.patient) > 0,\n				SUM( IF( fin.dx = 0 AND fin.note1 = 0 AND fin.dx2 = 0 AND fin.dx3 = 0 AND (fin.note2 > 0 OR fin.bill >= 2 OR fin.a1c > ${lowerLimit.a1c} OR fin.a1c_m > ${lowerLimit.a1c} OR fin.drug > 0) , 1, 0) ) \n				, 0) AS "Total"\n				\n			FROM (\n				SELECT \n				\n					d.demographic_no AS patient,\n					IFNULL(dxr.dxresearch_no, 0) AS dx,\n					A1C.dataField AS a1c,\n					A1C_m.dataField AS a1c_m,\n					IFNULL(dxr2.dxresearch_no, 0) AS dx2,\n					IFNULL(dxr3.dxresearch_no, 0) AS dx3,\n					IFNULL(NT1.note_id, 0) AS note1,\n					IFNULL(NT2.note_id, 0) AS note2,\n					IFNULL(NT3.note_id, 0) AS note3,\n					IFNULL(NT4.note_id, 0) AS note4,\n					IFNULL(BILL.id, 0) AS bill,\n					IFNULL(RX.drugid, 0) AS drug\n					\n				FROM demographic d \n				\n				-- Look for possible HBA1C results in measurements.\n				LEFT JOIN (\n					SELECT m2.demographicNo, m2.type, MAX(m2.dataField) AS dataField\n                                        FROM measurements m2\n                                        JOIN measurementsExt me\n                                        ON m2.id = me.measurement_id\n                                        JOIN measurementMap mm\n                                        ON me.val = mm.`name`\n                                        WHERE me.keyval = "name"\n                                        AND mm.loinc_code IN ${loinc}\n                                        AND DATE(m2.dateObserved) > ${lowerLimit.date24}\n                                        GROUP BY m2.demographicNo, m2.type\n	\n				) A1C\n				ON (d.demographic_no = A1C.demographicNo)\n				\n				LEFT JOIN (\n					SELECT demographicNo, MAX(dataField) as dataField\n                                        FROM measurements\n                                        WHERE type = ${a1c}\n                                        AND demographicNo > 0\n                                        AND dateObserved > ${lowerLimit.date24}\n                                        GROUP BY demographicNo\n\n				) A1C_m\n                                ON (d.demographic_no = A1C_m.demographicNo)\n\n\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no \n					FROM dxresearch \n					WHERE demographic_no>0 \n					AND dxresearch_code IN ${dxcodes}\n					AND `status` = "A"\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				)dxr				\n				ON ( d.demographic_no = dxr.demographic_no)\n				\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no \n					FROM dxresearch \n					WHERE demographic_no>0 \n					AND dxresearch_code IN ${dxcodes2}\n					AND `status` = "A"\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				)dxr2			\n				ON ( d.demographic_no = dxr2.demographic_no)\n				\n				LEFT JOIN (\n					SELECT dxresearch_no, demographic_no \n					FROM dxresearch \n					WHERE demographic_no>0 \n					AND dxresearch_code IN ${dxcodes3}\n					AND `status` = "A"\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				)dxr3			\n				ON ( d.demographic_no = dxr3.demographic_no)\n				\n				-- Notes\n				LEFT JOIN(\n					SELECT n.demographic_no, n.note_id\n					FROM casemgmt_note n\n					INNER JOIN (\n						SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n						FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n						WHERE c.issue_id = i.issue_id\n						AND ino.id = c.id\n						AND n.note_id = ino.note_id\n						AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n						GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n					) nn\n					ON n.note_id = nn.note_id\n					AND n.archived = 0\n					AND ( n.note like ${documentation1} OR\n                                                n.note ${documentation2} OR\n                                                n.note LIKE ${documentation3} OR\n                                                n.note LIKE ${documentation4} OR\n                                                n.note LIKE ${documentation5} OR\n                                                n.note LIKE ${documentation6} OR\n                                                n.note ${documentation7} OR\n                                                n.note ${documentation8} OR\n                                                n.note ${documentation9} OR\n                                                n.note ${documentation10} OR\n                                                n.note LIKE ${documentation11} )\n\n					GROUP BY n.demographic_no\n				)NT1\n				ON (d.demographic_no = NT1.demographic_no)\n				\n				-- Notes\n				LEFT JOIN(\n					SELECT n.demographic_no, n.note_id\n					FROM casemgmt_note n\n					INNER JOIN (\n						SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n						FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n						WHERE c.issue_id = i.issue_id\n						AND ino.id = c.id\n						AND n.note_id = ino.note_id\n						AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n						GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n					) nn\n					ON n.note_id = nn.note_id\n					AND n.archived = 0\n					AND ( n.note ${documentation13} OR\n						n.note ${documentation14} OR\n						n.note ${documentation15} OR\n						n.note ${documentation16} )\n\n					GROUP BY n.demographic_no\n				)NT2\n				ON (d.demographic_no = NT2.demographic_no)\n				\n\n\n				 LEFT JOIN(\n                                        SELECT n.demographic_no, n.note_id\n                                        FROM casemgmt_note n\n                                        INNER JOIN (\n                                                SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                                FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                                WHERE c.issue_id = i.issue_id\n                                                AND ino.id = c.id\n                                                AND n.note_id = ino.note_id\n                                                AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n                                                GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                        ) nn\n                                        ON n.note_id = nn.note_id\n                                        AND n.archived = 0\n                                        AND ( n.note ${documentation9} OR\n                                                n.note ${documentation10} OR\n                                                n.note LIKE ${documentation11} )\n\n                                        GROUP BY n.demographic_no\n                                )NT3\n                                ON (d.demographic_no = NT3.demographic_no)\n\n\n				LEFT JOIN(\n                                        SELECT n.demographic_no, n.note_id\n                                        FROM casemgmt_note n\n                                        INNER JOIN (\n                                                SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                                FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                                WHERE c.issue_id = i.issue_id\n                                                AND ino.id = c.id\n                                                AND n.note_id = ino.note_id\n                                                AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n                                                GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                        ) nn\n                                        ON n.note_id = nn.note_id\n                                        AND n.archived = 0\n                                        AND ( n.note like ${documentation1} OR\n                                                n.note ${documentation2} OR\n                                                n.note LIKE ${documentation3} OR\n                                                n.note LIKE ${documentation4} OR\n                                                n.note LIKE ${documentation5} OR\n                                                n.note LIKE ${documentation6} OR\n                                                n.note ${documentation7} OR\n                                                n.note ${documentation8} )\n\n                                        GROUP BY n.demographic_no\n                                )NT4\n                                ON (d.demographic_no = NT4.demographic_no)\n\n				-- WITH 2 or more billing diagnosis codes of 401, 402,403\n				LEFT JOIN (\n					SELECT COUNT(distinct boc.id) AS id, boc.demographic_no\n					FROM billing_on_cheader1 boc, billing_on_item boi\n					WHERE boc.id = boi.ch1_id \n					AND boc.status != "D"\n					AND boi.status != "D"\n					AND boi.dx = ${billingcode} \n					GROUP BY boc.demographic_no \n				) BILL\n				ON (d.demographic_no = BILL.demographic_no)\n				\n				-- WITH an active prescription\n				LEFT JOIN (\n					SELECT demographic_no, drugid\n					FROM drugs\n					WHERE ( BN RLIKE ${rx} OR customName RLIKE ${rx} )\n					AND demographic_no > 0\n					AND archived = 0\n					GROUP BY demographic_no HAVING COUNT( demographic_no  ) > -1\n				) RX\n				ON (d.demographic_no = RX.demographic_no)\n				\n				WHERE d.patient_status = ${pstatus} \n				AND d.provider_no = \'${provider}\'\n				AND d.demographic_no > 0 \n				\n				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n			) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="provider_no" value="loggedInProvider" />\n			<parameter id="pstatus" name="Patient Status" value="\'AC\'" />		\n			<parameter id="a1c" name="a1c" value="\'A1C\'" />\n			<parameter id="dxcodes" name="Dx Research Codes" value="250,E10,E11,DB-610,46635009,44054006,73211009" />\n			<parameter id="billingcode" name="Billing Diagnosis " value="\'250\'" />\n			\n			<parameter id="dxcodes2" name="Dx Research Codes" value="7902,DB-61200,9414007" />\n                        <parameter id="dxcodes3" name="Dx Research Codes" value="249,2564,6488,7751,79029" />\n\n			<parameter id="documentation1" name="documentation1" value="\'%Pre-diabet%\'" />\n                        <parameter id="documentation2" name="documentation2" value="REGEXP \'[[:&lt;:]]Prediabet[[:>:]]\'" />\n                        <parameter id="documentation3" name="documentation3" value="\'%Pre diabet%\'" />\n                        <parameter id="documentation4" name="documentation4" value="\'%Borderline diabet%\'" />\n                        <parameter id="documentation5" name="documentation5" value="\'%Impaired Glucose%\'" />\n                        <parameter id="documentation6" name="documentation6" value="\'%Impaired Fasting%\'" />\n                        <parameter id="documentation7" name="documentation7" value="REGEXP \'[[:&lt;:]]IGT[[:>:]]\'" />\n                        <parameter id="documentation8" name="documentation8" value="REGEXP \'[[:&lt;:]]IFG[[:>:]]\'" />\n                        <parameter id="documentation9" name="documentation9" value="REGEXP \'[[:&lt;:]]gest[[:>:]]\'" />\n                        <parameter id="documentation10" name="documentation10" value="REGEXP \'[[:&lt;:]]PCOS[[:>:]]\'" />\n                        <parameter id="documentation11" name="documentation11" value="\'%polycystic ovar%\'" />\n\n                        <parameter id="documentation13" name="documentation13" value="REGEXP \'[[:&lt;:]]diabet[[:>:]]\'" />\n                        <parameter id="documentation14" name="documentation14" value="REGEXP \'[[:&lt;:]]DM[[:>:]]\'" />\n                        <parameter id="documentation15" name="documentation15" value="REGEXP \'[[:&lt;:]]DM2[[:>:]]\'" />\n                        <parameter id="documentation16" name="documentation16" value="REGEXP \'[[:&lt;:]]t2d[[:>:]]\'" />\n\n			<parameter id="rx" name="Active Prescriptions Drug Name" value="\'Acarbose|Glibenclamide|Gliclazide|Glimepiride|insulin|Metformin|Sitagliptin|Tolbutamide\'" /> \n\n			<parameter id="loinc" name="LOINC Code" value="17856-6,4548-4,17855-8,71875-9" />\n		</params>\n		<range>\n                        <lowerLimit id="date24" label="24 Months" name="Date24" value="DATE_SUB( NOW(), INTERVAL 24 MONTH )" />\n	\n			<lowerLimit id="a1c" label="Min HbA1C Result" name="A1c Tests" value="6.5" />\n		</range>\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n			<column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n			<column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n			<column id="dxcode" title="Diabetes Diagnoses Codes Recorded in Disease Registry" name="IFNULL(dxr.dxresearch_code, \'\')" primary="false" />\n\n			<column id="dxcodeExc" title="Diabetes Exclusion Diagnoses Codes Recorded in Disease Registry" name="IFNULL(dxr3.dxresearch_code, \'\')" primary="false" />\n                        <column id="diabetesExc_concerns" title="Diabetes Exclusion Text Recorded in Ongoing Concerns" name="IFNULL(NT3_c.note, \'\')" primary="false" />\n                        <column id="diabetesExc_medicalhistory" title="Diabetes Exclusion Text Recorded in Medical History" name="IFNULL(NT3_m.note, \'\')" primary="false" />\n\n			<column id="dxcodePreD" title="Pre-diabetes Diagnoses Codes Recorded in Disease Registry" name="IFNULL(dxr2.dxresearch_code, \'\')" primary="false" />\n                        <column id="preDiabetesConcersn" title="Pre-diabetes Exclusion Text Recorded in Ongoing Concerns" name="IFNULL(NT4_c.note, \'\')" primary="false" />\n                        <column id="preDiabetesMedicalhistory" title="Pre-diabetes Exclusion Text Recorded in Medical History" name="IFNULL(NT4_m.note, \'\')" primary="false" />\n\n                        <column id="diabetes_concerns" title="Diabetes Text Recorded in Ongoing Concerns" name="IFNULL(NT2_c.note, \'\')" primary="false" />\n                        <column id="diabetes_medicalhistory" title="Diabetes Text Recorded in Medical History" name="IFNULL(NT2_m.note, \'\')" primary="false" />\n\n                        <column id="bill" title="Count of Bills Containing Code 250" name="IFNULL(BILL.id, \'\')" primary="false" />\n\n                        <column id="a1c" title="Highest HbA1c Test Value Over Last 2 Years" name="IFNULL(A1C_m.dataField, IFNULL(A1C.dataField,\'\') )" primary="false" />\n                        <column id="a1cDate" title="Date of Highest HbA1c Test Value Over Last 2 Years (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( A1C_m.dateObserved, \'%m-%d-%Y\'), IFNULL( DATE_FORMAT( A1C.dateObserved, \'%m-%d-%Y\'),\'\') )" primary="false" />\n                        <column id="rx" title="Name(s) of Active Prescriptions Used for Diabetes Management" name="IFNULL(RX.rxnames, \'\')" primary="false" />\n\n		</displayColumns>\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="firstName" name="d.first_name" title="First Name" primary="false" />\n			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Patient DOB (mm-dd-yyyy)" primary="false" />\n                        <column id="age" name="FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Patient Age" primary="false" />\n                        <column id="phonenumber" name="IFNULL( d.phone, \'\')" title="Patient Phone Number" primary="false" />\n\n			<column id="dxcode" title="Diabetes Diagnoses Codes Recorded in Disease Registry" name="IFNULL(dxr.dxresearch_code, \'\')" primary="false" />\n                        <column id="dxcodeExc" title="Diabetes Exclusion Diagnoses Codes Recorded in Disease Registry" name="IFNULL(dxr3.dxresearch_code, \'\')" primary="false" />\n                        <column id="diabetesExc_concerns" title="Diabetes Exclusion Text Recorded in Ongoing Concerns" name="IFNULL(NT3_c.note, \'\')" primary="false" />\n                        <column id="diabetesExc_medicalhistory" title="Diabetes Exclusion Text Recorded in Medical History" name="IFNULL(NT3_m.note, \'\')" primary="false" />\n\n                        <column id="dxcodePreD" title="Pre-diabetes Diagnoses Codes Recorded in Disease Registry" name="IFNULL(dxr2.dxresearch_code, \'\')" primary="false" />\n                        <column id="preDiabetesConcersn" title="Pre-diabetes Exclusion Text Recorded in Ongoing Concerns" name="IFNULL(NT4_c.note, \'\')" primary="false" />\n                        <column id="preDiabetesMedicalhistory" title="Pre-diabetes Exclusion Text Recorded in Medical History" name="IFNULL(NT4_m.note, \'\')" primary="false" />\n\n                        <column id="diabetes_concerns" title="Diabetes Text Recorded in Ongoing Concerns" name="IFNULL(NT2_c.note, \'\')" primary="false" />\n                        <column id="diabetes_medicalhistory" title="Diabetes Text Recorded in Medical History" name="IFNULL(NT2_m.note, \'\')" primary="false" />\n\n                        <column id="bill" title="Count of Bills Containing Code 250" name="IFNULL(BILL.id, \'\')" primary="false" />\n                       \n		        <column id="a1c" title="Highest HbA1c Test Value Over Last 2 Years" name="IFNULL(A1C_m.dataField, IFNULL(A1C.dataField,\'\') )" primary="false" />\n                        <column id="a1cDate" title="Date of Highest HbA1c Test Value Over Last 2 Years (mm-dd-yyyy)" name="IFNULL( DATE_FORMAT( A1C_m.dateObserved, \'%m-%d-%Y\'), IFNULL( DATE_FORMAT( A1C.dateObserved, \'%m-%d-%Y\'),\'\') )" primary="false" />\n\n                        <column id="rx" title="Name(s) of Active Prescriptions Used for Diabetes Management" name="IFNULL(RX.rxnames, \'\')" primary="false" />\n	\n		</exportColumns>\n		<drillDownActions>\n			<action id="tickler" name="Tickler"/>\n			<action id="dxUpdate" name="Disease Registry Update" value="250"/>\n			<action id="demoExcl" name="Patient Exclusion"/>\n		</drillDownActions>\n<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT \n			*\n			FROM demographic d \n			\n			-- Look for possible HBA1C results in measurements.\n			LEFT JOIN (\n                                SELECT m4.demographicNo, m4.id, m4.dataField, m4.dateObserved\n                                FROM measurements m4\n				RIGHT JOIN (\n                                	SELECT m.demographicNo, MAX(m.id) AS id, m.dataField\n                                	FROM measurements m\n                                	RIGHT JOIN (\n                                        	SELECT m2.demographicNo, m2.type, MAX(m2.dataField) AS dataField\n                                        	FROM measurements m2\n                                        	JOIN measurementsExt me\n                                        	ON m2.id = me.measurement_id\n                                        	JOIN measurementMap mm\n                                        	ON me.val = mm.`name`\n                                        	WHERE me.keyval = "name"\n                                        	AND mm.loinc_code IN ${loinc}\n						AND DATE(m2.dateObserved) > ${lowerLimit.date24}\n                                        	GROUP BY m2.demographicNo, m2.type\n                                	) m1\n                                	ON m.type = m1.type\n                                	AND m.dataField = m1.dataField\n                                	AND m.demographicNo = m1.demographicNo\n					AND DATE(m.dateObserved) > ${lowerLimit.date24}\n                                	GROUP BY m.demographicNo, m.dataField\n				) m3\n				ON m4.id = m3.id\n\n                        ) A1C\n                        ON (d.demographic_no = A1C.demographicNo)\n\n			LEFT JOIN (\n                                SELECT m4.id, m4.dataField, m4.demographicNo, m4.dateObserved\n				FROM measurements m4\n				RIGHT JOIN (\n                                	SELECT MAX(id) AS id, m1.dataField, m1.demographicNo\n                                	FROM measurements m1\n                                	RIGHT JOIN (\n                                        	SELECT m.demographicNo, m.type, MAX(m.dataField) as dataField\n                                        	FROM measurements m, demographic d\n                                        	WHERE m.demographicNo = d.demographic_no\n                                        	AND d.provider_no = \'${provider}\'\n                                        	AND m.type = ${a1c}\n						AND DATE(m.dateObserved) > ${lowerLimit.date24}\n                                        	AND m.demographicNo > 0\n                                        	GROUP BY m.demographicNo\n                                	) m2\n                                	ON m1.dataField = m2.dataField\n                                	AND m1.demographicNo = m2.demographicNo\n                                	AND m1.type = ${a1c}\n					AND DATE(m1.dateObserved) > ${lowerLimit.date24}	\n                                	GROUP BY m1.demographicNo, m1.dataField \n				) m3\n				ON m4.id = m3.id\n\n                        ) A1C_m\n                        ON (d.demographic_no = A1C_m.demographicNo)\n\n			LEFT JOIN (\n				SELECT demographic_no, GROUP_CONCAT(distinct dxresearch_code) as dxresearch_code\n				FROM dxresearch \n				WHERE demographic_no>0 \n				AND dxresearch_code IN ${dxcodes}\n				AND `status` = "A"\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr				\n			ON ( d.demographic_no = dxr.demographic_no)\n			\n			LEFT JOIN (\n				SELECT demographic_no, GROUP_CONCAT(distinct dxresearch_code) as dxresearch_code\n				FROM dxresearch \n				WHERE demographic_no>0 \n				AND dxresearch_code IN ${dxcodes2}\n				AND `status` = "A"\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr2			\n			ON ( d.demographic_no = dxr2.demographic_no)\n			\n			LEFT JOIN (\n				SELECT demographic_no, GROUP_CONCAT(distinct dxresearch_code) as dxresearch_code\n				FROM dxresearch \n				WHERE demographic_no>0 \n				AND dxresearch_code IN ${dxcodes3}\n				AND `status` = "A"\n				GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n			)dxr3			\n			ON ( d.demographic_no = dxr3.demographic_no)\n			\n			-- Notes\n			LEFT JOIN(\n                                SELECT n.demographic_no, n.note_id AS id\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n					AND ( i.code = \'Concerns\' OR i.code=\'MedHistory\' )\n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note like ${documentation1} OR\n                                        n.note ${documentation2} OR\n                                        n.note LIKE ${documentation3} OR\n                                        n.note LIKE ${documentation4} OR\n                                        n.note LIKE ${documentation5} OR\n                                        n.note LIKE ${documentation6} OR\n                                        n.note ${documentation7} OR\n                                        n.note ${documentation8} OR\n                                        n.note ${documentation9} OR\n                                        n.note ${documentation10} OR\n                                        n.note LIKE ${documentation11} )\n\n                                GROUP BY n.demographic_no\n                        )NT1\n                        ON (d.demographic_no = NT1.demographic_no)\n\n	\n			LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code = \'Concerns\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n				AND ( n.note ${documentation13} OR\n                                        n.note ${documentation14} OR\n                                        n.note ${documentation15} OR\n                                        n.note ${documentation16} )\n                                GROUP BY n.demographic_no\n                        )NT2_c\n                        ON (d.demographic_no = NT2_c.demographic_no)\n\n			LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code=\'MedHistory\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n				AND ( n.note ${documentation13} OR\n                                        n.note ${documentation14} OR\n                                        n.note ${documentation15} OR\n                                        n.note ${documentation16} )\n\n                                GROUP BY n.demographic_no\n                        )NT2_m\n                        ON (d.demographic_no = NT2_m.demographic_no)\n	\n\n			LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code = \'Concerns\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note ${documentation9} OR\n                                        n.note ${documentation10} OR\n                                        n.note LIKE ${documentation11} )\n\n                                GROUP BY n.demographic_no\n                        ) NT3_c\n                        ON (d.demographic_no = NT3_c.demographic_no)\n\n\n			 LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code=\'MedHistory\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note ${documentation9} OR\n                                        n.note ${documentation10} OR\n                                        n.note LIKE ${documentation11} )\n\n                                GROUP BY n.demographic_no\n                        ) NT3_m\n                        ON (d.demographic_no = NT3_m.demographic_no)\n\n			 LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code = \'Concerns\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note like ${documentation1} OR\n					n.note ${documentation2} OR\n                                        n.note LIKE ${documentation3} OR\n                                        n.note LIKE ${documentation4} OR\n                                        n.note LIKE ${documentation5} OR\n                                        n.note LIKE ${documentation6} OR\n                                        n.note ${documentation7} OR\n                                        n.note ${documentation8} )\n\n                                GROUP BY n.demographic_no\n                        )NT4_c\n                        ON (d.demographic_no = NT4_c.demographic_no)\n	\n\n			LEFT JOIN(\n                                SELECT n.demographic_no, GROUP_CONCAT(n.note) as note\n                                FROM casemgmt_note n\n                                INNER JOIN (\n                                        SELECT max(n.note_id) AS note_id, n.demographic_no, n.uuid\n                                        FROM casemgmt_note n, casemgmt_issue c, issue i, casemgmt_issue_notes ino\n                                        WHERE c.issue_id = i.issue_id\n                                        AND ino.id = c.id\n                                        AND n.note_id = ino.note_id\n                                        AND i.code=\'MedHistory\' \n\n                                        GROUP BY n.demographic_no, n.uuid HAVING COUNT(n.demographic_no) > -1\n                                ) nn\n                                ON n.note_id = nn.note_id\n                                AND n.archived = 0\n                                AND ( n.note like ${documentation1} OR\n					n.note ${documentation2} OR\n                                        n.note LIKE ${documentation3} OR\n                                        n.note LIKE ${documentation4} OR\n                                        n.note LIKE ${documentation5} OR\n                                        n.note LIKE ${documentation6} OR\n                                        n.note ${documentation7} OR\n                                        n.note ${documentation8} )\n\n                                GROUP BY n.demographic_no\n                        )NT4_m\n                        ON (d.demographic_no = NT4_m.demographic_no)\n\n			-- WITH 2 or more billing diagnosis codes of 401, 402,403\n			LEFT JOIN (\n				SELECT COUNT(DISTINCT boc.id) AS id, boc.demographic_no\n				FROM billing_on_cheader1 boc, billing_on_item boi\n				WHERE boc.id = boi.ch1_id \n				AND boc.status != "D"\n				AND boi.status != "D"\n				AND boi.dx = ${billingcode} \n				GROUP BY boc.demographic_no \n			) BILL\n			ON (d.demographic_no = BILL.demographic_no)\n			\n			-- WITH an active prescription\n			LEFT JOIN (\n				SELECT demographic_no, GROUP_CONCAT(DISTINCT BN) as rxnames\n				FROM drugs\n				WHERE ( BN RLIKE ${rx} OR customName RLIKE ${rx} )\n				AND demographic_no > 0\n				AND archived = 0\n				GROUP BY demographic_no HAVING COUNT( demographic_no  ) > -1\n			) RX\n			ON (d.demographic_no = RX.demographic_no)\n\n			WHERE d.patient_status = ${pstatus}  \n			AND d.provider_no = \'${provider}\'\n			AND d.demographic_no > 0 \n			\n			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1\n		</query>\n	</drillDownQuery>\n	<shared>true</shared>\n	<sharedMetricSetName>OntarioMD DM Identification</sharedMetricSetName>\n	<sharedMetricDataId>Status</sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel="% Diabetes Coded in PROB or HPH" toLabel="Diabetes Coded in PROB or HPH"/>\n		<sharedMapping fromLabel="% Documented as text but not coded" toLabel="Consider Diabetes: Documented as text but not coded"/>\n		<sharedMapping fromLabel="% Dx in 2+ bills" toLabel="Consider Diabetes: Dx in 2+ bills"/>\n		<sharedMapping fromLabel="% HbA1C &gt; 6.9" toLabel="Consider Diabetes: HbA1C &gt; 6.9%"/>\n		<sharedMapping fromLabel="% Medications present" toLabel="Consider Diabetes: Medications present"/>\n		<sharedMapping fromLabel="% Other Conditions" toLabel="Diabetes Exclusion: Other Conditions"/>\n		<sharedMapping fromLabel="% Pre-Diabetes" toLabel="Diabetes Exclusion: Pre-Diabetes"/>\n		<sharedMapping fromLabel="% Total" toLabel="Consider Diabetes: Total"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n', b'1', b'0', 1, '', 'OntarioMD DM Identification');
        INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricLabel`, `metricSetName`) VALUES
        (@dashboardId9, 'Consider COPD', 'CDM', 'COPD', 'OSCAR EMR', '2022-03-03', 'Patients with copd dx in 2+ bills or 2+ visit encounters within last 3 years or FEV1/FVC < 0.7 OR Current Tiotroprium medication\n		', 'ON', '<?xml version="1.0" encoding="UTF-8"?>\n<indicatorTemplateXML>\n	<author>OSCAR BC</author>\n	<uid></uid>\n	<heading>\n		<category>CDM (Click on the chart to see details)</category>\n		<subCategory>COPD</subCategory>\n		<name>Consider COPD</name>\n		<definition>\n			Patients with copd dx in 2+ bills or 2+ visit encounters within last 3 years or FEV1/FVC &lt; 0.7 OR Current Tiotroprium medication\n		</definition>\n		<framework>DoBC CPQI PSP Panel</framework>\n		<frameworkVersion>2017-08-02</frameworkVersion>\n		<notes>\n		  Original adapted for world wide use\n		  i) COPD dx in 2+ bills: "Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND with >= 2 Bills with the ICD9 diagnosis code starting with  490-492, 494, 496 in the last 3 years"\n		  ii) COPD dx in 2+ visits: "Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND with >= 2 Visit Encounters with Snomed diagnosis code 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005 or the ICD9 diagnosis code starting with 490-492, 494, 496 in the last 3 years"\n		  iii) "Patient Status: Active\nAND does not have a Current Problem List/Profile item code of 32398004, 63480004, 61937009, 74417001, 185086009, 49158009, 12295008, 13645005   OR starting with 490-492, 494, 496\nAND has a FEV1 &lt; 0.7 OR Current Anticholinergic Puffer (ATC code R03BBxx)"\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="Provider Number" value="loggedInProvider" />\n			<parameter id="active" name="Active Patients" value="\'AC\'" />\n			<parameter id="dxcodesICD" name="Dx Codes (ICD)" value="490,491,492,494,496" />\n            <parameter id="dxcodesSysICD" name="DX CodeSystem (ICD)" value="\'icd9\'" />\n            <parameter id="dxcodesSnoMed" name="Dx Codes (SnoMed)" value="32398004,63480004,61937009,74417001,185086009,49158009,12295008,13645005" />\n            <parameter id="dxcodesSysSnoMed" name="Dx CodeSystem (SnoMed)" value="\'snomed%\'" />\n			<parameter id="billingCode" name="ICD9 Billing Code" value="490,491,492,494,496" />\n			<parameter id="numOfBills" name="Number of ICD9 490,491,492,494,496 Bills" value="2" />\n			<parameter id="numOfVisits" name="Number of Visit Encounters coded 490,491,492,494,496/ICD9" value="2" />\n			<parameter id="fev1_fvc" name="FEV1/FVC Result" value="0.7" />\n			<parameter id="drug" name="ATC Code/Class" value="\'R03BB%\'" />\n			<parameter id="numOfMeds" name="Anticholenergic Medications" value="1" />\n			<parameter id="excludedPatient" name="Excluded Patient" value="excludedPatient" />\n		</params>\n		<range>\n			<lowerLimit id="billingdate" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 3 YEAR )" />\n			<upperLimit id="billingdate" label="Date Today" name="Date" value="NOW()" />\n			<lowerLimit id="visitdate" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 3 YEAR )" />\n			<upperLimit id="visitdate" label="Date Today" name="Date" value="NOW()" />\n		</range>\n		<query>\nSELECT\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.billcount &gt;= ${numOfBills}) THEN 1 ELSE 0 END ) , 0) AS "Number with COPD dx in ${numOfBills}+ bills",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.visitcount &gt;= ${numOfVisits}) THEN 1 ELSE 0 END ) , 0) AS "Number with COPD dx in ${numOfVisits}+ visits",\n  IF ( COUNT(fin.patient) &gt; 0, SUM( CASE WHEN (fin.dx IS NULL AND fin.medcount &gt;= ${numOfMeds}) THEN 1 ELSE 0 END ) , 0) AS "Number on Antimuscarinic Puffer"\nFROM ( \n  SELECT \n    d.demographic_no AS patient, \n    BILLING.billcount AS billcount,\n    VISIT.visitcount AS visitcount,\n    MEDS.numOfMeds as medcount,\n    dxr.dxresearch_code AS dx,\n    dxr.coding_system AS dxs\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code, 3) IN ${dxcodesICD} AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN ${dxcodesSnoMed} AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n\n  -- Billed 490,491,492,494,496 in last 3 years\n  LEFT JOIN (\n    SELECT boc.demographic_no AS demographic_no, boi.dx AS dxcode1, boi.dx1 AS dxcode2, boi.dx2 AS dxcode3, COUNT(boc.demographic_no) AS billcount\n    FROM billing_on_cheader1 boc, billing_on_item boi\n	WHERE boc.id = boi.ch1_id \n	AND boc.status != "D"\n	AND boi.status != "D"\n    AND boi.dx IN ${billingCode}  \n	AND DATE(boi.service_date) > DATE_SUB( NOW(), INTERVAL 3 YEAR )\n    AND boc.demographic_no > 0\n    GROUP BY boc.demographic_no HAVING COUNT(boc.demographic_no) > -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code,3) IN ${dxcodesICD}) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN ${dxcodesSnoMed})\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n\n\n-- meds\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC LIKE ${drug}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n) fin\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>2022-03-03</version>\n		<params>\n			<parameter id="provider" name="Provider Number" value="loggedInProvider" />\n			<parameter id="active" name="Active Patients" value="\'AC\'" />\n			<parameter id="dxcodesICD" name="Dx Codes (ICD)" value="490,491,492,494,496" />\n                        <parameter id="dxcodesSysICD" name="DX CodeSystem (ICD)" value="\'icd9\'" />\n                        <parameter id="dxcodesSnoMed" name="Dx Codes (SnoMed)" value="32398004,63480004,61937009,74417001,185086009,49158009,12295008,13645005" />\n                        <parameter id="dxcodesSysSnoMed" name="Dx CodeSystem (SnoMed)" value="\'snomed%\'" />\n			<parameter id="billingCode" name="ICD9 Billing Code" value="490,491,492,494,496" />\n			<parameter id="numOfBills" name="Number of ICD9 490,491,492,494,496 Bills" value="2" />\n			<parameter id="numOfVisits" name="Number of Visit Encounters coded 490,491,492,494,496/ICD9" value="2" />\n			<parameter id="fev1_fvc" name="FEV1/FVC Result" value="0.7" />\n			<parameter id="drug" name="ATC Code/Class" value="\'R03BB04\'" />\n			<parameter id="numOfMeds" name="Opioid Medications" value="1" />\n			<parameter id="excludedPatient" name="Excluded Patient" value="excludedPatient" />\n		</params>\n		\n		<range>\n			<lowerLimit id="billingdate" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 3 YEAR )" />\n			<upperLimit id="billingdate" label="Date Today" name="Date" value="NOW()" />\n			<lowerLimit id="visitdate" label="From Date" name="Date" value="DATE_SUB( NOW(), INTERVAL 3 YEAR )" />\n			<upperLimit id="visitdate" label="Date Today" name="Date" value="NOW()" />\n		</range>\n		\n		<displayColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n			<column id="name" name="CONCAT( d.last_name, \', \', d.first_name )" title="Patient Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Date of Birth" primary="false" />\n			<column id="age" name="TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )" title="Age" primary="false" />\n			<column id="billings" name="IFNULL( BILLING.billcount, \'0\')" title="Billings" primary="false" />\n			<column id="visits" name="IFNULL( VISIT.visitcount, \'0\')" title="Visits" primary="false" />\n			<column id="fev1_fvc" name="IFNULL( OBS.fev1_fvc, \'NA\')" title="FEV1" primary="false" />\n			<column id="numOfMeds" name="IFNULL( MEDS.numOfMeds, \'NA\')" title="Tiotroprium Like Medications" primary="false" />		\n			<column id="meds" name="IFNULL( MEDS.BN, \'NA\')" title="Medications" primary="false" />		\n		</displayColumns>\n		\n		<exportColumns>\n			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />\n                        <column id="firstName" name="d.first_name" title="First Name" primary="false" />\n                        <column id="lastName" name="d.last_name" title="Last Name" primary="false" />\n			<column id="dob" name="DATE_FORMAT( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth), \'%m-%d-%Y\' )" title="Date of Birth" primary="false" />\n			<column id="age" name="TIMESTAMPDIFF(YEAR, DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), CURDATE() )" title="Age" primary="false" />\n			<column id="billings" name="IFNULL( BILLING.billcount, \'0\')" title="Billings" primary="false" />\n			<column id="visits" name="IFNULL( VISIT.visitcount, \'0\')" title="Visits" primary="false" />\n			<column id="fev1_fvc" name="IFNULL( OBS.fev1_fvc, \'NA\')" title="FEV1" primary="false" />\n			<column id="numOfMeds" name="IFNULL( MEDS.numOfMeds, \'NA\')" title="Tiotroprium Like Medications" primary="false" />	\n			<column id="meds" name="IFNULL( MEDS.BN, \'NA\')" title="Medications" primary="false" />			\n		</exportColumns>\n		<drillDownActions>\n			<action id="tickler" name="Tickler"/>\n			<action id="dxUpdate" name="Disease Registry Update" value="496"/>\n			<action id="demoExcl" name="Patient Exclusion"/>\n		</drillDownActions>\n		<query>\n  SELECT *	\n  FROM demographic d \n  LEFT JOIN (\n    SELECT demographic_no, dxresearch_code, coding_system, COUNT(dxresearch_code)\n    FROM dxresearch\n    WHERE status=\'A\' AND\n    (\n      (LEFT(dxresearch_code,3) IN ${dxcodesICD} AND coding_system = ${dxcodesSysICD}) OR\n      (dxresearch_code IN ${dxcodesSnoMed} AND coding_system LIKE ${dxcodesSysSnoMed})\n    )\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) dxr\n  ON d.demographic_no = dxr.demographic_no\n  -- Billed 490,491,492,494,496 in last 3 years\n  LEFT JOIN (\n    SELECT boc.demographic_no AS demographic_no, boi.dx AS dxcode1, boi.dx1 AS dxcode2, boi.dx2 AS dxcode3, COUNT(boc.demographic_no) AS billcount\n    FROM billing_on_cheader1 boc, billing_on_item boi\n	WHERE boc.id = boi.ch1_id \n	AND boc.status != "D"\n	AND boi.status != "D"\n    AND boi.dx IN ${billingCode}  \n	AND DATE(boi.service_date) > DATE_SUB( NOW(), INTERVAL 3 YEAR )\n    AND boc.demographic_no > 0\n    GROUP BY boc.demographic_no HAVING COUNT(boc.demographic_no) > -1\n  ) BILLING\n  ON (d.demographic_no = BILLING.demographic_no)  \n  -- Coded dx during visit encounter in last 3 years\n  LEFT JOIN(\n    SELECT ASSIGNED.demographic_no AS demographic_no, observation_date AS visitdate, uuid, COUNT(ASSIGNED.demographic_no) AS visitcount\n    FROM casemgmt_note note\n    INNER JOIN (\n      SELECT note_id, CODED.demo_no AS demographic_no FROM casemgmt_issue_notes\n      INNER JOIN (\n        SELECT ci.id AS id, ci.update_date, ci.demographic_no demo_no FROM issue i\n        INNER JOIN casemgmt_issue ci\n        ON i.issue_id = ci.issue_id\n        WHERE\n	(i.type LIKE ${dxcodesSysICD} AND LEFT(i.code,3) IN ${dxcodesICD}) OR\n	(i.type LIKE ${dxcodesSysSnoMed} AND i.code IN ${dxcodesSnoMed})\n      ) CODED\n      ON (casemgmt_issue_notes.id = CODED.id)\n      ORDER BY CODED.demo_no\n    ) ASSIGNED\n    ON note.note_id = ASSIGNED.note_id AND\n    -- GET LAST REVISION OF NOTE\n    note.note_id= (SELECT MAX(cmn.note_id) FROM casemgmt_note cmn WHERE cmn.uuid = note.uuid) AND\n    DATE(note.observation_date) &gt; ${lowerLimit.visitdate}\n    GROUP BY demographic_no\n    ORDER BY demographic_no\n  ) VISIT\n  ON (d.demographic_no = VISIT.demographic_no)  \n  -- FEV1/FVC measurement\n  LEFT JOIN (\n    SELECT m.demographicNo AS demographic_no, m.dataField AS fev1_fvc, m.dateObserved AS dateObserved\n    FROM measurements m\n    INNER JOIN (\n      SELECT demographicNo, MAX(dateObserved) AS dateObserved\n      FROM measurements\n      WHERE type = \'FEV1\'\n      AND dataField REGEXP \'^[0-9.]+$\'\n      GROUP BY demographicNo\n    ) mlast\n    ON m.demographicNo = mlast.demographicNo\n    WHERE m.type = \'FEV1\'\n    AND m.dataField REGEXP \'^[0-9.]+$\'\n    AND m.dateObserved = mlast.dateObserved\n    AND m.demographicNo &gt; 0\n    GROUP BY m.demographicNo\n  ) OBS\n  ON (d.demographic_no = OBS.demographic_no)\n  LEFT JOIN (\n    SELECT dr.demographic_no, count(DISTINCT dr.atc) AS numOfMeds, dr.BN FROM drugs AS dr\n    WHERE dr.archived = 0 AND dr.ATC LIKE ${drug}\n    AND (dr.long_term OR (dr.rx_date &lt;= NOW() AND (DATE_ADD(dr.rx_date, INTERVAL(DATEDIFF(dr.end_date,dr.rx_date)*1.0) DAY)) >= NOW()))\n    GROUP BY dr.demographic_no\n  ) MEDS\n  ON (d.demographic_no = MEDS.demographic_no)  \n  WHERE d.patient_status LIKE ${active}\n  AND d.demographic_no &gt; 0\n  AND dxr.dxresearch_code IS NULL AND ((BILLING.billcount IS NOT NULL AND BILLING.billcount &gt;= ${numOfBills}) OR (VISIT.visitcount IS NOT NULL AND VISIT.visitcount &gt;= ${numOfVisits}) OR (OBS.fev1_fvc IS NOT NULL AND (OBS.fev1_fvc &lt; ${fev1_fvc} OR (OBS.fev1_fvc &gt; 1 AND OBS.fev1_fvc &lt; 100*${fev1_fvc}))) OR (MEDS.numOfMeds IS NOT NULL AND MEDS.numOfMeds &gt;= ${numOfMeds}))\n  AND d.provider_no LIKE \'${provider}\'\n  AND d.demographic_no NOT IN ${excludedPatient}\n  ORDER BY d.demographic_no\n		</query>\n	</drillDownQuery>\n</indicatorTemplateXML>\n', b'1', b'0', 0, NULL, NULL);

        UPDATE indicatorTemplate SET template = REPLACE(template, "billingmaster", "billing_on_item") WHERE framework="DoBC CPQI PSP Panel";
        UPDATE indicatorTemplate SET template = REPLACE(template, "dx_code1", "dx") WHERE framework="DoBC CPQI PSP Panel";
        UPDATE indicatorTemplate SET template = REPLACE(template, "dx_code2", "dx1") WHERE framework="DoBC CPQI PSP Panel";
        UPDATE indicatorTemplate SET template = REPLACE(template, "dx_code3", "dx2") WHERE framework="DoBC CPQI PSP Panel";
        UPDATE indicatorTemplate SET template = REPLACE(template, "FROM billing_on_item b", "FROM billing_on_item b, billing_on_cheader1 bch")
                WHERE framework="DoBC CPQI PSP Panel";
        UPDATE indicatorTemplate SET template = REPLACE(template, "AND DATE(b.createdate)", "AND b.ch1_id=bch.id\n\tAND DATE(b.service_date)")
                WHERE framework="DoBC CPQI PSP Panel"; 
        UPDATE indicatorTemplate SET template = REPLACE(template, "b.demographic_no", "bch.demographic_no") WHERE framework="DoBC CPQI PSP Panel";
        UPDATE indicatorTemplate SET template = REPLACE(template, "Created for Doctors of BC", "Original adapted for world wide use")
                WHERE framework="DoBC CPQI PSP Panel";
    END IF;
END IF;    

END $$

CALL patch_database() $$

DELIMITER ;



-- update-2019-03-28.sql

CALL add_column('groupMembers_tbl','facilityId','int(6)');
CALL add_column('groupMembers_tbl','clinicLocationNo','int(6)');
CALL add_column('messagelisttbl','destinationFacilityId','int(6)');
CALL add_column('messagelisttbl','sourceFacilityId','int(6)');
CALL add_column('oscar_msg_type','code','varchar(255)');


update groupMembers_tbl set facilityId = 0 where facilityId is null;
update messagelisttbl set destinationFacilityId = 0 where destinationFacilityId is null;
update messagelisttbl set sourceFacilityId = 0 where sourceFacilityId is null;

update groupMembers_tbl set clinicLocationNo = 0 where clinicLocationNo is null;
update oscar_msg_type set `code` = 'GENERAL_TYPE' where `type` = 2;
update oscar_msg_type set `code` = 'OSCAR_REVIEW_TYPE' where `type` = 1;


INSERT INTO `secObjPrivilege`(`roleUserGroup`, `objectName`, `privilege`, `priority`, `provider_no`) VALUES ('-1', '_msg', 'x', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_msg';
INSERT INTO `secObjPrivilege`(`roleUserGroup`, `objectName`, `privilege`, `priority`, `provider_no`) VALUES ('-1', '_demographic', 'r', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_demographic';

CREATE TABLE IF NOT EXISTS `msgIntegratorDemoMap` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `messageId` int(11) ,
  `sourceDemographicNo` int(11),
  `sourceFacilityId` int(6),
  `msgDemoMapId` int(11),
  PRIMARY KEY (`id`)
);

-- see above for the safe way this has been done INSERT INTO `oscar_msg_type`(`type`, `description`, `code`) VALUES (3, 'Integrator Message', 'INTEGRATOR_TYPE');

-- from update-2019-05-03.sql 

ALTER TABLE consultationRequests modify letterheadName varchar(255);
ALTER TABLE consultationRequestsArchive modify letterheadName varchar(255);


-- Note that the strangely labeled update-2019-10-09.sql is also in patch1.sql

CREATE TABLE IF NOT EXISTS `EFormDocs` (
  `id` int(10) NOT NULL auto_increment PRIMARY KEY,
  `fdid` int(10) NOT NULL,
  `document_no` int(10) NOT NULL,
  `doctype` char(1) NOT NULL,
  `deleted` char(1) DEFAULT NULL,
  `attach_date` date,
  `provider_no` varchar(6) NOT NULL
);

-- update-2019-07-10.sql 
CREATE TABLE IF NOT EXISTS `ISO36612` (
    `id` int(11) auto_increment,
    `code` varchar(255),
    `province` varchar(255),
    `country` varchar(255),
    PRIMARY KEY(id)
);

-- update-2019-07-12.sql
-- see above

-- update-2019-10-05.sql

INSERT INTO `secObjectName`  VALUES ('_newCasemgmt.eaaps',NULL,0) ON DUPLICATE KEY UPDATE objectName='_newCasemgmt.eaaps';
INSERT INTO `secObjPrivilege` VALUES ('doctor','_newCasemgmt.eaaps','x',0,'999998') ON DUPLICATE KEY UPDATE objectName='_newCasemgmt.eaaps';





-- update-2017-05-16.sql
CREATE TABLE IF NOT EXISTS messageFolder (
  folderID int(10) PRIMARY KEY  NOT NULL auto_increment,
  name varchar(25) NOT NULL default '',
  providerNo varchar(6) default null,
  displayOrder int(10),
  deleted boolean NOT NULL DEFAULT false
);


CALL add_column('messagelisttbl','folderid',"INT(10) DEFAULT 0");



-- update-2019-12-01.sql  see above


-- update-2019-12-03.sql
CREATE TABLE IF NOT EXISTS CVCImmunizationName (
    id int(11) auto_increment,
    language varchar(30),
    useSystem varchar(255),
    useCode varchar(255),
    useDisplay varchar(255),
    value varchar(255),
    PRIMARY KEY(id)
);

INSERT INTO `secObjectName`  VALUES ('_prevention.updateCVC',NULL,0) ON DUPLICATE KEY UPDATE objectName='_prevention.updateCVC';
INSERT INTO `secObjPrivilege` VALUES ('admin','_prevention.updateCVC','x',0,'999998') ON DUPLICATE KEY UPDATE objectName='_prevention.updateCVC';

CREATE TABLE IF NOT EXISTS DHIRTransactionLog (
  id int(11) auto_increment,
  started timestamp not null,
  initiatingProviderNo varchar(25),
  transactionType varchar(25),
  externalSystem varchar(50),
  demographicNo int(10),
  resultCode int(10),
  success tinyint(1),
  error mediumtext,
  headers mediumtext,
  PRIMARY KEY(id)
);

CALL add_column('CVCImmunization','typicalDose',"varchar(255)");
CALL add_column('CVCImmunization','typicalDoseUofM',"varchar(255)");
CALL add_column('CVCImmunization','strength',"varchar(255)");


-- update-2020-03-26.sql

CREATE TABLE IF NOT EXISTS erefer_attachment (
    id INT PRIMARY KEY AUTO_INCREMENT,
    demographic_no INT,
    created DATETIME,
    archived BOOLEAN
);

CREATE TABLE IF NOT EXISTS erefer_attachment_data (
    erefer_attachment_id INT,
    lab_id INT,
    lab_type VARCHAR(20),
    PRIMARY KEY(erefer_attachment_id, lab_id, lab_type)
);

-- update-2020-04-14.sql

CREATE TABLE IF NOT EXISTS `AppointmentDxLink` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `providerNo` varchar(6),
  `code` varchar(20),
  `codeType` varchar(20),
  `ageRange` varchar(20),
  `symbol` varchar(20),
  `colour` varchar(20),
  `message` varchar(255),
  `link` varchar(255),
  `updateDate` datetime,
  `createDate` datetime,
  `active` tinyint(1),
  PRIMARY KEY (`id`),
  KEY(code)
);
-- PHC fix, depending on how you upgraded sometimes the table exists but is missing the column
CALL add_column('AppointmentDxLink','ageRange',"VARCHAR(20)");

-- update-2020-07-07.sql

CREATE TABLE IF NOT EXISTS `UAO` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `started` timestamp,
  `providerNo` varchar(25),
  `friendlyName` varchar(255),
  `name` varchar(255),
  `demographicNo` int(10),
  `resultCode` int(10),
  `defaultUAO` tinyint(1),
  `active` tinyint(1),
  `addedBy` varchar(25),
  `dateCreated` timestamp,
  `dateUpdated` timestamp,
  PRIMARY KEY (`id`)
  );


CALL add_column('CVCImmunization','shelfStatus',"varchar(255)");

-- update-2019-07-22.sql

CREATE TABLE IF NOT EXISTS `IndicatorResultItem` (
    `id` int(11) auto_increment,
    `providerNo` varchar(30),
    `timeGenerated` timestamp,
    `indicatorTemplateId` int,
    `label` varchar(255),
    `result` float,
    PRIMARY KEY(`id`)
);

-- update-2017-12-15.sql (sic)

CREATE TABLE IF NOT EXISTS `SystemPreferences` (
    `id` INT AUTO_INCREMENT,
    `name`       VARCHAR(40) NULL,
    `value`      VARCHAR(40) NULL,
    `updateDate` DATETIME    NULL,
    PRIMARY KEY(`id`)
);


-- phc fudge

CREATE TABLE IF NOT EXISTS `OMDGatewayTransactionLog` (
    `id` int(11) AUTO_INCREMENT,
    `started` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `ended` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
    `initiatingProviderNo` varchar(10) DEFAULT NULL,
    `transactionType` varchar(50) DEFAULT NULL,
    `externalSystem` varchar(50) DEFAULT NULL,
    `demographicNo` int(10) DEFAULT NULL,
    `resultCode` int(10) DEFAULT NULL,
    `success` tinyint(1) DEFAULT NULL,
    `error` varchar(255) DEFAULT NULL,
    `dataSent` varchar(255) DEFAULT NULL,
    `dataRecieved` varchar(255) DEFAULT NULL,
    `headers` varchar(255) DEFAULT NULL,
    `uao` varchar(255) DEFAULT NULL,
    `oscarSessionId` varchar(50) DEFAULT '1',
    `contextSessionId` varchar(50) DEFAULT '2',
    `uniqueSessionId` varchar(50) DEFAULT NULL,
    `xRequestId` varchar(50) DEFAULT NULL,
    `xLobTxId` varchar(50) DEFAULT NULL,
    `xCorrelationId` varchar(50) DEFAULT NULL,
    `xGtwyClientId` varchar(50) DEFAULT NULL,
    `secondsLeft` int(11) DEFAULT NULL,
    UNIQUE KEY `id` (`id`)
);
CALL add_column('CVCImmunizationName','CVCImmunizationId','VARCHAR(11) DEFAULT NULL AFTER `value`');

ALTER TABLE `property` MODIFY COLUMN `value` VARCHAR(4000); 

-- update 2020 12 08

CREATE TABLE IF NOT EXISTS `rbt_groups` (
  `id` int(11) AUTO_INCREMENT,
  `tid` int(11) ,
  `group_name` varchar(255) ,
  PRIMARY KEY (`id`)
);

-- update 2021-10-11 adds support for the new contacts ui
CALL add_column('DemographicContact','best_contact','VARCHAR(30) NOT NULL AFTER `mrp`');
CALL add_column('DemographicContact','health_care_team','tinyint(1) NOT NULL AFTER `best_contact`');

-- PHC to remove some warnings and to allow for eventual migration to MariaDB 10.3
ALTER TABLE `eform` CHANGE `patient_independent` `patient_independent` TINYINT(1) NOT NULL DEFAULT '0';
ALTER TABLE `eform` CHANGE `showLatestFormOnly` `showLatestFormOnly` TINYINT(1) NOT NULL DEFAULT '0';
ALTER TABLE `hl7TextInfo` CHANGE `discipline` `discipline` VARCHAR(255) NULL DEFAULT '';

-- We create a procedure that is dropped if it exists already.
DROP PROCEDURE IF EXISTS change2MyISAM;
-- We have to change the delimiter for the procedure.
DELIMITER $$
CREATE PROCEDURE change2MyISAM
(
    given_database VARCHAR(64),
    given_table    VARCHAR(64)
)
theStart:BEGIN
DECLARE TableIsThere INTEGER;

SELECT COUNT(1) INTO TableIsThere
            FROM INFORMATION_SCHEMA.TABLES
           WHERE table_schema = given_database
             AND table_name LIKE given_table;
IF TableIsThere = 0 THEN
        SELECT CONCAT(given_database,'.',given_table, 
	' does not exist.  Unable to change ENGINE to MyISAM') change2MyISAMMessage;
	LEAVE theStart;
ELSE
       SET @sqlstmt = CONCAT('ALTER TABLE ',given_database,'.',given_table,' ENGINE=MYISAM');
	PREPARE st FROM @sqlstmt;
	EXECUTE st;
	DEALLOCATE PREPARE st;  
END IF;
END $$
-- Reset the delimiter
DELIMITER ;

-- update-2020-05-08.sql for ON AR 2017

CREATE TABLE IF NOT EXISTS `formONAR2017` (
  `id` int(10) PRIMARY KEY auto_increment,
  `demographic_no` int(10),
  `provider_no` int(10),
  `formCreated` date,
  `formEdited` timestamp,
  `pg1_lockPage` tinyint(1),
  `c_ln` TEXT(100),
  `c_fn` TEXT(100),
  `c_addr` TEXT(80),
  `c_apt` TEXT(25),
  `c_buz` TEXT(25),
  `c_city` TEXT(50),
  `c_prv` TEXT(36),
  `c_pst` TEXT(14),
  `c_pln` TEXT(80),
  `c_pfn` TEXT(80),
  `c_cpr` TEXT(50),
  `pg1_lmsgY` tinyint(1),
  `pg1_lmsgN` tinyint(1),
  `c_calt` TEXT(50),
  `pg1_pocc` TEXT(60),
  `pg1_pedl` TEXT(60),
  `c_pAge` TEXT(6),
  `c_dob` date,
  `pg1_ageb` TEXT(6),
  `c_lang` TEXT(50),
  `pg1_irY` tinyint(1),
  `pg1_irN` tinyint(1),
  `pg1_occ` TEXT(32),
  `pg1_edl` TEXT(32),
  `pg1_mars` TEXT(10),
  `pg1_sexo` TEXT(25),
  `c_ohip` TEXT(50),
  `c_chrt` TEXT(50),
  `pg1_dsraY` tinyint(1),
  `pg1_dsraN` tinyint(1),
  `pg1_plPOB` TEXT(75),
  `c_pba` TEXT(75),
  `c_nbcph` TEXT(64),
  `c_nbcpc` TEXT(64),
  `c_fph` TEXT(120),
  `c_alrg` TEXT(140),
  `c_medc` TEXT(140),
  `pg1_lmp` TEXT(12),
  `pg1_cycleQ` TEXT(25),
  `pg1_crtY` tinyint(1),
  `pg1_crtN` tinyint(1),
  `pg1_rglY` tinyint(1),
  `pg1_rglN` tinyint(1),
  `pg1_pprgY` tinyint(1),
  `pg1_pprgN` tinyint(1),
  `pg1_cctp` TEXT(25),
  `pg1_luse` TEXT(25),
  `pg1_cptaY` tinyint(1),
  `pg1_cptaN` tinyint(1),
  `pg1_det` TEXT(80),
  `pg1_edbLm` TEXT(12),
  `c_fedb` TEXT(12),
  `pg1_t1Us` tinyint(1),
  `pg1_t2Us` tinyint(1),
  `pg1_datL` tinyint(1),
  `pg1_iui` tinyint(1),
  `pg1_dLmp` tinyint(1),
  `pg1_iuid` TEXT(12),
  `pg1_embT` tinyint(1),
  `pg1_embTd` TEXT(12),
  `pg1_oth` tinyint(1),
  `pg1_ym1` TEXT(12),
  `pg1_pl1` TEXT(25),
  `pg1_gst1` TEXT(25),
  `pg1_lb1` TEXT(25),
  `pg1_tob1` TEXT(25),
  `pg1_cmt1` TEXT(130),
  `pg1_sex1` TEXT(25),
  `pg1_brw1` TEXT(25),
  `pg1_bfd1` TEXT(25),
  `pg1_curh1` TEXT(25),
  `pg1_ym2` TEXT(12),
  `pg1_pl2` TEXT(25),
  `pg1_gst2` TEXT(25),
  `pg1_lb2` TEXT(25),
  `pg1_tob2` TEXT(25),
  `pg1_cmt2` TEXT(130),
  `pg1_sex2` TEXT(25),
  `pg1_brw2` TEXT(25),
  `pg1_bfd2` TEXT(25),
  `pg1_curh2` TEXT(25),
  `pg1_ym3` TEXT(12),
  `pg1_pl3` TEXT(25),
  `pg1_gst3` TEXT(25),
  `pg1_lb3` TEXT(25),
  `pg1_tob3` TEXT(25),
  `pg1_cmt3` TEXT(130),
  `pg1_sex3` TEXT(25),
  `pg1_brw3` TEXT(25),
  `pg1_bfd3` TEXT(25),
  `pg1_curh3` TEXT(25),
  `pg1_ym4` TEXT(12),
  `pg1_pl4` TEXT(25),
  `pg1_gst4` TEXT(25),
  `pg1_lb4` TEXT(25),
  `pg1_tob4` TEXT(25),
  `pg1_cmt4` TEXT(130),
  `pg1_sex4` TEXT(25),
  `pg1_brw4` TEXT(25),
  `pg1_bfd4` TEXT(25),
  `pg1_curh4` TEXT(25),
  `pg1_ym5` TEXT(12),
  `pg1_pl5` TEXT(25),
  `pg1_gst5` TEXT(25),
  `pg1_lb5` TEXT(25),
  `pg1_tob5` TEXT(25),
  `pg1_cmt5` TEXT(130),
  `pg1_sex5` TEXT(25),
  `pg1_brw5` TEXT(25),
  `pg1_bfd5` TEXT(25),
  `pg1_curh5` TEXT(25),
  `pg1_ym6` TEXT(12),
  `pg1_pl6` TEXT(25),
  `pg1_gst6` TEXT(25),
  `pg1_lb6` TEXT(25),
  `pg1_tob6` TEXT(25),
  `pg1_cmt6` TEXT(130),
  `pg1_sex6` TEXT(25),
  `pg1_brw6` TEXT(25),
  `pg1_bfd6` TEXT(25),
  `pg1_curh6` TEXT(25),
  `pg1_ym7` TEXT(12),
  `pg1_pl7` TEXT(25),
  `pg1_gst7` TEXT(25),
  `pg1_lb7` TEXT(25),
  `pg1_tob7` TEXT(25),
  `pg1_cmt7` TEXT(130),
  `pg1_sex7` TEXT(25),
  `pg1_brw7` TEXT(25),
  `pg1_bfd7` TEXT(25),
  `pg1_curh7` TEXT(25),
  `pg1_bldY` tinyint(1),
  `pg1_bldN` tinyint(1),
  `pg1_nasY` tinyint(1),
  `pg1_nasN` tinyint(1),
  `pg1_rashY` tinyint(1),
  `pg1_rashN` tinyint(1),
  `pg1_clcY` tinyint(1),
  `pg1_clcN` tinyint(1),
  `pg1_vDAY` tinyint(1),
  `pg1_vDAN` tinyint(1),
  `pg1_acPY` tinyint(1),
  `pg1_acPN` tinyint(1),
  `pg1_prVY` tinyint(1),
  `pg1_prVN` tinyint(1),
  `pg1_fAQY` tinyint(1),
  `pg1_fAQN` tinyint(1),
  `pg1_dRstY` tinyint(1),
  `pg1_dRstN` tinyint(1),
  `pg1_sSrgY` tinyint(1),
  `pg1_sSrgN` tinyint(1),
  `pg1_srgACY` tinyint(1),
  `pg1_srgACN` tinyint(1),
  `pg1_htY` tinyint(1),
  `pg1_htN` tinyint(1),
  `pg1_cpY` tinyint(1),
  `pg1_cpN` tinyint(1),
  `pg1_edcY` tinyint(1),
  `pg1_edcN` tinyint(1),
  `pg1_giLY` tinyint(1),
  `pg1_giLN` tinyint(1),
  `pg1_brsY` tinyint(1),
  `pg1_brsN` tinyint(1),
  `pg1_gcY` tinyint(1),
  `pg1_gcN` tinyint(1),
  `pg1_urY` tinyint(1),
  `pg1_urN` tinyint(1),
  `pg1_rmY` tinyint(1),
  `pg1_rmN` tinyint(1),
  `pg1_hmY` tinyint(1),
  `pg1_hmN` tinyint(1),
  `pg1_thrY` tinyint(1),
  `pg1_thrN` tinyint(1),
  `pg1_btY` tinyint(1),
  `pg1_btN` tinyint(1),
  `pg1_nrY` tinyint(1),
  `pg1_nrN` tinyint(1),
  `pg1_oth4Y` tinyint(1),
  `pg1_oth4N` tinyint(1),
  `pg1_mcY` tinyint(1),
  `pg1_mcN` tinyint(1),
  `pg1_egg` TEXT(40),
  `pg1_fhAge` TEXT(6),
  `pg1_sperm` TEXT(40),
  `pg1_csY` tinyint(1),
  `pg1_csN` tinyint(1),
  `pg1_hsY` tinyint(1),
  `pg1_hsN` tinyint(1),
  `pg1_tsY` tinyint(1),
  `pg1_tsN` tinyint(1),
  `pg1_espY` tinyint(1),
  `pg1_espN` tinyint(1),
  `pg1_fmY` tinyint(1),
  `pg1_fmN` tinyint(1),
  `pg1_cdY` tinyint(1),
  `pg1_cdN` tinyint(1),
  `pg1_oth2Y` tinyint(1),
  `pg1_oth2N` tinyint(1),
  `pg1_csyY` tinyint(1),
  `pg1_csyN` tinyint(1),
  `pg1_vdsY` tinyint(1),
  `pg1_vdsN` tinyint(1),
  `pg1_vvcY` tinyint(1),
  `pg1_vvcN` tinyint(1),
  `pg1_hivY` tinyint(1),
  `pg1_hivN` tinyint(1),
  `pg1_hsvY` tinyint(1),
  `pg1_hsvN` tinyint(1),
  `pg1_hsvPY` tinyint(1),
  `pg1_hsvPN` tinyint(1),
  `pg1_stiY` tinyint(1),
  `pg1_stiN` tinyint(1),
  `pg1_atRY` tinyint(1),
  `pg1_atRN` tinyint(1),
  `pg1_oth3Y` tinyint(1),
  `pg1_oth3N` tinyint(1),
  `pg1_apY` tinyint(1),
  `pg1_apN` tinyint(1),
  `pg1_aprY` tinyint(1),
  `pg1_aprN` tinyint(1),
  `pg1_g2s` TEXT(25),
  `pg1_dpY` tinyint(1),
  `pg1_dpN` tinyint(1),
  `pg1_dprY` tinyint(1),
  `pg1_dprN` tinyint(1),
  `pg1_ph2s` TEXT(25),
  `pg1_edY` tinyint(1),
  `pg1_edN` tinyint(1),
  `pg1_bplY` tinyint(1),
  `pg1_bplN` tinyint(1),
  `pg1_szY` tinyint(1),
  `pg1_szN` tinyint(1),
  `pg1_oth4Y2` tinyint(1),
  `pg1_oth4N2` tinyint(1),
  `pg1_s6mY` tinyint(1),
  `pg1_s6mN` tinyint(1),
  `pg1_smk` TEXT(25),
  `pg1_aleY` tinyint(1),
  `pg1_aleN` tinyint(1),
  `pg1_ld` TEXT(25),
  `pg1_cd` TEXT(25),
  `pg1_ts` TEXT(25),
  `pg1_mjY` tinyint(1),
  `pg1_mjN` tinyint(1),
  `pg1_npsY` tinyint(1),
  `pg1_npsN` tinyint(1),
  `pg1_ocrY` tinyint(1),
  `pg1_ocrN` tinyint(1),
  `pg1_fhY` tinyint(1),
  `pg1_fhN` tinyint(1),
  `pg1_ssY` tinyint(1),
  `pg1_ssN` tinyint(1),
  `pg1_bpY` tinyint(1),
  `pg1_bpN` tinyint(1),
  `pg1_rpY` tinyint(1),
  `pg1_rpN` tinyint(1),
  `pg1_pvY` tinyint(1),
  `pg1_pvN` tinyint(1),
  `pg1_pcoY` tinyint(1),
  `pg1_pcoN` tinyint(1),
  `pg1_oth5Y` tinyint(1),
  `pg1_oth5N` tinyint(1),
  `pg1_cm1` TEXT(2048),
  `pg1_cb` TEXT(110),
  `pg1_rb` TEXT(110),
  `pg1_date` TEXT(12),
  `pg1_mrpd` TEXT(12),
  `c_g` TEXT(25),
  `c_t` TEXT(25),
  `c_p` TEXT(25),
  `c_a` TEXT(25),
  `c_l` TEXT(25),
  `c_s` TEXT(25),
  `pg1_neon` TEXT(25),
  `c_ppht` TEXT(25),
  `c_ppwt` TEXT(25),
  `pg2_bp` TEXT(25),
  `c_ppbmi` TEXT(25),
  `pg2_hn` TEXT(25),
  `pg2_msk` TEXT(25),
  `pg2_bnp` TEXT(25),
  `pg2_plv` TEXT(25),
  `pg2_hl` TEXT(25),
  `pg2_oth` TEXT(25),
  `pg2_abd` TEXT(40),
  `pg2_ec` TEXT(512),
  `pg2_lp` TEXT(12),
  `pg2_res` TEXT(50),
  `pg2_iHb` TEXT(50),
  `pg2_aRh` TEXT(50),
  `pg2_mcv` TEXT(50),
  `pg2_asc` TEXT(50),
  `pg2_plt` TEXT(50),
  `pg2_rim` TEXT(50),
  `pg2_hbsa` TEXT(50),
  `pg2_syp` TEXT(50),
  `pg2_hiv` TEXT(50),
  `pg2_gc` TEXT(50),
  `pg2_chl` TEXT(50),
  `pg2_urcs` TEXT(50),
  `pg2_tst1` TEXT(25),
  `pg2_res1` TEXT(60),
  `pg2_tst2` TEXT(60),
  `pg2_res2` TEXT(60),
  `pg2_tst3` TEXT(60),
  `pg2_res3` TEXT(60),
  `pg2_tst4` TEXT(60),
  `pg2_res4` TEXT(60),
  `pg2_hb` TEXT(60),
  `pg2_plt2` TEXT(60),
  `pg2_aRh2` TEXT(60),
  `pg2_rabd` TEXT(60),
  `pg2_1g` TEXT(60),
  `pg2_2g` TEXT(60),
  `pg2_tst5` TEXT(60),
  `pg2_res5` TEXT(60),
  `pg2_tst6` TEXT(60),
  `pg2_res6` TEXT(60),
  `pg2_tst7` TEXT(60),
  `pg2_res7` TEXT(60),
  `pg2_tst8` TEXT(60),
  `pg2_res8` TEXT(60),
  `pg2_tst9` TEXT(60),
  `pg2_res9` TEXT(60),
  `pg2_tst10` TEXT(60),
  `pg2_res10` TEXT(60),
  `pg2_tst11` TEXT(60),
  `pg2_res11` TEXT(60),
  `pg2_tst12` TEXT(60),
  `pg2_res12` TEXT(60),
  `pg2_tst13` TEXT(60),
  `pg2_res13` TEXT(60),
  `pg2_tst14` TEXT(60),
  `pg2_res14` TEXT(60),
  `pg2_soY` tinyint(1),
  `pg2_soN` tinyint(1),
  `pg2_fts` tinyint(1),
  `pg2_ftsc` TEXT(40),
  `pg2_caY` tinyint(1),
  `pg2_caN` tinyint(1),
  `pg2_cac` TEXT(40),
  `pg2_ips1` tinyint(1),
  `pg2_ips2` tinyint(1),
  `pg2_ipsres` TEXT(40),
  `pg2_oGTY` tinyint(1),
  `pg2_oGTN` tinyint(1),
  `pg2_oGT` TEXT(40),
  `pg2_mss` tinyint(1),
  `pg2_afp` tinyint(1),
  `pg2_afpc` TEXT(40),
  `pg2_nra` TEXT(25),
  `pg2_dnaoY` tinyint(1),
  `pg2_dnaoN` tinyint(1),
  `pg2_dna` TEXT(40),
  `pg2_apb` TEXT(50),
  `pg2_cd` tinyint(1),
  `pg2_cdd` TEXT(12),
  `pg2_p206` tinyint(1),
  `pg2_prsnt206` tinyint(1),
  `pg2_noY` tinyint(1),
  `pg2_noN` tinyint(1),
  `pg2_nod` TEXT(12),
  `pg2_ud1` TEXT(12),
  `pg2_ug1` TEXT(25),
  `pg2_ur1` TEXT(220),
  `pg2_ud2` TEXT(12),
  `pg2_ug2` TEXT(25),
  `pg2_ur2` TEXT(220),
  `pg2_ud3` TEXT(12),
  `pg2_ug3` TEXT(25),
  `pg2_as` TEXT(100),
  `pg2_plcl` TEXT(80),
  `pg2_smks` TEXT(80),
  `pg2_ud4` TEXT(12),
  `pg2_ug4` TEXT(25),
  `pg2_ur4` TEXT(220),
  `pg2_ud5` TEXT(12),
  `pg2_ug5` TEXT(25),
  `pg2_ur5` TEXT(220),
  `pg2_ud6` TEXT(12),
  `pg2_ug6` TEXT(25),
  `pg2_ur6` TEXT(220),
  `pg2_ud7` TEXT(12),
  `pg2_ug7` TEXT(25),
  `pg2_ur7` TEXT(220),
  `pg2_ud8` TEXT(12),
  `pg2_ug8` TEXT(25),
  `pg2_ur8` TEXT(220),
  `pg2_ud9` TEXT(12),
  `pg2_ug9` TEXT(25),
  `pg2_ur9` TEXT(220),
  `pg2_ud10` TEXT(12),
  `pg2_ug10` TEXT(25),
  `pg2_ur10` TEXT(220),
  `pg2_ud11` TEXT(12),
  `pg2_ug11` TEXT(25),
  `pg2_ur11` TEXT(220),
  `pg2_ud12` TEXT(12),
  `pg2_ug12` TEXT(25),
  `pg2_ur12` TEXT(85),
  `pg2_gsrr` tinyint(1),
  `pg2_oc2h` tinyint(1),
  `pg2_u2cl` tinyint(1),
  `pg2_ud13` TEXT(12),
  `pg2_ug13` TEXT(50),
  `pg2_ur13` TEXT(85),
  `pg3_iss1` TEXT(50),
  `pg3_pl1` TEXT(80),
  `pg3_iss2` TEXT(50),
  `pg3_pl2` TEXT(80),
  `pg3_iss3` TEXT(50),
  `pg3_pl3` TEXT(80),
  `pg3_iss4` TEXT(50),
  `pg3_pl4` TEXT(80),
  `pg3_iss5` TEXT(50),
  `pg3_pl5` TEXT(80),
  `pg3_iss6` TEXT(50),
  `pg3_pl6` TEXT(80),
  `pg3_lasa` tinyint(1),
  `pg3_pid` tinyint(1),
  `pg3_hsi` tinyint(1),
  `pg3_swp` tinyint(1),
  `pg3_swn` tinyint(1),
  `pg3_prY` tinyint(1),
  `pg3_prN` tinyint(1),
  `pg3_soc` TEXT(100),
  `pg3_rhn` tinyint(1),
  `pg3_rhl` TEXT(12),
  `pg3_add` TEXT(12),
  `pg3_id` tinyint(1),
  `pg3_ir` tinyint(1),
  `pg3_idc` tinyint(1),
  `pg3_prd` tinyint(1),
  `pg3_pru2` tinyint(1),
  `pg3_pru2n` tinyint(1),
  `pg3_prY2` TEXT(4),
  `pg3_prr` tinyint(1),
  `pg3_prdc` tinyint(1),
  `pg3_rubd` tinyint(1),
  `pg3_vOth` tinyint(1),
  `pg3_vOthS` TEXT(25),
  `pg3_nhp` tinyint(1),
  `pg3_nhv` tinyint(1),
  `pg3_svd1` TEXT(12),
  `pg3_svg1` TEXT(25),
  `pg3_svw1` TEXT(25),
  `pg3_svb1` TEXT(25),
  `pg3_svu1` TEXT(25),
  `pg3_svs1` TEXT(25),
  `pg3_svp1` TEXT(25),
  `pg3_svfh1` TEXT(25),
  `pg3_svfm1` TEXT(25),
  `pg3_svc1` TEXT(50),
  `pg3_svn1` TEXT(25),
  `pg3_svi1` TEXT(25),
  `pg3_svd2` TEXT(12),
  `pg3_svg2` TEXT(25),
  `pg3_svw2` TEXT(25),
  `pg3_svb2` TEXT(25),
  `pg3_svu2` TEXT(25),
  `pg3_svs2` TEXT(25),
  `pg3_svp2` TEXT(25),
  `pg3_svfh2` TEXT(25),
  `pg3_svfm2` TEXT(25),
  `pg3_svc2` TEXT(50),
  `pg3_svn2` TEXT(25),
  `pg3_svi2` TEXT(25),
  `pg3_svd3` TEXT(12),
  `pg3_svg3` TEXT(25),
  `pg3_svw3` TEXT(25),
  `pg3_svb3` TEXT(25),
  `pg3_svu3` TEXT(25),
  `pg3_svs3` TEXT(25),
  `pg3_svp3` TEXT(25),
  `pg3_svfh3` TEXT(25),
  `pg3_svfm3` TEXT(25),
  `pg3_svc3` TEXT(50),
  `pg3_svn3` TEXT(25),
  `pg3_svi3` TEXT(25),
  `pg3_svd4` TEXT(12),
  `pg3_svg4` TEXT(25),
  `pg3_svw4` TEXT(25),
  `pg3_svb4` TEXT(25),
  `pg3_svu4` TEXT(25),
  `pg3_svs4` TEXT(25),
  `pg3_svp4` TEXT(25),
  `pg3_svfh4` TEXT(25),
  `pg3_svfm4` TEXT(25),
  `pg3_svc4` TEXT(50),
  `pg3_svn4` TEXT(25),
  `pg3_svi4` TEXT(25),
  `pg3_svd5` TEXT(12),
  `pg3_svg5` TEXT(25),
  `pg3_svw5` TEXT(25),
  `pg3_svb5` TEXT(25),
  `pg3_svu5` TEXT(25),
  `pg3_svs5` TEXT(25),
  `pg3_svp5` TEXT(25),
  `pg3_svfh5` TEXT(25),
  `pg3_svfm5` TEXT(25),
  `pg3_svc5` TEXT(50),
  `pg3_svn5` TEXT(25),
  `pg3_svi5` TEXT(25),
  `pg3_svd6` TEXT(12),
  `pg3_svg6` TEXT(25),
  `pg3_svw6` TEXT(25),
  `pg3_svb6` TEXT(25),
  `pg3_svu6` TEXT(25),
  `pg3_svs6` TEXT(25),
  `pg3_svp6` TEXT(25),
  `pg3_svfh6` TEXT(25),
  `pg3_svfm6` TEXT(25),
  `pg3_svc6` TEXT(50),
  `pg3_svn6` TEXT(25),
  `pg3_svi6` TEXT(25),
  `pg3_svd7` TEXT(12),
  `pg3_svg7` TEXT(25),
  `pg3_svw7` TEXT(25),
  `pg3_svb7` TEXT(25),
  `pg3_svu7` TEXT(25),
  `pg3_svs7` TEXT(25),
  `pg3_svp7` TEXT(25),
  `pg3_svfh7` TEXT(25),
  `pg3_svfm7` TEXT(25),
  `pg3_svc7` TEXT(50),
  `pg3_svn7` TEXT(25),
  `pg3_svi7` TEXT(25),
  `pg3_svd8` TEXT(12),
  `pg3_svg8` TEXT(25),
  `pg3_svw8` TEXT(25),
  `pg3_svb8` TEXT(25),
  `pg3_svu8` TEXT(25),
  `pg3_svs8` TEXT(25),
  `pg3_svp8` TEXT(25),
  `pg3_svfh8` TEXT(25),
  `pg3_svfm8` TEXT(25),
  `pg3_svc8` TEXT(50),
  `pg3_svn8` TEXT(25),
  `pg3_svi8` TEXT(25),
  `pg3_svd9` TEXT(12),
  `pg3_svg9` TEXT(25),
  `pg3_svw9` TEXT(25),
  `pg3_svb9` TEXT(25),
  `pg3_svu9` TEXT(25),
  `pg3_svs9` TEXT(25),
  `pg3_svp9` TEXT(25),
  `pg3_svfh9` TEXT(25),
  `pg3_svfm9` TEXT(25),
  `pg3_svc9` TEXT(50),
  `pg3_svn9` TEXT(25),
  `pg3_svi9` TEXT(25),
  `pg3_svd10` TEXT(12),
  `pg3_svg10` TEXT(25),
  `pg3_svw10` TEXT(25),
  `pg3_svb10` TEXT(25),
  `pg3_svu10` TEXT(25),
  `pg3_svs10` TEXT(25),
  `pg3_svp10` TEXT(25),
  `pg3_svfh10` TEXT(25),
  `pg3_svfm10` TEXT(25),
  `pg3_svc10` TEXT(50),
  `pg3_svn10` TEXT(25),
  `pg3_svi10` TEXT(25),
  `pg3_svd11` TEXT(12),
  `pg3_svg11` TEXT(25),
  `pg3_svw11` TEXT(25),
  `pg3_svb11` TEXT(25),
  `pg3_svu11` TEXT(25),
  `pg3_svs11` TEXT(25),
  `pg3_svp11` TEXT(25),
  `pg3_svfh11` TEXT(25),
  `pg3_svfm11` TEXT(25),
  `pg3_svc11` TEXT(50),
  `pg3_svn11` TEXT(25),
  `pg3_svi11` TEXT(25),
  `pg3_svd12` TEXT(12),
  `pg3_svg12` TEXT(25),
  `pg3_svw12` TEXT(25),
  `pg3_svb12` TEXT(25),
  `pg3_svu12` TEXT(25),
  `pg3_svs12` TEXT(25),
  `pg3_svp12` TEXT(25),
  `pg3_svfh12` TEXT(25),
  `pg3_svfm12` TEXT(25),
  `pg3_svc12` TEXT(50),
  `pg3_svn12` TEXT(25),
  `pg3_svi12` TEXT(25),
  `pg3_svd13` TEXT(12),
  `pg3_svg13` TEXT(25),
  `pg3_svw13` TEXT(25),
  `pg3_svb13` TEXT(25),
  `pg3_svu13` TEXT(25),
  `pg3_svs13` TEXT(25),
  `pg3_svp13` TEXT(25),
  `pg3_svfh13` TEXT(25),
  `pg3_svfm13` TEXT(25),
  `pg3_svc13` TEXT(50),
  `pg3_svn13` TEXT(25),
  `pg3_svi13` TEXT(25),
  `pg3_svd14` TEXT(12),
  `pg3_svg14` TEXT(25),
  `pg3_svw14` TEXT(25),
  `pg3_svb14` TEXT(25),
  `pg3_svu14` TEXT(25),
  `pg3_svs14` TEXT(25),
  `pg3_svp14` TEXT(25),
  `pg3_svfh14` TEXT(25),
  `pg3_svfm14` TEXT(25),
  `pg3_svc14` TEXT(50),
  `pg3_svn14` TEXT(25),
  `pg3_svi14` TEXT(25),
  `pg3_svd15` TEXT(12),
  `pg3_svg15` TEXT(25),
  `pg3_svw15` TEXT(25),
  `pg3_svb15` TEXT(25),
  `pg3_svu15` TEXT(25),
  `pg3_svs15` TEXT(25),
  `pg3_svp15` TEXT(25),
  `pg3_svfh15` TEXT(25),
  `pg3_svfm15` TEXT(25),
  `pg3_svc15` TEXT(50),
  `pg3_svn15` TEXT(25),
  `pg3_svi15` TEXT(25),
  `pg3_svd16` TEXT(12),
  `pg3_svg16` TEXT(25),
  `pg3_svw16` TEXT(25),
  `pg3_svb16` TEXT(25),
  `pg3_svu16` TEXT(25),
  `pg3_svs16` TEXT(25),
  `pg3_svp16` TEXT(25),
  `pg3_svfh16` TEXT(25),
  `pg3_svfm16` TEXT(25),
  `pg3_svc16` TEXT(50),
  `pg3_svn16` TEXT(25),
  `pg3_svi16` TEXT(25),
  `pg3_nsa` tinyint(1),
  `pg3_rpc` tinyint(1),
  `pg3_sf` tinyint(1),
  `pg3_hwg` tinyint(1),
  `pg3_bf` tinyint(1),
  `pg3_pha` tinyint(1),
  `pg3_trvl` tinyint(1),
  `pg3_sbu` tinyint(1),
  `pg3_qi` tinyint(1),
  `pg3_sx` tinyint(1),
  `pg3_vbac` tinyint(1),
  `pg3_2tpc` tinyint(1),
  `pg3_2tplb` tinyint(1),
  `pg3_2tpr` tinyint(1),
  `pg3_2tbl` tinyint(1),
  `pg3_2tfm` tinyint(1),
  `pg3_2tmh` tinyint(1),
  `pg3_2tvb` tinyint(1),
  `pg3_3tfm` tinyint(1),
  `pg3_3twp` tinyint(1),
  `pg3_3tbp` tinyint(1),
  `pg3_3tvb` tinyint(1),
  `pg3_3tat` tinyint(1),
  `pg3_3tmh` tinyint(1),
  `pg3_3tbf` tinyint(1),
  `pg3_3tct` tinyint(1),
  `pg3_3tnbc` tinyint(1),
  `pg3_3tdp` tinyint(1),
  `pg3_3tpc` tinyint(1),
  `pg3_comm` TEXT(300),
  `pg3_opr2h` tinyint(1),
  `pg3_opr2c` tinyint(1),
  `pg3_ni1` TEXT(50),
  `pg3_ni2` TEXT(50),
  `pg3_ni3` TEXT(50),
  `pg3_ni4` TEXT(50),
  `pg3_ni5` TEXT(50)
) ENGINE=MyISAM; 

-- update-2021-10-20.sql

CREATE TABLE IF NOT EXISTS `formBCAR2020` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `demographic_no` int(10) NOT NULL,
  `provider_no` varchar(6) NOT NULL,
  `formCreated` date DEFAULT NULL,
  `formEdited` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY `id` (`id`)
);
CREATE TABLE IF NOT EXISTS `formBCAR2020Data` (
  `form_id` int(10) NOT NULL,
   `provider_no` varchar(6) NOT NULL,
  `page_no` int(1) NOT NULL,
  `field` varchar(255) NOT NULL,
  `val` varchar(255) NOT NULL DEFAULT '',
  `field_edited` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY `form_data` (`form_id`,`page_no`,`field`(20))
);

CREATE TABLE IF NOT EXISTS `formBCAR2020Text` (
  `form_id` int(10) NOT NULL,
  `provider_no` varchar(6) NOT NULL,
  `page_no` int(1) NOT NULL,
  `field` varchar(255) NOT NULL,
  `val` text NOT NULL,
  `field_edited` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY `form_data` (`form_id`,`page_no`,`field`(20))
);

CALL add_column('demographic','family_physician','VARCHAR(80) NOT NULL AFTER `consentToUseEmailForCare`');
CALL add_column('demographic','pref_name','VARCHAR(30) NOT NULL AFTER `consentToUseEmailForCare`');


-- update-2022-01-01.sql 
CALL add_column('security','totp_enabled','SMALLINT(1) NOT NULL DEFAULT 0');
CALL add_column('security','totp_secret','VARCHAR(254) NOT NULL');
CALL add_column('security','totp_algorithm',"VARCHAR(50) NOT NULL DEFAULT 'sha1'");
CALL add_column('security','totp_digits',"SMALLINT NOT NULL DEFAULT '6'");
CALL add_column('security','totp_period',"SMALLINT NOT NULL DEFAULT '30'");
ALTER TABLE `security` CHANGE `totp_secret` `totp_secret` VARCHAR(254) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '2-factor authetication BASE32-encoded secret';
 
CALL add_column('SecurityArchive','oneIdKey',"VARCHAR(255)");
CALL add_column('SecurityArchive','oneIdEmail',"VARCHAR(255)");
CALL add_column('SecurityArchive','delegateOneIdEmail',"VARCHAR(255)");
CALL add_column('SecurityArchive','totp_enabled','SMALLINT(1) NOT NULL DEFAULT 0');
CALL add_column('SecurityArchive','totp_secret','VARCHAR(254) NOT NULL');
CALL add_column('SecurityArchive','totp_algorithm',"VARCHAR(50) NOT NULL DEFAULT 'sha1'");
CALL add_column('SecurityArchive','totp_digits',"SMALLINT NOT NULL DEFAULT '6'");
CALL add_column('SecurityArchive','totp_period',"SMALLINT NOT NULL DEFAULT '30'");


-- update-2022-04-04.sql
CALL add_column('demographicArchive','pref_name',"VARCHAR(30)");
CALL add_column('demographicArchive','family_physician',"VARCHAR(80)");
CALL add_column('demographicArchive','consentToUseEmailForCare',"TINYINT(1)");

-- update-2022-05-01.sql for Rourke 2017

CREATE TABLE IF NOT EXISTS `formRourke2017` (
   `ID` int(10) NOT NULL AUTO_INCREMENT,
   `demographic_no` int(10) DEFAULT NULL,
   `c_male` varchar(2) DEFAULT '',
   `c_female` varchar(2) DEFAULT '',
   `provider_no` varchar(6) DEFAULT NULL,
   `formCreated` date DEFAULT NULL,
   `formEdited` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
   `c_lastVisited` char(3) DEFAULT NULL,
   `c_birthRemarks` text,
   `c_riskFactors` text,
   `c_famHistory` text,
   `c_pName` varchar(60) DEFAULT NULL,
   `c_birthDate` date DEFAULT NULL,
   `c_length` varchar(6) DEFAULT NULL,
   `c_headCirc` varchar(6) DEFAULT NULL,
   `c_birthWeight` varchar(7) DEFAULT NULL,
   `c_dischargeWeight` varchar(7) DEFAULT NULL,
   `c_fsa` char(3) DEFAULT NULL,
   `start_of_gestation` DATE DEFAULT NULL,
   `c_APGAR1min` int(11) DEFAULT NULL,
   `c_APGAR5min` int(11) DEFAULT NULL,
   `p1_date1w` date DEFAULT NULL,
   `p1_date2w` date DEFAULT NULL,
   `p1_date1m` date DEFAULT NULL,
   `p1_ht1w` varchar(5) DEFAULT NULL,
   `p1_wt1w` varchar(5) DEFAULT NULL,
   `p1_hc1w` varchar(5) DEFAULT NULL,
   `p1_ht2w` varchar(5) DEFAULT NULL,
   `p1_wt2w` varchar(5) DEFAULT NULL,
   `p1_hc2w` varchar(5) DEFAULT NULL,
   `p1_ht1m` varchar(5) DEFAULT NULL,
   `p1_wt1m` varchar(5) DEFAULT NULL,
   `p1_hc1m` varchar(5) DEFAULT NULL,
   `p1_pConcern1w` text,
   `p1_pConcern2w` text,
   `p1_pConcern1m` text,
   `p1_development1w` text,
   `p1_development2w` text,
   `p1_development1m` text,
   `p1_problems1w` text,
   `p1_problems2w` text,
   `p1_problems1m` text,
   `p1_signature2w` varchar(250) DEFAULT NULL,
   `p2_date2m` date DEFAULT NULL,
   `p2_date4m` date DEFAULT NULL,
   `p2_date6m` date DEFAULT NULL,
   `p2_ht2m` varchar(5) DEFAULT NULL,
   `p2_wt2m` varchar(5) DEFAULT NULL,
   `p2_hc2m` varchar(5) DEFAULT NULL,
   `p2_ht4m` varchar(5) DEFAULT NULL,
   `p2_wt4m` varchar(5) DEFAULT NULL,
   `p2_hc4m` varchar(5) DEFAULT NULL,
   `p2_ht6m` varchar(5) DEFAULT NULL,
   `p2_wt6m` varchar(5) DEFAULT NULL,
   `p2_hc6m` varchar(5) DEFAULT NULL,
   `p2_pConcern2m` text,
   `p2_pConcern4m` text,
   `p2_pConcern6m` text,
   `p2_nutrition2m` text,
   `p2_nutrition4m` text,
   `p2_development2m` text,
   `p2_development4m` text,
   `p2_development6m` text,
   `p2_problems2m` text,
   `p2_problems4m` text,
   `p2_problems6m` text,
   `p2_signature2m` varchar(250) DEFAULT NULL,
   `p2_signature4m` varchar(250) DEFAULT NULL,
   `p3_date9m` date DEFAULT NULL,
   `p3_date12m` date DEFAULT NULL,
   `p3_date15m` date DEFAULT NULL,
   `p3_ht9m` varchar(5) DEFAULT NULL,
   `p3_wt9m` varchar(5) DEFAULT NULL,
   `p3_hc9m` varchar(5) DEFAULT NULL,
   `p3_ht12m` varchar(5) DEFAULT NULL,
   `p3_wt12m` varchar(5) DEFAULT NULL,
   `p3_hc12m` varchar(5) DEFAULT NULL,
   `p3_ht15m` varchar(5) DEFAULT NULL,
   `p3_wt15m` varchar(5) DEFAULT NULL,
   `p3_hc15m` varchar(5) DEFAULT NULL,
   `p3_pConcern9m` text,
   `p3_pConcern12m` text,
   `p3_pConcern15m` text,
   `p3_nutrition12m` text,
   `p3_nutrition15m` text,
   `p3_development9m` text,
   `p3_development12m` text,
   `p3_development15m` text,
   `p3_problems9m` text,
   `p3_problems12m` text,
   `p3_problems15m` text,
   `p3_signature9m` varchar(250) DEFAULT NULL,
   `p3_signature12m` varchar(250) DEFAULT NULL,
   `p3_signature15m` varchar(250) DEFAULT NULL,
   `p4_date18m` date DEFAULT NULL,
   `p4_date24m` date DEFAULT NULL,
   `p4_date48m` date DEFAULT NULL,
   `p4_ht18m` varchar(5) DEFAULT NULL,
   `p4_wt18m` varchar(5) DEFAULT NULL,
   `p4_hc18m` varchar(5) DEFAULT NULL,
   `p4_ht24m` varchar(5) DEFAULT NULL,
   `p4_wt24m` varchar(5) DEFAULT NULL,
   `p4_hc24m` varchar(5) DEFAULT NULL,
   `p4_ht48m` varchar(5) DEFAULT NULL,
   `p4_bmi24m` varchar(5) DEFAULT NULL,
   `p4_bmi48m` varchar(10) DEFAULT NULL,
   `p4_wt48m` varchar(5) DEFAULT NULL,
   `p4_pConcern18m` text,
   `p4_pConcern24m` text,
   `p4_pConcern48m` text,
   `p4_problems18m` text,
   `p4_problems24m` text,
   `p4_problems48m` text,
   `p4_signature18m` varchar(250) DEFAULT NULL,
   `p4_signature24m` varchar(250) DEFAULT NULL,
   `p4_signature48m` varchar(250) DEFAULT NULL,
   `p1_signature1w` varchar(250) DEFAULT NULL,
   `p1_signature1m` varchar(250) DEFAULT NULL,
   `p2_signature6m` varchar(250) DEFAULT NULL,
   `p1_pNutrition1w` text,
   `p1_pNutrition2w` text,
   `p1_pNutrition1m` text,
   `p1_education1w` text,
   `p1_education2w` text,
   `p1_education1m` text,
   `p1_pPhysical1w` text,
   `p1_pPhysical2w` text,
   `p1_pPhysical1m` text,
   `p1_immunization1w` text,
   `p1_immunization2w` text,
   `p1_immunization1m` text,
   `p2_nutrition6m` text,
   `p2_education2m` text,
   `p2_education4m` text,
   `p2_education6m` text,
   `p2_physical2m` text,
   `p2_physical4m` text,
   `p2_physical6m` text,
   `p2_immunization6m` text,
   `p3_nutrition9m` text,
   `p3_education9m` text,
   `p3_education12m` text,
   `p3_education15m` text,
   `p3_physical9m` text,
   `p3_physical12m` text,
   `p3_physical15m` text,
   `p4_nutrition18m` text,
   `p4_nutrition24m` text,
   `p4_nutrition48m` text,
   `p4_education18m` text,
   `p4_education24m` text,
   `p4_education48m` text,
   `p4_development18m` text,
   `p4_development24m` text,
   `p4_development48m` text,
   `p4_development36m` text,
   `p4_development60m` text,
   `p4_physical18m` text,
   `p4_physical24m` text,
   `p4_physical48m` text,
   `p4_nippisingattained` text,
   PRIMARY KEY (`ID`),
   KEY `formRourke2017_demographic_no` (`demographic_no`)
 ) ENGINE=MyISAM; 
 
CREATE TABLE IF NOT EXISTS `form_boolean_value` (
   `form_name` varchar(50) NOT NULL,
   `form_id` int(10) NOT NULL,
   `field_name` varchar(50) NOT NULL,
   `value` tinyint(1) DEFAULT NULL,
   PRIMARY KEY (`form_name`,`form_id`,`field_name`)
 );

-- PHC the following have Row Size Too Large errors with MariaDB 10.3 with InnoDB

-- Group A that cannot be fixed by changing VARCHAR to TEXT
-- MyISAM is the only viable solution
CALL change2MyISAM(DATABASE(),'formAR');
CALL change2MyISAM(DATABASE(),'formONAR');
CALL change2MyISAM(DATABASE(),'formBCAR');
CALL change2MyISAM(DATABASE(),'formBCAR2012');




-- DEPRECATE *empty* antenatal forms

-- We create a procedure that is dropped if it exists already.
DROP PROCEDURE IF EXISTS deprecateOldTables;
-- We have to change the delimiter for the procedure.
DELIMITER $$
CREATE PROCEDURE deprecateOldTables ()
BEGIN
        SELECT CONCAT('DELETE FROM encounterForm WHERE form_table IN (',GROUP_CONCAT(DBTB),');')
        INTO @DeleteCommand
        FROM (SELECT CONCAT("'",table_name,"'") DBTB
        FROM information_schema.tables
        WHERE table_rows = 0 AND table_schema IN (DATABASE()) AND table_name IN ('formAR', 'formONAR', 'formBCAR', 'formBCAR2012')) A;
        SELECT @DeleteCommand;

        IF(!ISNULL(@DeleteCommand) && LENGTH(trim(@DeleteCommand)) > 0) THEN
            PREPARE stmt FROM @DeleteCommand;
            EXECUTE stmt; 
            DEALLOCATE PREPARE stmt;      
        END IF;

        SELECT CONCAT('DROP TABLE ',GROUP_CONCAT(DBTB),';')
        INTO @DropCommand
        FROM (SELECT CONCAT(table_schema,'.',table_name) DBTB
        FROM information_schema.tables
        WHERE table_rows = 0 AND table_schema IN (DATABASE()) AND table_name IN ('formAR', 'formONAR', 'formBCAR', 'formBCAR2012')) A;
        SELECT @DropCommand;

        IF(!ISNULL(@DropCommand) && LENGTH(trim(@DropCommand)) > 0) THEN
            PREPARE stmt FROM @DropCommand;
            EXECUTE stmt; 
            DEALLOCATE PREPARE stmt;      
        END IF;
END $$
-- Reset the delimiter
DELIMITER ;

CALL deprecateOldTables();


-- Group B that can be fixed by changing VARCHAR to TEXT
CALL change2MyISAM(DATABASE(),'formIntakeHx');
CALL change2MyISAM(DATABASE(),'formIntakeInfo');
CALL change2MyISAM(DATABASE(),'formInternetAccess');
CALL change2MyISAM(DATABASE(),'formLabReq');
CALL change2MyISAM(DATABASE(),'formONAREnhancedRecord');
CALL change2MyISAM(DATABASE(),'formONAREnhancedRecordExt1');
CALL change2MyISAM(DATABASE(),'formONAREnhancedRecordExt2');
CALL change2MyISAM(DATABASE(),'formType2Diabetes');
CALL change2MyISAM(DATABASE(),'formAdf');
CALL change2MyISAM(DATABASE(),'formfollowup');
CALL change2MyISAM(DATABASE(),'formintakeb');
CALL change2MyISAM(DATABASE(),'formintakec');
CALL change2MyISAM(DATABASE(),'formovulation');     
CALL change2MyISAM(DATABASE(),'formRourke2009');   

-- PHC adjust to prevent truncation in some settings
ALTER TABLE `demographic` CHANGE `family_physician` `family_physician` VARCHAR(80) CHARACTER SET utf8 COLLATE utf8_general_ci NULL;
ALTER TABLE `demographic` CHANGE `postal` `postal` VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL;
ALTER TABLE `DigitalSignature` CHANGE `signatureImage` `signatureImage` MEDIUMBLOB NOT NULL;

-- PHC to adjust to new muted color themes
UPDATE `appointment_status` SET `color`= '#FDFED2' WHERE `color`= '#FDFEC7' AND `description`='To Do';
UPDATE `appointment_status` SET `color`= '#FDFECC' WHERE `color`= '#FDFEC7' AND `description`='Daysheet Printed';
UPDATE `appointment_status` SET `color`= '#7ff67f' WHERE `color`= '#00ee00' AND `description`='Here';
UPDATE `appointment_status` SET `color`= '#ffd6ff' WHERE `color`= '#FFBBFF' AND `description`='Picked';
UPDATE `appointment_status` SET `color`= '#E5F4FE' WHERE `color`= '#FFFF33' AND `description`='Empty Room';

-- PHC RTL update to 2.2  
UPDATE `eform` SET `subject`='Rich Text Letter Generator v2.2',`form_date`='2022-03-04',`form_time`='00:00:00',`form_html`=
'<html>\r\n<head>\r\n<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\r\n<!--V2.2 Mar 4, 2022 -->\r\n<!-- Author PHC -->\r\n<title>Rich Text Letter</title>\r\n\r\n<style type=\"text/css\">\r\n body { font-family: Arial; }\r\n.butn {width: 140px;}\r\n</style>\r\n<style>\r\n.doc {\r\n	color:blue;\r\n	font-size:10px;\r\n}\r\n.lab {\r\n	color:#CC0099;\r\n	font-size:10px;\r\n}\r\n.hrm {\r\n	color:red;\r\n	font-size:10px;\r\n}\r\n.eform {\r\n	color: green;\r\n	font-size:10px;\r\n}\r\n.chevron {\r\n	cursor: pointer;\r\n	font-weight: bold;\r\n	font-size: 14px;\r\n	-webkit-transform: rotate(180deg);\r\n	display: inline-block;	\r\n}\r\n.hide {\r\n	display: none;\r\n}\r\n.editControlButton span{\r\n    position: relative;\r\n	display: inline-block;\r\n	padding: 6px;\r\n}\r\n.editControlButton i {\r\n	padding: 6px;\r\n	color: #757575;\r\n}\r\n.editControlButton i:hover {\r\n    background-color: lightgrey;\r\n	color: black;\r\n}\r\n</style>\r\n\r\n<style type=\"text/css\" media=\"print\">\r\n.DoNotPrint {\r\n    display: none;\r\n}\r\n</style>\r\n\r\n<script language=\"javascript\">\r\n// GLOBALS\r\nvar needToConfirm = false;\r\nvar ImgArray = [];\r\n</script>\r\n\r\n<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"   integrity=\"sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=\" crossorigin=\"anonymous\"></script>\r\n\r\n<link href=\"../css/jquery.ui.colorPicker.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"../js/jquery-ui-1.8.18.custom.min.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/jquery.ui.colorPicker.min.js\" type=\"text/javascript\"></script>\r\n<script language=\"javascript\" type=\"text/javascript\" src=\"${oscar_javascript_path}eforms/APCache.js\"></script>\r\n<script language=\"javascript\" type=\"text/javascript\" src=\"${oscar_javascript_path}eforms/imageControl.js\"></script>\r\n<script language=\"javascript\" type=\"text/javascript\" src=\"${oscar_javascript_path}eforms/faxControl.js\"></script>\r\n<script language=\"javascript\" type=\"text/javascript\" src=\"${oscar_javascript_path}eforms/signatureControl.jsp\"></script>\r\n<script language=\"javascript\" type=\"text/javascript\" src=\"${oscar_javascript_path}eforms/printControl.js\"></script>\r\n<script language=\"javascript\" type=\"text/javascript\" src=\"${oscar_javascript_path}eforms/editControl2.js.jsp\"></script>\r\n\r\n<script src=\'../eform/displayImage.do?imagefile=stamps.js\'></script>\r\n<link rel=\"stylesheet\" href=\"../css/font-awesome.min.css\">\r\n\r\n\r\n<script language=\"javascript\">\r\n//keypress events trigger dirty flag for the iFrame and the subject line\r\ndocument.onkeyup=setDirtyFlag\r\n\r\nfunction setDirtyFlag() {\r\n	needToConfirm = true; \r\n}\r\n\r\nfunction releaseDirtyFlag() {\r\n	needToConfirm = false; //Call this function if dosent requires an alert.\r\n	//this could be called when save button is clicked\r\n}\r\n\r\nwindow.onbeforeunload = confirmExit;\r\n\r\nfunction confirmExit() {\r\n	if (needToConfirm){\r\n	return \"You have attempted to leave this page. If you have made any changes without clicking the Submit button, your changes will be lost. Are you sure you want to exit this page?\";\r\n	}\r\n}\r\n\r\nvar loads=true;\r\n\r\nfunction saveRTL() {\r\n	needToConfirm=false;\r\n	var theRTL=editControlContents(\'edit\');\r\n	var myNewString = theRTL.replace(/\"/g, \'&quot;\');\r\n	myNewString = theRTL.replace(/</g, \'&lt;\');\r\n	myNewString = theRTL.replace(/>/g, \'&gt;\');\r\n	document.getElementById(\'Letter\').value=myNewString.replace(/\'/g, \"&#39;\");\r\n//  alternate approach to escape dangerous characters albeit less human readable, and needs to be unencoded\r\n//	document.getElementById(\'Letter\').value=encodeURIComponent(theRTL);	\r\n}\r\n\r\nfunction maximize() {\r\n    var width=900; //180+cfg_width;\r\n	window.resizeTo(width,1160) ; // width, height\r\n	loads=false;\r\n}\r\n\r\n<!-- CODE FOR PULLING MEASUREMENTS  -->\r\nvar depth=5;\r\n\r\n	function labgrid(){\r\n	//---------Paste lab grid-----------------------------------------------------------\r\n	doHtml(\"<font size=\'3\'><b>Lab testing summary:</font></b><p></p\")  //header\r\n	var LabName = [\"HB\", \"EGFR\", \"SCR\", \"A1C\", \"FBS\", \"BG\", \"GT2\", \"APOB\", \"TCHL\", \"LDLC\", \"LDL\", \"HDL\", \"TCHD\", \"TG\", \"ACR\", \"NA\", \"Kpl\", \"CA\", \"PH\", \"MG\", \"TSH\", \"PSA\", \"PTH\", \"AST\", \"ALT\", \"CRP\", \"FOBT\", \"FITQ\", \"FIT\", \"HPSE\", \"HPSG\", \"HPBT\", \"HPYL\", \"INR\", \"URIC\"]\r\n	for (i = 0; i < LabName.length; i++) {\r\n	   getMeasures(LabName[i], depth)\r\n	}\r\n	}\r\n\r\n	function labgrid2(){\r\n	//---------Paste Vitals grid-----------------------------------------------------------\r\n	doHtml(\"<font size=\'3\'><b>Vitals summary:</font></b><p></p\")  //header\r\n	var LabName = [\"BP\",\"WT\",\"HT\",\"BMI\"]\r\n	for (i = 0; i < LabName.length; i++) {\r\n	   getMeasures(LabName[i], depth)\r\n	}\r\n	}\r\n\r\n	/*add eform attach*/\r\n	function popupEformUpload() {\r\n		var fid,demographic_no= \"\";\r\n		fid = gup(\"fid\");\r\n		demographic_no= gup(\"demographic_no\");\r\n		//popup(\'../eform/attachEform.jsp?demo=\'+demographic_no+\'&requestId=\'+fid); \r\n		popup(\'../eform/attachEform.jsp?demo=\'+demographic_no); \r\n		return false;\r\n	}\r\n	\r\n	function updateAttached() {\r\n	    var t = setTimeout(\'fetchAttached()\', 2000);\r\n	}\r\n	function fetchAttached() {\r\n	    var updateElem = \'tdAttachedDocs\';\r\n		var fid,demographic_no= \"\";\r\n		fid = gup(\"fid\");\r\n		//fid=\'86\';\r\n		demographic_no= gup(\"demographic_no\");\r\n		var params = \"demo=\"+demographic_no+\"&requestId=\"+fid;\r\n		var fdid = \'${fdid}\';\r\n        console.log(params);\r\n	//	alert(demographic_no);\r\n		//alert(params);\r\n		params = \"requestId=\" + fdid;\r\n		var url = \"../eform/displayAttachedFiles.jsp\";\r\n		\r\n		$.ajax({\r\n			url : url,\r\n			data:params,\r\n			type:\'get\',  \r\n			success :function(request) {\r\n				//alert(request.responseText);\r\n				$(\"#tdAttachedDocs\").html(request);\r\n				// $(updateElem).innerHTML = request;\r\n			},\r\n			error:function(request) {\r\n				$(updateElem).innerHTML = \"<h3>Error: \" + + request.status + \"</h3>\";\r\n			}\r\n		});\r\n	}\r\n</script>\r\n\r\n<!-- START OF EDITCONTROL CODE --> \r\n<script language=\"javascript\">\r\n	//put any of the optional configuration variables that you want here\r\n	cfg_width = 720; //editor control width in pixels\r\n	cfg_height = 500; //editor control height in pixels\r\n	cfg_editorname = \'edit\'; //the handle for the editor                  \r\n	cfg_isrc = \'../eform/displayImage.do?imagefile=\'; //location of the button icon files\r\n	cfg_filesrc = \'../eform/displayImage.do?imagefile=\'; //location of the html files\r\n	cfg_template = \'blank.rtl\'; //default style and content template\r\n	cfg_formattemplate = \'<option value=\"\"> loading... </option></select>\';\r\n    cfg_layout = \'<table style=\"background-color:  #E1E1E1; width:\'+cfg_width+\'px\"><tr id=control1><td align=center>\\\r\n[bold][italic][underlined][strike][subscript][superscript]|[left][center][full][right]|[unordered][ordered][rule][undo][redo]|[indent][outdent][select-all][clean]\\\r\n</td></tr><tr id=control2><td align=center>\\\r\n[heading1][table][text-colour][hilight]|[image][link][attach][new-page]|[clock][date][cut][copy][delete][help]|[edit][export]\\\r\n</td></tr><tr id=control3><td align=center>[select-block][select-face][select-size][select-template]\\\r\n</td></tr></table>[edit-area]\'; \r\n	//cfg_layout = \'[all]\';             //adjust the format of the buttons here\r\n	insertEditControl(); // Initialise the edit control and sets it at this point in the webpage\r\n</script>\r\n<!-- END OF EDITCONTROL CODE -->\r\n\r\n<script>\r\n// example of non standard database pulls to create cache that can be pulled from a button\r\nfunction getAgeGender() {\r\n	// set the HTML contents of the letterhead\r\n	var ageGender = cache.get(\'age\')\r\n			+ \' year old  \'\r\n			+ cache.get(\'gender\');\r\n	return ageGender;\r\n}\r\n\r\n	cache.addMapping({\r\n		name: \"ageGender\", \r\n		values: [\"_age\",\"gender\",\"age\",\"sex\",\"ageComplex\"], \r\n		storeInCacheHandler: function (key, value) {\r\n			var text = getAgeGender();\r\n			cache.put(\"ageGender\", text);\r\n		},\r\n		cacheResponseHandler: function () {\r\n			if (checkKeyResponse(this.name)) {\r\n				doHtml(cache.get(this.name));\r\n			}\r\n		}\r\n	});\r\n</script>\r\n</head>\r\n\r\n<body bgcolor=\"FFFFFF\" onload=\"Start();\">\r\n\r\n<form method=\"post\" action=\"\" name=\"RichTextLetter\" >\r\n<input type=\"hidden\" name=\"WT\" id=\"WT\" oscarDB=m$WT#value>\r\n<textarea name=\"Letter\" id=\"Letter\" style=\"width:600px; display: none;\"></textarea>\r\n<div class=\"edit-controllers\" id=\"edit-controllers\"></div>\r\n\r\n    <div class=\"DoNotPrint\" id=\"control4\" style=\"position:absolute; top:5px; left: 740px;\"> <!-- left should be cfg_width +20 -->\r\n\r\n    <!-- Letter Head -->\r\n    <input type=\"button\" class=\"butn\" name=\"AddLetterhead\" id=\"AddLetterhead\" value=\"Letterhead\" onclick=\"printKey(\'letterhead\');\">\r\n    <br>\r\n    <!-- Adressee Select -->\r\n    <input type=\"text\" name=\"referral_name\" id=\"referral_name\" onKeyup=\"consultantSearch(this.value)\" placeholder=\" lastname, firstname\" autocomplete=\"off\" onFocus=\"toggleTempBin(1, \'referral_name\')\" onBlur=\"toggleTempBin(0, \'referral_name\')\"  style=\"font-size:12px; width:140px;\">\r\n        <div id=\"tempBin\" onmouseover=\"tempBinHover(true)\" onmouseout=\"tempBinHover(false)\"style=\"display:none;position:absolute;padding:4px; background-color:white;border:thin solid #cccccc;z-index:999;font-size:12px;\">You must enter at least 2 characters of a doctors name!</div>\r\n    <input type=\"hidden\" name=\"consultantFilter\" id=\"consultantFilter\">\r\n    <textarea name=\"CopyTo\" id=\"CopyTo\" type=\"hidden\" style=\"display:none;\" ></textarea>\r\n    <br>\r\n    <input type=\"button\" class=\"butn\" name=\"AddSelected\" id=\"AddSelected\" value=\"Paste Selected\" onclick=\"doHtml(getElementById(\'CopyTo\').value.replace(/(\\r\\n|\\n|\\r)/gm,\'<br>\'));console.log(getElementById(\'CopyTo\').value);\">\r\n    <br>\r\n    <!-- Referring Block -->\r\n    <input type=\"button\" class=\"butn\" name=\"AddReferral\" id=\"AddReferral\" value=\"Referring Block\" onclick=\"printKey(\'_ReferringBlock\');\">\r\n    <br>\r\n    <!-- Patient Block -->\r\n    <input type=\"button\" class=\"butn\" name=\"label\" value=\"Patient Label\" onclick=\"hist=\'label\';printKey(hist);\">\r\n    <br>\r\n	<input type=\"button\" class=\"butn\" name=\"Patient\" value=\"Patient Name\" onclick=\"printKey(\'first_last_name\');\">\r\n    <br>\r\n    <input type=\"button\" class=\"butn\" name=\"PatientSex\" value=\"Age & Gender\" onclick=\"printKey(\'ageGender\');\">\r\n    <br>\r\n    <!-- Social History -->\r\n    <input type=\"button\" class=\"butn\" name=\"AddSocialFamilyHistory\" value=\"Social History\" onclick=\"var hist=\'_SocialFamilyHistory\';printKey(hist);\">\r\n    <br>\r\n    <!--  Medical History -->\r\n    <input type=\"button\"  class=\"butn\" name=\"AddMedicalHistory\" value=\"Medical History\" width=30 onclick=\"var hist=\'medical_historyS\';printKey(hist);\">\r\n    <br>\r\n    <!--  Ongoing Concerns -->\r\n    <input type=\"button\" class=\"butn\" name=\"AddOngoingConcerns\" value=\"Ongoing Concerns\" onclick=\"var hist=\'ongoingconcerns\'; printKey(hist);\">\r\n    <br>\r\n    <!-- Reminders -->\r\n    <input type=\"button\" class=\"butn\" name=\"AddReminders\" value=\"Reminders\"\r\n	    onclick=\"var hist=\'reminders\'; printKey(hist);\">\r\n    <br>\r\n    <!-- Allergies -->\r\n    <input type=\"button\" class=\"butn\" name=\"Allergies\" id=\"Allergies\" value=\"Allergies\" onclick=\"printKey(\'allergies_des\');\">\r\n    <br>\r\n    <!-- Prescriptions -->\r\n    <input type=\"button\" class=\"butn\" name=\"Medlist\" id=\"Medlist\" value=\"Prescriptions\"	onclick=\"printKey(\'druglist\');\">\r\n    <br>\r\n    <!-- Other Medications -->\r\n    <input type=\"button\" class=\"butn\" name=\"OtherMedicationsHistory\" value=\"Other Medications\" onclick=\"printKey(\'other_medications_history\'); \">\r\n    <br>\r\n    <!-- Risk Factors -->\r\n    <input type=\"button\" class=\"butn\" name=\"RiskFactors\" value=\"Risk Factors\" onclick=\"printKey(\'risk_factors_ext\'); \">\r\n    <br>\r\n    <!-- Family History -->\r\n    <input type=\"button\" class=\"butn\" name=\"FamilyHistory\" value=\"Family History\" onclick=\"printKey(\'family_history\'); \">\r\n    <br>\r\n    <!-- Preventions -->  \r\n    <input type=\"button\" class=\"butn\" name=\"Preventions\" value=\"Preventions\" onclick=\"fpreventions()\">\r\n    <br>\r\n\r\n<script>\r\nfunction fpreventions(){\r\n    var sql2pass=\"SELECT   \'<br>\',  prevention_type as \'<b>PREVENTIONS\',\'&#160;&#160;&#160;Date:&#160;\' as \':\', LEFT(prevention_date,10) as \'</b>\' FROM preventions  WHERE demographic_no=\" + demographicNo + \" AND deleted=\'0\' GROUP by prevention_type, prevention_date \";\r\n    $(document).ready(function () {  \r\n        $.ajax({  \r\n            url: \"../oscarReport/RptByExample.do\" ,\r\n            data: { sql: sql2pass }\r\n        }).then(function(data) {  \r\n           //alert(data)\r\n           var elements = $(data);\r\n           var found = elements.find(\'.MainTableRightColumn table table\');\r\n           doHtml(found.html())\r\n        });  \r\n    });\r\n}\r\n</script>\r\n\r\n    <!-- Closing Salutation -->\r\n    <input type=\"button\" class=\"butn\" name=\"Closing\" value=\"Closing Salutation\" onclick=\"printKey(\'_ClosingSalutation\');\">\r\n    <br>\r\n    <!-- Signature Stamp -->\r\n    <input type=\"button\" class=\"butn\" name=\"stamp\" value=\"Stamp\" onclick=\"printKey(\'stamp\');\">\r\n    <br>\r\n    <!--  Current User -->\r\n    <input type=\"button\" class=\"butn\" name=\"User\" value=\"Current User\" onclick=\"var hist=\'current_user\'; printKey(hist);\">\r\n    <br>\r\n    <!-- Attending Doctor -->\r\n    <input type=\"button\" class=\"butn\" name=\"Doctor\" value=\"Doctor (MRP)\" onclick=\"var hist=\'doctor\'; printKey(hist);\">\r\n    <br>\r\n    <!-- Vitals -->\r\n    <input type=\"button\" class=\"butn\" name=\"Vitals\" value=\"Vitals\" onclick=\"labgrid2()\">\r\n    <br>\r\n    <!-- Common Labs -->\r\n    <input type=\"button\" class=\"butn\" name=\"LabGrid\" value=\"Lab Grid\" onclick=\"labgrid()\">\r\n    <br>\r\n   <!-- Attach File -->\r\n   <input type=\"button\" class=\"butn\" name=\"AttachFile\" value=\"Attach File\" onclick=\"popupEformUpload()\">\r\n    <table style=\"width:140px\">\r\n        <tbody>\r\n            <tr>\r\n                <td style=\"text-align: center\" id=\"tdAttachedLabel\" >Attached Files:</td>\r\n            </tr>\r\n            <tr>\r\n	            <td id=\"tdAttachedDocs\" > <!-- important as this is where the results get put--> </td>\r\n            </tr>\r\n            <tr id=\"trAttachedDocs\" >\r\n	            <td style=\"text-align: center\">Legend<br>\r\n	            <span class=\"doc\">Blue - Documents</span><br>\r\n	            <span class=\"lab\">Purple - Labs</span><br>\r\n	            <span class=\"hrm\">Red - Hrm</span><br>\r\n	            <span class=\"eform\">Green - EForm</span>\r\n	            </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"DoNotPrint\" >\r\n    <span id=\"arrow\" title=\"expand\" class=\"chevron\" onclick=\"collapseFooter();\">&nbsp^&nbsp;</span>\r\n    <input onclick=\"viewsource(this.checked)\" type=\"checkbox\"> HTML Source\r\n    <input onclick=\"usecss(this.checked)\" type=\"checkbox\">\r\n    Use CSS	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n    Subject: <input name=\"subject\" id=\"subject\" size=\"40\" type=\"text\">		 \r\n\r\n    <table id=\"controls4\">\r\n        <tr id=sig>\r\n            <td><div id=\"signatureInput\">&nbsp;</div></td>\r\n        </tr>\r\n        <tr>\r\n            <td><div id=\"faxControl\">&nbsp;</div></td>\r\n        </tr>      \r\n        <tr>\r\n            <td>\r\n            <input value=\"Submit\" name=\"SubmitButton\" type=\"submit\" onclick=\"saveRTL();  document.RichTextLetter.submit()\">\r\n            <input value=\"Print\" name=\"PrintSaveButton\" type=\"button\" onclick=\"document.getElementById(\'edit\').contentWindow.print();saveRTL();  setTimeout(\'document.RichTextLetter.submit()\',1000);\">\r\n            <input value=\"Reset\" name=\"ResetButton\" type=\"reset\">\r\n            <input value=\"Print\" name=\"PrintButton\" type=\"button\" onclick=\"document.getElementById(\'edit\').contentWindow.print();\">\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n</form>\r\n</body>\r\n</html>'
    WHERE `form_name` LIKE "%Rich Text Letter%" AND `form_time` IN ('00:00:00','16:00:00') AND DATE(`form_date`) < '2022-03-04' ;

-- PHC activate dashboard for admin and doctor roles.  Note update-2021-03-06.sql above adds the _dashboardChgUser 'o' ie none for doctor and 'x' ie full for admin
INSERT INTO  `secObjPrivilege` VALUES('admin',  '_dashboardManager', 'x', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_dashboardManager' ;
INSERT INTO  `secObjPrivilege` VALUES('admin',  '_dashboardDisplay', 'x', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_dashboardDisplay' ;
INSERT INTO  `secObjPrivilege` VALUES('admin',  '_dashboardDrilldown', 'x', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_dashboardDrilldown' ;
INSERT INTO  `secObjPrivilege` VALUES('doctor', '_dashboardManager', 'o', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_dashboardManager' ;
INSERT INTO  `secObjPrivilege` VALUES('doctor', '_dashboardDisplay', 'x', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_dashboardDisplay' ;
INSERT INTO  `secObjPrivilege` VALUES('doctor', '_dashboardDrilldown', 'x', 0, '999998') ON DUPLICATE KEY UPDATE objectName='_dashboardDrilldown' ;
INSERT INTO  `secObjPrivilege` VALUES('doctor', '_dashboardCommonLink','o',0,'999998') ON DUPLICATE KEY UPDATE objectName='_dashboardCommonLink' ;
INSERT INTO  `secObjPrivilege` VALUES('admin',  '_dashboardCommonLink','o',0,'999998') ON DUPLICATE KEY UPDATE objectName='_dashboardCommonLink' ;

-- PHC DEPRECATE Sunshiner
UPDATE `consentType` SET `active` = '0' WHERE `consentType`.`name` = 'Sunshiner frailty network'; 

-- PHC provide a default for CVCImmunizationName.CVCImmunizationId
ALTER TABLE `CVCImmunizationName` CHANGE `CVCImmunizationId` `CVCImmunizationId` VARCHAR(11) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL;

-- PHC after Dennis Warren some cleanup for data consistancy
UPDATE casemgmt_note cn
SET billing_code = ''
WHERE billing_code IS NULL;

UPDATE casemgmt_note cn
SET encounter_type = 'face to face encounter with client'
WHERE encounter_type IS NULL;

UPDATE preventions p
SET provider_name = NULL 
WHERE provider_name = '';

UPDATE preventionsExt p
SET val = ''
WHERE val IS NULL;

UPDATE measurements m
SET comments = ''
WHERE comments IS NULL;

UPDATE document
SET source = ""
WHERE source IS NULL;

UPDATE appointment a
SET type = ''
WHERE type IS NULL;

UPDATE appointment a
SET resources = ''
WHERE resources IS NULL;

UPDATE appointment a
SET location = ''
WHERE location IS NULL;

UPDATE tickler
SET service_date = "0001-01-01"
WHERE service_date IS NULL;

UPDATE demographiccust
SET cust1 = ''
WHERE cust1 IS NULL;

UPDATE demographiccust
SET cust2 = ''
WHERE cust2 IS NULL;

UPDATE demographiccust
SET cust3 = ''
WHERE cust3 IS NULL;

UPDATE demographiccust
SET cust4 = ''
WHERE cust4 IS NULL;

UPDATE drugs
SET takemax = 0
WHERE takemax IS NULL;

UPDATE drugs
SET takemin = 0
WHERE takemin IS NULL;

UPDATE demographic 
SET postal = '' 
WHERE postal IS NULL;

UPDATE demographic
SET title = ""
WHERE title IS NULL;

UPDATE demographic
SET email = ""
WHERE email IS NULL;

UPDATE demographic
SET ver = ""
WHERE ver IS NULL;

UPDATE demographic
SET roster_status = ""
WHERE roster_status IS NULL;

-- UPDATE demographic
-- SET patient_status_date = now()
-- WHERE patient_status_date IS NULL;

UPDATE demographic
SET date_joined = now()
WHERE date_joined IS NULL;

UPDATE demographic
SET spoken_lang = ""
WHERE spoken_lang IS NULL;

UPDATE demographic
SET lastUpdateDate = NOW()
WHERE lastUpdateDate IS NULL;

UPDATE demographic 
SET month_of_birth =  CONCAT('0', month_of_birth)
WHERE CHAR_LENGTH( month_of_birth ) < 2;

UPDATE demographic
SET date_of_birth =  CONCAT('0', date_of_birth)
WHERE CHAR_LENGTH( date_of_birth ) < 2;

UPDATE demographic 
SET patient_status = 'AC'
WHERE patient_status IS NULL;

UPDATE demographic
SET family_doctor = "<rdohip></rdohip><rd></rd>"
WHERE family_doctor IS NULL;

UPDATE demographic
SET sin = ""
WHERE sin IS NULL;

UPDATE demographic
SET country_of_origin = "-1"
WHERE country_of_origin IS NULL;

update demographic 
set phone = replace(phone, '\n', '')
where phone LIKE "%\n%";

UPDATE provider 
SET `address` = ''
WHERE `address` IS NULL;

UPDATE provider 
SET `phone` = ''
WHERE `phone` IS NULL;

UPDATE provider 
SET `work_phone` = ''
WHERE `work_phone` IS NULL;

UPDATE provider 
SET `comments` = ''
WHERE `comments` IS NULL;

UPDATE provider 
SET `provider_activity` = ''
WHERE `provider_activity` IS NULL;

UPDATE provider 
SET `lastUpdateUser` = '999998'
WHERE `lastUpdateUser` IS NULL;

UPDATE provider 
SET `lastUpdateDate` = NOW()
WHERE `lastUpdateDate` IS NULL;

UPDATE provider 
SET `practitionerNoType`= ''
WHERE `practitionerNoType` IS NULL;

-- PHC cleanup  PROBLEM ticklers survive death or inactivation
-- Delete Active ticklers on deceased patients 
UPDATE `tickler` t, `demographic` d SET t.status='D', t.update_date=NOW() 
WHERE d.demographic_no = t. demographic_no AND d.patient_status IN ('DE') AND t.status ='A';

-- Inactive patients may still need the tickler, probably best not to blanket them deleted
-- UPDATE `tickler` t, `demographic` d SET t.status='D', t.update_date=NOW() 
-- WHERE d.demographic_no = t. demographic_no AND d.patient_status IN ('IN') AND t.status ='A';

-- PHC Cleanup PROBLEM ticklers get lost if the provider becomes inactive
-- reassign future tickler provider to current listed one for the demographic when the tickler provider is inactive
UPDATE `tickler` t, demographic d, provider p SET `task_assigned_to`=d.provider_no, t.update_date=NOW()
WHERE d.demographic_no=t.demographic_no AND d.patient_status="AC" AND task_assigned_to =p.provider_no AND p.status="0" AND service_date >= NOW();  


-- PHC per Ian Pun, patch up the errorcodes
CREATE TABLE IF NOT EXISTS `billing_on_errorCode` (
  `code` varchar(5) NOT NULL,
  `description` varchar(255) NOT NULL DEFAULT ''
);


INSERT INTO `billing_on_errorCode` (`code`, `description`) VALUES
('20', 'Resubmit with Manual review documentation '),
('30', 'this service is not a benefit of OHIP'),
('32', 'OHIP records show service(s) on this day claimed previously'),
('33', 'Approved'),
('35', 'OHIP records show this service rendered has been claimed previously (used on  Pay Practitioner duplicate claims)'),
('36', 'OHIP records show this service has been rendered by another Practitioner, Group, LAB'),
('37', 'the listed benefit for this code in 0 LMS units'),
('40', 'this service allowed only once for same patient'),
('48', 'paid in accordance with the OHIP schedule of benefits'),
('49', 'Paid according to the average free for this service ??? independent considerations will be given if clinical records/operative reports are presented'),
('50', 'fee schedule code changed in accordance with OHIP schedule of benefits'),
('51', 'Fee allowed according to the appropriate item in the current Ministry Schedule of Benefits'),
('52', 'Fee-for-service assessed by medical consultant'),
('53', 'fee allowed according to appropriate item in a previous OHIP schedule of benefits'),
('54', 'interim payment- claim under review'),
('55', 'this deduction is an adjustment on an earlier account (applicable only to system generated negates effective May/97'),
('56', 'claim under review'),
('57', 'this payment is an adjustment on an earlier account'),
('58', 'claimed by another physician within group'),
('59', 'practitionerNULLs notification - WCB claims'),
('60', 'not a benefit of the reciprocal medical billing agreement'),
('61', 'OOC claim paid at greater than $9999.99 (prior approval on file)'),
('65', 'service included in approved hospital payment'),
('68', 'hospital accommodation paid at standard ward rate'),
('69', 'elective services paid at 75% of OHIP  schedule of  rates'),
('70', 'OHIP records show corresponding procedure(s) on this day claimed previously by another physician'),
('80', 'technical fee adjustment for hospitals and IHFs'),
('9', 'Fee Schedule Codes used is not correct ??? resubmit using approprate codes from OHIP Schedule of Benefits'),
('A02', 'prev. OBS service'),
('A03', 'MRP Visit already Pd.'),
('A08', 'one assess at delivery'),
('A2A', 'outside of age limit'),
('A2B', 'wrong sex for service'),
('A34', 'multiple dup. claims'),
('A36', 'claimed by other practitioner.'),
('A3E', 'no suce F.S. code'),
('A3F', 'no fee for service'),
('A3G', 'fee billed low - check'),
('A3H', 'max # ser FSM ref MC'),
('A3J', 'fee outside accept range'),
('A3K', 'auto adj. on prev. man ad'),
('A3L', 'Other New Pt. Fee Alrdy Pd'),
('A4A', 'to assess see guideline'),
('A4D', 'ineligible specialty'),
('A4E', 'manual assess - code 9'),
('A4F', 'MRI review by MC'),
('A6A', 'no claims ref file�A'),
('A7A', 'claim no. not found �.A'),
('A81', 'rule error assess & report'),
('A87', 'FSC mismatch'),
('A88', 'Adjustment payment type unequal'),
('A89', 'pay OOP practice # unequal'),
('A8A', 'claim # previous on file'),
('A91', 'maximum 99 pat. ID records'),
('A93', 'maximum 10000 claim item record'),
('A94', 'claim item not on file'),
('A95', 'Claim Item On File'),
('A96', 'claim # previous on file'),
('A97', 'not all items changed'),
('A98', 'pay sub disallowed claim'),
('A99', 'wrong patient info'),
('AC4', 'unacceptable Ref. #'),
('AD1', 'Corresponding procedure not claimed by same or different physician'),
('AD3', 'not allowed with visit'),
('AD4', 'refer to MC'),
('AD5', 'proceedure allowed previously'),
('AD8', 'not allowed alone'),
('AD9', 'Premium Not Allow Alone'),
('ADC', 'add. proc. at 50%'),
('ADD', 'add. proc. at 50%'),
('ADJ', 'These items may not be claimed together'),
('ADM', 'emerg. equiv/other visits'),
('ADP', 'Mutally Exclus Dental'),
('AEV', 'Visit Only Allowed'),
('AF1', 'multiple frac/dis.'),
('AF5', 'fracture. fee incl.'),
('AG1', 'crit. care alrdy PD'),
('AG2', 'crit. care alrdy PD'),
('AH1', 'On-call Admit Same Day'),
('AH2', 'Hosp. Assess. Other Phys'),
('AH5', 'Admit Date Mismatch'),
('AH6', 'emerg. assess. same day'),
('AH7', 'hosp. assess. same day'),
('AH8', 'invalid ADM date/hosp #'),
('AH9', 'diagnostic service same day'),
('AHA', 'FSC and Time Period Mismatch'),
('AHB', 'overlapping visits'),
('AHD', 'extra visits in wk/mth'),
('AHE', '2 specialties, same period'),
('AHF', 'con/sup care same period'),
('AI4', 'claimed by other IHF/PHY'),
('AMM', 'Max LTC Monthly Fee Apply'),
('AMO', 'multiple surgery. other dr.'),
('AMS', 'multiple procedures'),
('AP', 'this payment is in accordance with legislation - if you disagree with the payment you may appeal to the General Manager'),
('AP2', 'max fee premium/NB care'),
('AP4', 'NIC only allowed'),
('ARD', 'possible duplicate with RMBS'),
('ARF', 'Technical service code requires referring physician'),
('AS8', 'pre-op Cons/Assess'),
('AS9', 'post-op visits'),
('AV3', 'proc. only allowed'),
('C1', 'allowed as repeat/limited consultation'),
('C2', 'allowed at re-assessment fee'),
('C3', 'allowed at minor assessment fee'),
('C4', 'consultation not allowed with this service - paid as assessment'),
('C5', 'allowed as multiple systems assessment'),
('C6', 'allowed as Type 2 admission assessment'),
('C7', 'an admission assessment (C003A) or general re-assessment (C004A) may not be claimed by any physician within 30 days following a pr-dental/pre-operative assessment'),
('C8', 'Payment reduce to geriatric consultation fee ??? maximum number of comprehensive geriatric consultation has been reached '),
('C9', 'Allowed as in-patient interim admission orders ??? initial assessment already claimed by other physician'),
('CNA', 'Counselling NOT Allowed'),
('COA', 'counseling not allowed'),
('code', 'description'),
('D1', 'allowed as repeat procedure - initial procedure previously claimed'),
('D2', 'additional procedures allowed at 50%'),
('D3', 'not allowed in addition to visit fee'),
('D4', 'procedure allowed at 50% with visit'),
('D5', 'procedure already allowed - visit fee adjustment'),
('D6', 'limit of payment for this procedure reached'),
('D7', 'not allowed in addition to other procedure'),
('D8', 'allowed with specific procedures only'),
('D9', 'not allowed to a hospital department'),
('DA', 'maximum for this procedure reached - paid as repeat/chronic procedure'),
('DB', 'Other dialysis procedure already paid'),
('DC', 'procedure paid previously not allowed in addition to this procedure - fee adjusted to pay the difference'),
('DD', 'Not allowed as diadnostic code is unrelated to original eye exam'),
('DE', 'LAB tests already paid - visit fee adjusted'),
('DF', 'Corresponding fee code has not been claimed or was approved at zero'),
('DG', 'diagnostic services for hospital in-patients are not payable on a fee-for-service basis - included in the hospital global budget'),
('DH', 'ventilator support allowed with haemodialysis'),
('DL', 'allowed as laboratory tests in private office'),
('DM', 'Paid/Disallowed in accordance with MOH policy regarding an Emergency Department Equivalent'),
('DN', 'allowed a prudenal block in addition to procedure - as per OHIP policy'),
('DP', 'procedure paid preciously allowed at 50% in addition to this procedure - fee adjusted to pay the difference'),
('DS', 'not allowed ??? mutually exclusive code billed'),
('DT', 'In-patient technical fee not allowed'),
('DV', 'Service is included in Monthly Management Fee for LTC Patient'),
('DX', 'Diagnostic code not eligible with FSC'),
('E1', 'service date prior to start of eligibility'),
('E2', 'incorrect version code for service date'),
('E4', 'service date after the eligibility termination date'),
('E5', 'service date not within an eligible period'),
('EA', 'service date is not within an eligible period- service provided on or after the 20th of this month will not be paid unless eligibility status changes'),
('EB', 'additional payment for the claim shown'),
('EF', 'incorrect version code - services provided on or after the 20th of this month will not be paid unless the current version code is provided'),
('EF1', 'IHF not approved on S/D'),
('EF2', 'IHF not Lic. For FSC on S/D'),
('EF3', 'insured service excl. from IHF'),
('EF4', 'Prov. Not IHF on S/D'),
('EF5', 'ins. Srv. Excl. from #991000'),
('EF7', 'Ref. Phys. # required - IHF SRV'),
('EF8', 'INULLNULL FSC claimed, non IHF'),
('EF9', 'mobile site # required'),
('EH1', 'service. Date <eligibility. Eff. Date'),
('EH2', 'mismatched version code'),
('EH4', 'ser. Date >eligibility. end date'),
('EH5', 'service. Date not in eligibility. Period'),
('ENB', 'unregistered newborn'),
('EP1', 'Enrolment Transaction Not Allow'),
('EP2', 'Cannot Use Q-Code to Enrol/Re-enrol'),
('EP3', 'Incorrect Service Date ??? Check Date Of Enrolment'),
('EP4', 'Enrolment Restriction Applied'),
('EP5', 'Incorrect Fee Code for this Group Type'),
('EPA', 'network billing not approved'),
('EPC', 'patient not rostered/rostered to another network'),
('EPD', 'roster/HRR payment discrepancy'),
('EPE', 'network affiliation error'),
('EPF', 'enrolment date mismatch'),
('EQ1', 'clinic/Dr not on file'),
('EQ2', 'specialty mismatch'),
('EQ3', 'pay sub. Claim- Dr. option'),
('EQ4', 'pay Dr. claim- sub option'),
('EQ5', 'Lab inactive on S/date'),
('EQ6', 'incorrect referral #'),
('EQ8', 'Lab. Not licensed for FSC'),
('EQ9', 'Lab. # not on file'),
('EQA', 'confirm registered spec.'),
('EQB', 'solo practice inact. On S/D'),
('EQC', 'group not registered on HRR'),
('EQD', 'group inactive on S/D'),
('EQE', 'practice not in group on S/D'),
('EQF', 'aff. Practice inactive on S/D'),
('EQG', 'ref. Lab. Not req on HRR'),
('EQH', 'group agreement error on CPDB'),
('EQI', 'contact characteristics error'),
('EQJ', 'Pract. Not Elig. On S/D '),
('EQK', 'MNI Does Not Meet Criteria'),
('EQL', 'Pract. Not Elig. to Claim FSC '),
('EQS', 'Practice Criteria Not Met'),
('ERF', 'Ref. Phys. # currently ineligible for referrals'),
('ESD', 'app. Group affiliNULLNULLn S/D'),
('EV', 'check health card for current version (applicable for service dates prior to Feb 1/93'),
('F1', 'additional fractures/dislocations allowed at 85%'),
('F2', 'allowed in accordance with transferred care'),
('F3', 'previous attempted reductions (open or closed) allowed at 85%'),
('F5', 'two weeks aftercare included in fracture fee'),
('F6', 'allowed as minor/partial assessment'),
('FF', 'additional payment for the claim shown'),
('G1', 'other critical/comprehensive care already paid'),
('GF', 'coverage lapsed - bill patient for future claims'),
('H1', 'Admission assessment or ER assessment already paid'),
('H2', 'allowed as subsequent visit - initial visit previously claimed'),
('H3', 'maximum fee allowed per week after 5th week'),
('H4', 'maximum fee allowed per week after 6th week to pediatricians'),
('H5', 'maximum fee allowed per month after the 13th week'),
('H6', 'allowed as supportive or concurrent care'),
('H7', 'allowed as chronic care'),
('H8', 'hospital number and/or admission date required for in-hospital service'),
('H9', 'concurrent care already claimed by another doctor'),
('HA', 'admission assessment claimed by another physician - hospital visit fee applied'),
('HCC', 'Not complex/vulnerable'),
('HF', 'concurrent or supportive care already claimed in period'),
('HM', 'not valid master hosp. # on date of service'),
('I2', 'Service is globally funded'),
('I3', 'FSC is not on the IHF license profile for the date specified'),
('I4', 'record shows service has been rendered by another Practitioner/Group/IHF'),
('I5', 'service is globally funded and FSC is not on IHF license profile'),
('I6', 'Premium not applicable'),
('I8', 'Confirmation not received'),
('J3', 'approved for stale dated processing'),
('J7', 'claim submitted six months after service date'),
('L1', 'this service paid to another laboratory'),
('L2', 'not allowed to non-medical laboratory director'),
('L3', 'not allowed in addition to this laboratory procedure'),
('L4', 'not allowed to attending physicians'),
('L5', 'not allowed in addition to other procedure paid to another laboratory'),
('L6', 'procedure paid previously to another laboratory, not allowed in addition to this procedure - fee adjusted to pay the difference'),
('L7', 'not allowed - referred specimen'),
('L8', 'not to be claimed with prenatal/fetal assessment as of July 1/93'),
('L9', 'laboratory services for hospital in-patients or out-patients are not payable on a fee-for-service basis - included in the hospital budget'),
('LA', 'laboratory service is funded by special laboratory agreement'),
('LS', 'paid in accordance to special laboratory agreement'),
('M1', 'maximum feel allowed for these services has been reached'),
('M2', 'maximum allowance for radiographic examination(s) by 1 or more practitioners'),
('M3', 'Maximum fee allowed for prenatal care'),
('M4', 'maximum fee allowed for these services by 1 or more practitioners has bee reached'),
('M5', 'monthly maximum has been reached'),
('M6', 'maximum fee allowed for special visit premium- additional patient seen'),
('MC', 'Maximum of 2 patient case conferences has been reached in a 12 month period'),
('MN', 'Maximum number of sessions has been reached'),
('MS', 'Maximum allowable for sleep studies in a 12-month period by one physician has been reached'),
('MX', 'Maximum of 2artroscopy ???R??? codes with E595 has been reached'),
('O1', 'fee for obstetric care apportioned'),
('O2', 'previous prenatal care already claimed'),
('O3', 'previous prenatal care already claimed by another doctor'),
('O4', 'office visits relating to pregnancy and claimed prior to delivery included in obstetric fee'),
('O5', 'not allowed in addition to delivery'),
('O6', 'medical induction/stimulating of labour allowed once per pregnancy'),
('O7', 'allowed as subsequent prenatal visit - initial prenatal visit already claimed'),
('O8', 'allowed once per pregnancy'),
('O9', 'not allowed in addition to post-natal care'),
('P2', 'maximum fee allowed for low birth weight care'),
('P3', 'maximum feel allowed for newborn care'),
('P4', 'fee for newborn care does not apply when newborn baby is ill'),
('P5', 'over-age for pediatric rates of payment'),
('P6', 'over-age for well-baby care'),
('P9', 'Complex New Patient'),
('Q8', 'LAB not licensed to perform this test on date of service'),
('R01', 'missing HSN'),
('R02', 'invalid HSN'),
('R03', 'invalid/missing province code'),
('R04', 'service excluded from RMBS'),
('R05', 'service DT prior 880401/PG/ON'),
('R06', 'wrong provider for RMBS'),
('R07', 'invalid pay type for RMBS'),
('R08', 'invalid referral number'),
('R09', 'claim header 2 missing - RMB'),
('R1', 'only one health exam allowed in a 24-month period'),
('RD', 'duplicate, paid in RMBS'),
('S1', 'bilateral surgery, one stage, allowed at 85% higher than unilateral'),
('S2', 'bilateral surgery, two stage, allowed at 85% higher than unilateral'),
('S3', 'second surgical procedure allowed at 85%'),
('S4', 'procedure fee reduced when paid with related surgery or anesthetic'),
('S5', 'not allowed in addition to major surgical fee'),
('S6', 'allowed as subsequent procedure - initial procedure - initial procedure previously claimed'),
('S7', 'normal preoperative/postoperative care included in surgical fee'),
('SA', 'surgical procedure allowed at consultation fee'),
('SB', 'normal preoperative visit included in surgical fee - visit fee previously paid - surgical fee adjusted'),
('SC', 'not allowed, major preoperative visit already claimed'),
('SD', 'not allowed, team/Assit fee already clamed'),
('SE', 'major preoperative visit previously paid & admission assessment previously paid - surgery reduced by the admission assessment'),
('SR', 'fee reduced based on MOH utilization adjustment - contact your provider'),
('T1', 'fee allowed according to surgery claim'),
('TH', 'fee reduced per HOH payment policy - contact your physician'),
('V02', 'invalid region code'),
('V04', 'error in claim number'),
('V05', 'error - claim # /service date'),
('V07', 'invalid practice number'),
('V08', 'invalid specialty code'),
('V09', 'invalid referral number'),
('V1', 'allowed as repeat assessment - initial assessment previously claimed'),
('V10', 'invalid surname'),
('V12', 'invalid first name'),
('V13', 'invalid birth date'),
('V14', 'invalid sex'),
('V16', 'unacceptable diagnostic. Code # of services'),
('V17', 'invalid payment type'),
('V18', 'invalid ADM/ first visit date'),
('V19', 'Invalid Chiro Diag Code'),
('V2', 'allowed as extra patient seen in the home'),
('V20', 'Unaccept. Age/Diag Code'),
('V21', 'diagnostic code required'),
('V22', 'invalid diagnostic code'),
('V23', 'check # of services'),
('V25', 'invalid action code'),
('V26', 'invalid item number'),
('V27', 'supply same action code'),
('V28', 'invalid hospital number'),
('V29', 'Invalid in/out Indicator 1-IN 2-OUT'),
('V3', 'not allowed in addition to procedure fee'),
('V30', 'FSC/DX code combination NAB'),
('V31', 'error in claim header'),
('V33', 'missing payee address'),
('V34', 'invalid service code'),
('V35', 'invalid OOP/00C service'),
('V36', 'check sessional input criteria'),
('V37', 'incomplete payee address'),
('V38', 'inconsistent claim ident.'),
('V39', 'allowed items only 99'),
('V4', 'date of service was not a Saturday, Sunday or a statutory holiday'),
('V40', 'invalid fee schedule code'),
('V41', 'invalid fee billed'),
('V42', 'invalid number of services'),
('V44', 'invalid assessment code'),
('V46', 'invalid fee approved'),
('V47', 'fee not divisible'),
('V48', 'missing explanatory code'),
('V5', 'only 1 OVA allowed within a 12-month period for age 19 & under or 65 & over & one within 24 months for age 20-64'),
('V50', 'SVC DRE pre initial visit'),
('V51', 'invalid location code'),
('V6', 'allowed as minor assessment - initial assessment already claimed'),
('V60', 'invalid explanatory code'),
('V62', 'Invalid Serv Location Indic'),
('V63', 'invalid Ref. Lab. Number'),
('V64', 'Missing Serv Location Indic'),
('V65', 'Missing Master Number'),
('V66', 'Missing Admission Date'),
('V67', 'Missing Mstr No/Adm Date'),
('V68', 'Incorr Serv Location Indic'),
('V69', 'Serv Dte Invalid for SLI'),
('V7', 'allowed as specific re-assessment fee'),
('V70', 'create date <service date'),
('V8', 'this service paid at lower fee as per OHIP policy'),
('V9', 'only one initial office visit allowed within a 12-month period'),
('V94', 'invalid bill 94 adjustment'),
('V95', 'one bill 94 adjustment per claim'),
('V96', 'invalid bill 147 adjustment'),
('V97', 'one bill147 adjustment per claim'),
('V98', 'Wrong Service Date'),
('VA', 'procedure fee reduced - consultation/visit fees not allowed in addition'),
('VB', 'additional OVA is allowed once within 2nd year of patients aged 20-64 following a periodic OVA'),
('VG', 'only 1 geriatric general assessment premium per patient per 12-month period'),
('VH1', 'health # is invalid'),
('VH2', 'health # is missing'),
('VH3', 'invalid payment program'),
('VH4', 'invalid version code'),
('VH5', 'OHIP# required for service date'),
('VH8', 'HN not registered with MOH'),
('VH9', 'HN Not Regd with MOH'),
('VHA', 'OHIP# part.# not on RPDB for HN'),
('VHO', 'header 2 and HN present'),
('VJ5', 'invalid service date'),
('VJ7', 'stale-dated claim'),
('VM', 'Oculo-visual minor assessment is allowed within 12 consecutive months following a major eye exam'),
('VP', 'Allowed with special visit only'),
('VS', 'date of service was a Sat., Sun, or statutory holiday'),
('VW1', 'invalid WCB service'),
('VX', 'Completexity premium not applicable to visit fee'),
('W3', 'Claims submission > 3 m , will still be processed for payment'),
('X2', 'G.I. Tract includes cline & video tape'),
('X3', 'G.I. Tract includes survey file of abdomen'),
('X4', 'Only one BMD allowed within a 24-month period for low risk patient')
ON DUPLICATE KEY UPDATE description=description;

-- PHC per Earl W and Eugene R, speed up eforms  2022-12-02
CALL CreateIndex('eform_data','','idx_eform_data_fid_status_demo','`fid`, `status`, `demographic_no`');
CALL DeleteIndex('eform_data','idx_eform_data_fid');
CALL DeleteIndex('eform_data','id');
CALL DeleteIndex('eform_data','idx_eform_data_fid');
CALL DeleteIndex('eform_data','idx_eform_data_status');
CALL DeleteIndex('eform_data','patient_independentIndex');


CALL CreateIndex('eform_values','','idx_eform_values_demo_varname_varvalue','`demographic_no`, `var_name`, `var_value`(30)');
CALL CreateIndex('eform_values','','idx_eform_values_fdid_varname','`fdid`, `var_name`');
CALL DeleteIndex('eform_values','fdidIndex');
CALL DeleteIndex('eform_values','eform_values_varname_varvalue');

-- update-2023-03-01.sql
-- add diagnostic codes
INSERT INTO `diagnosticcode`(`diagnostic_code`, `description`, `status`, `region`) VALUES ('80', 'Coronavirus suspected or confirmed', 'A', 'ON') ON DUPLICATE KEY UPDATE region='ON';
INSERT INTO `diagnosticcode`(`diagnostic_code`, `description`, `status`, `region`) VALUES ('81', 'Long COVID post COVID condition PCC', 'A', 'ON') ON DUPLICATE KEY UPDATE region='ON';

-- upgrade jquery from 1.4.2 to 1.12.3 to restore  eform pdf and printing functions.  
-- Note that the update for eform_data will be database intensive in older installations and may not be benign
UPDATE eform SET form_html = REPLACE(form_html, "${oscar_javascript_path}jquery/jquery-1.4.2.js", "../js/jquery-1.12.3.js");
-- UPDATE eform_data SET form_data = REPLACE(form_data, "${oscar_javascript_path}jquery/jquery-1.4.2.js", "../js/jquery-1.12.3.js");