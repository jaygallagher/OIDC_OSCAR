/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `dashboard` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `creator` varchar(11) DEFAULT NULL,
  `edited` datetime DEFAULT NULL,
  `active` bit(1) DEFAULT NULL,
  `locked` bit(1) DEFAULT NULL,
  PRIMARY KEY (`id`)
);
/*!40101 SET character_set_client = @saved_cs_client */;
SET @oscardoc_provider_no='999998';
INSERT INTO `dashboard` (`name`, `description`, `creator`, `edited`, `active`, `locked`) VALUES ('BC Billing – CDMs, 14066, 14076,14078','',@oscardoc_provider_no,NOW(),'','\0');
SET @dashboardId = LAST_INSERT_ID();

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `indicatorTemplate` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `dashboardId` int(11) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `category` varchar(255) DEFAULT NULL,
  `subCategory` varchar(255) DEFAULT NULL,
  `framework` varchar(255) DEFAULT NULL,
  `frameworkVersion` date DEFAULT NULL,
  `definition` tinytext,
  `notes` tinytext,
  `template` mediumtext,
  `active` bit(1) DEFAULT NULL,
  `locked` bit(1) DEFAULT NULL,
  `shared` tinyint(1) DEFAULT NULL,
  `metricSetName` varchar(255) DEFAULT NULL,
  `metricLabel` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `indicatorTemplate`
--
-- WHERE:  dashboardId=(select id from dashboard where name='BC Billing – CDMs, 14066, 14076,14078')

INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'COPD (G14053)','Billing','CDM Incentive Program','GP Services Committee: Chronic Disease Management Incentives','2016-01-01','Annual chronic care incentive for full service most responsible general practitioner.','\n			Details here: https://sgp.bc.ca/fee/chronic-obstructive-pulmonary-disease-copd-chronic-care-incentive-copy/\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>CDM Incentive Program</subCategory>\n		<name>COPD (G14053)</name>\n		<definition>Annual chronic care incentive for full service most responsible general practitioner.</definition>\n		<framework>GP Services Committee: Chronic Disease Management Incentives</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Details here: https://sgp.bc.ca/fee/chronic-obstructive-pulmonary-disease-copd-chronic-care-incentive-copy/\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>10-01-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14053\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />			\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"\'\'\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"491,492,494,496\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />	\n		</params>\n		\n        <range>\n            <upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n            <lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n        </range>\n\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT			 \n				ROUND( IFNULL( SUM( CASE\n					WHEN d.demographic_no &gt; 0\n					THEN 1\n					ELSE 0\n				END ),0), 1 ) AS \"Patients up to date\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) )  \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							ELSE 0\n					 END\n				ELSE 0 \n				END ),0), 1) AS \"Patients billable\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n						AND IFNULL(VISITS.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) &lt; ${visitsqualifier}\n				THEN 1\n				ELSE 0\n				END ),0), 1) AS \"Patients recall\" \n\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) GVISIT\n				ON ( GVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode}\n					GROUP BY demographic_no\n				) ACPVISIT\n				ON ( ACPVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code LIKE ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code IN ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}			\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>10-01-2017</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14053\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />			\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"\'\'\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"491,492,494,496\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />\n		</params>\n			\n		<range>\n			<upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n			<lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n		</range>\n		\n		<displayColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />	\n					\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) > 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) >= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPVISIT.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />	\n				\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%m-%d-%Y\' )\" title=\"Dx Date\" primary=\"false\" />			\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" /> \n			<column id=\"groupDate\" name=\"IFNULL(DATE_FORMAT(GVISIT.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last Grp Visit\" primary=\"false\" />\n			<column id=\"acpDate\" name=\"IFNULL(DATE_FORMAT(ACPVISIT.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last ACP Visit\" primary=\"false\" />\n			\n		</displayColumns>\n		<exportColumns>\n 			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />	\n					\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) > 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) >= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPVISIT.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />	\n				\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%m-%d-%Y\' )\" title=\"Dx Date\" primary=\"false\" />			\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" /> \n			<column id=\"groupDate\" name=\"IFNULL(DATE_FORMAT(GVISIT.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last Grp Visit\" primary=\"false\" />\n			<column id=\"acpDate\" name=\"IFNULL(DATE_FORMAT(ACPVISIT.service, \'%m-%d-%Y\' ), \'\')\" title=\"Last ACP Visit\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT *\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) GVISIT\n				ON ( GVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode}\n					GROUP BY demographic_no\n				) ACPVISIT\n				ON ( ACPVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code LIKE ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code IN ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}\n			ORDER BY `CDM Status` DESC				\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n','','\0',0,NULL,NULL);
INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'Diabetes Mellitus (G14050) v2','Billing','CDM Incentive Program','GP Services Committee: Chronic Disease Management Incentives','2016-01-01','Annual chronic care incentive for full service most responsible general practitioner.','\n			Full details here: https://sgp.bc.ca/fee/diabetes-chronic-care-incentive-copy/			\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>CDM Incentive Program</subCategory>\n		<name>Diabetes Mellitus (G14050) v2</name>\n		<definition>Annual chronic care incentive for full service most responsible general practitioner.</definition>\n		<framework>GP Services Committee: Chronic Disease Management Incentives</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Full details here: https://sgp.bc.ca/fee/diabetes-chronic-care-incentive-copy/			\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>10-01-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14050\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />		\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"\'\'\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"250\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />	\n		</params>\n		\n        <range>\n            <upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n            <lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n        </range>\n\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT			 \n				ROUND( IFNULL( SUM( CASE\n					WHEN d.demographic_no &gt; 0\n					THEN 1\n					ELSE 0\n				END ), 0), 1 ) AS \"Patients up to date\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) )  \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							ELSE 0\n					 END\n				ELSE 0 \n				END ), 0), 1) AS \"Patients billable\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n						AND IFNULL(VISITS.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) &lt; ${visitsqualifier}\n				THEN 1\n				ELSE 0\n				END ), 0), 1) AS \"Patients recall\" \n\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) GVISIT\n				ON ( GVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode}\n					GROUP BY demographic_no\n				) ACPVISIT\n				ON ( ACPVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code LIKE ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code LIKE ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}			\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>08-29-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />			\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14050\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />		\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"\'\'\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"250\" />\n			\n			<parameter id=\"a1cType\" name=\"a1c_type\" value=\"\'A1C\'\" />\n			<parameter id=\"bloodpressureType\" name=\"bloodpressure_type\" value=\"\'BP\'\" />\n			<parameter id=\"egfrType\" name=\"egfr_type\" value=\"\'EGFR\'\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />	\n		</params>\n			\n		<range>\n			<upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n			<lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n		</range>\n		\n		<displayColumns>\n 			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone\" primary=\"false\" />\n			<column id=\"hga1c\" name=\"CONCAT(IFNULL(A1C.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(A1C.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last A1C\" primary=\"false\" />\n			<column id=\"bloodPressure\" name=\"CONCAT(IFNULL(BP.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(BP.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"egfr\" name=\"CONCAT(IFNULL(EGFR.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(EGFR.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last GFR\" primary=\"false\" />\n									\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) &gt; 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} ) AND ( IFNULL(BILL.service_date, 0) = 0 ) AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPGRP.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%d-%m-%Y\' )\" title=\"Dx Date\" primary=\"false\" />					\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%d-%m-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" />	\n			<column id=\"acpgrp\" name=\"IFNULL(DATE_FORMAT(ACPGRP.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Allied or grp Visit\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n 			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone\" primary=\"false\" />\n			<column id=\"hga1c\" name=\"CONCAT(IFNULL(A1C.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(A1C.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last A1C\" primary=\"false\" />\n			<column id=\"bloodPressure\" name=\"CONCAT(IFNULL(BP.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(BP.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"egfr\" name=\"CONCAT(IFNULL(EGFR.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(EGFR.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last GFR\" primary=\"false\" />\n									\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) &gt; 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} ) AND ( IFNULL(BILL.service_date, 0) = 0 ) AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPGRP.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%d-%m-%Y\' )\" title=\"Dx Date\" primary=\"false\" />					\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%d-%m-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" />	\n			<column id=\"acpgrp\" name=\"IFNULL(DATE_FORMAT(ACPGRP.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Allied or grp Visit\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			SELECT *\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) &gt; 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) &gt; 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) &gt; 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode} OR billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) ACPGRP\n				ON ( ACPGRP.demographic_no = d.demographic_no)\n				LEFT JOIN (\n				SELECT mbp.demographicNo, mbp.dataField, mbp.dateObserved\n					FROM measurements mbp\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${bloodpressureType}\n						GROUP BY demographicNo\n					) currentbp\n					ON ( currentbp.demographic = mbp.demographicNo AND currentbp.observed = mbp.dateObserved AND currentbp.id = mbp.id )	\n				) BP\n				ON(BP.demographicNo = d.demographic_no)			\n				LEFT JOIN (\n					SELECT ma1c.demographicNo, ma1c.dataField, ma1c.dateObserved\n					FROM measurements ma1c\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${a1cType}\n						GROUP BY demographicNo\n					) currenta1c\n					ON ( currenta1c.demographic = ma1c.demographicNo AND currenta1c.observed = ma1c.dateObserved AND currenta1c.id = ma1c.id )	\n				) A1C\n				ON(A1C.demographicNo = d.demographic_no)			\n				LEFT JOIN (\n					SELECT megfr.demographicNo, megfr.dataField, megfr.dateObserved\n					FROM measurements megfr\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${egfrType}\n						GROUP BY demographicNo\n					) currentegfr\n					ON ( currentegfr.demographic = megfr.demographicNo AND currentegfr.observed = megfr.dateObserved AND currentegfr.id = megfr.id)	\n				) EGFR\n				ON(EGFR.demographicNo = d.demographic_no)				\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code LIKE ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) &gt; -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code LIKE ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no &gt; 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}\n			ORDER BY `CDM Status` DESC			\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n','','\0',0,NULL,NULL);
INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'Heart Failure (G14051) v2','Billing','CDM Incentive Program','GP Services Committee: Chronic Disease Management Incentives','2016-01-01','Annual chronic care incentive for full service most responsible general practitioner.','\n			Details here: https://sgp.bc.ca/fee/heart-failure-chronic-care-incentive-copy/\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>CDM Incentive Program</subCategory>\n		<name>Heart Failure (G14051) v2</name>\n		<definition>Annual chronic care incentive for full service most responsible general practitioner.</definition>\n		<framework>GP Services Committee: Chronic Disease Management Incentives</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Details here: https://sgp.bc.ca/fee/heart-failure-chronic-care-incentive-copy/\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>10-01-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14051\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />			\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"250,401\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"428\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />	\n		</params>\n		\n        <range>\n            <upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n            <lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n        </range>\n\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT			 \n				ROUND( IFNULL( SUM( CASE\n					WHEN d.demographic_no &gt; 0\n					THEN 1\n					ELSE 0\n				END ), 0), 1 ) AS \"Patients up to date\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) )  \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							ELSE 0\n					 END\n				ELSE 0 \n				END ),0), 1) AS \"Patients billable\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n						AND IFNULL(VISITS.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) &lt; ${visitsqualifier}\n				THEN 1\n				ELSE 0\n				END ),0), 1) AS \"Patients recall\" \n\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) GVISIT\n				ON ( GVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode}\n					GROUP BY demographic_no\n				) ACPVISIT\n				ON ( ACPVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code IN ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code LIKE ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}			\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>08-29-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14051\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />			\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"250,401\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"428\" />\n						\n			<parameter id=\"bloodpressureType\" name=\"bloodpressure_type\" value=\"\'BP\'\" />\n			<parameter id=\"egfrType\" name=\"egfr_type\" value=\"\'EGFR\'\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />		\n		</params>\n			\n		<range>\n			<upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n			<lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n		</range>\n		\n		<displayColumns>\n 			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone\" primary=\"false\" />\n			<column id=\"bloodPressure\" name=\"CONCAT(IFNULL(BP.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(BP.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"egfr\" name=\"CONCAT(IFNULL(EGFR.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(EGFR.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last GFR\" primary=\"false\" />\n									\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) &gt; 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} ) AND ( IFNULL(BILL.service_date, 0) = 0 ) AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPGRP.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%d-%m-%Y\' )\" title=\"Dx Date\" primary=\"false\" />					\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%d-%m-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" />	\n			<column id=\"acpgrp\" name=\"IFNULL(DATE_FORMAT(ACPGRP.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Allied or grp Visit\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n 			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone\" primary=\"false\" />\n			<column id=\"bloodPressure\" name=\"CONCAT(IFNULL(BP.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(BP.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"egfr\" name=\"CONCAT(IFNULL(EGFR.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(EGFR.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last GFR\" primary=\"false\" />\n									\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) &gt; 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} ) AND ( IFNULL(BILL.service_date, 0) = 0 ) AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPGRP.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%d-%m-%Y\' )\" title=\"Dx Date\" primary=\"false\" />					\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%d-%m-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" />	\n			<column id=\"acpgrp\" name=\"IFNULL(DATE_FORMAT(ACPGRP.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Allied or grp Visit\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT *\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) &gt; 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode} OR billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) ACPGRP\n				ON ( ACPGRP.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT mbp.demographicNo, mbp.dataField, mbp.dateObserved\n					FROM measurements mbp\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${bloodpressureType}\n						GROUP BY demographicNo\n					) currentbp\n					ON ( currentbp.demographic = mbp.demographicNo AND currentbp.observed = mbp.dateObserved AND currentbp.id = mbp.id )	\n				) BP\n				ON(BP.demographicNo = d.demographic_no)					\n				LEFT JOIN (\n					SELECT megfr.demographicNo, megfr.dataField, megfr.dateObserved\n					FROM measurements megfr\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${egfrType}\n						GROUP BY demographicNo\n					) currentegfr\n					ON ( currentegfr.demographic = megfr.demographicNo AND currentegfr.observed = megfr.dateObserved AND currentegfr.id = megfr.id)	\n				) EGFR\n				ON(EGFR.demographicNo = d.demographic_no)	\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code IN ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code LIKE ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}\n			ORDER BY `CDM Status` DESC				\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n','','\0',0,NULL,NULL);
INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'Hypertension (G14052) v2','Billing','CDM Incentive Program','GP Services Committee: Chronic Disease Management Incentives','2016-01-01','Annual chronic care incentive for full service most responsible general practitioner.','\n			Details here: https://sgp.bc.ca/fee/hypertension-chronic-care-incentive-copy/\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>CDM Incentive Program</subCategory>\n		<name>Hypertension (G14052) v2</name>\n		<definition>Annual chronic care incentive for full service most responsible general practitioner.</definition>\n		<framework>GP Services Committee: Chronic Disease Management Incentives</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Details here: https://sgp.bc.ca/fee/hypertension-chronic-care-incentive-copy/\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>10-01-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14052\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />			\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"428,250\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"401\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />	\n		</params>\n		\n        <range>\n            <upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n            <lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n        </range>\n\n		<query>\n			<!-- Indicator SQL Query here -->\n			SELECT			 \n				ROUND( IFNULL( SUM( CASE\n					WHEN d.demographic_no &gt; 0\n					THEN 1\n					ELSE 0\n				END ),0), 1 ) AS \"Patients up to date\",\n			\n				ROUND( IFNULL( SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) )  \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) ) = ${visitsqualifier}\n							THEN 1\n							ELSE 0\n					 END\n				ELSE 0 \n				END ),0), 1) AS \"Patients billable\",\n			\n				ROUND( IFNULL(  SUM( CASE\n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} )  \n						AND ( IFNULL(BILL.service_date, 0) = 0 )\n						AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n						AND IFNULL(VISITS.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(GVISIT.qualifier,0) &lt; ${visitsqualifier}\n						AND IFNULL(VISITS.qualifier,0) + IFNULL(ACPVISIT.qualifier,0) &lt; ${visitsqualifier}\n				THEN 1\n				ELSE 0\n				END ),0), 1) AS \"Patients recall\" \n\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) GVISIT\n				ON ( GVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode}\n					GROUP BY demographic_no\n				) ACPVISIT\n				ON ( ACPVISIT.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code IN ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code LIKE ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}			\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>08-29-2018</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"pstatus\" name=\"patient_status\" value=\"\'%AC%\'\" />\n			<parameter id=\"daysanniversary\" name=\"days_anniversary\" value=\"365\" />\n			<parameter id=\"today\" name=\"today\" value=\"DATE(NOW())\" />\n			<parameter id=\"visitsqualifier\" name=\"visits_qualifier\" value=\"2\" />\n			<parameter id=\"billingStatus\" name=\"billing_status\" value=\"\'%S%\'\" />\n			<parameter id=\"excludeBillingStatus\" name=\"billing_status\" value=\"%D%,%R%,%F%,%N%\" />\n						\n			<parameter id=\"bonusBillingcode\" name=\"billing_code\" value=\"14052\" />			\n			<parameter id=\"phoneBillingcode\" name=\"billing_code\" value=\"14076,14079\" />	\n			<parameter id=\"acpBillingcode\" name=\"billing_code\" value=\"14029\" />			\n			<parameter id=\"visitBillingcode\" name=\"billing_code\" value=\"12100,00100,15300,16100,17100,18100,\n				12101,00101,15301,16101,17101,18101,12120,00120,15320,16120,17120,18120,00103,\n				14090,14091,14094,00114,00115\" />				\n			<parameter id=\"excludeBillingcode\" name=\"billing_code\" value=\"14063\" />							\n			<parameter id=\"excludeDxCode\" name=\"dxresearch_code\" value=\"428,250\" />\n			<parameter id=\"dxcode\" name=\"dxresearch_code\" value=\"401\" />\n\n			<parameter id=\"bloodpressureType\" name=\"bloodpressure_type\" value=\"\'BP\'\" />\n			<parameter id=\"egfrType\" name=\"egfr_type\" value=\"\'EGFR\'\" />\n			\n			<parameter id=\"dxcodestatus\" name=\"status\" value=\"\'%A%\'\" />\n			<parameter id=\"patientNameExclude\" name=\"last_name\" value=\"TEST%,BOOP,INTEGRATOR%\" />		\n		</params>\n			\n		<range>\n			<upperLimit id=\"groupBillingcode\" label=\"Group Visit Upper\" name=\"Group Visit Upper\" value=\"13781\" />\n			<lowerLimit id=\"groupBillingcode\" label=\"Group Visit Lower\" name=\"Group Visit Lower\" value=\"13763\" />\n		</range>\n		\n		<displayColumns>\n 			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone\" primary=\"false\" />\n\n			<column id=\"bloodPressure\" name=\"CONCAT(IFNULL(BP.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(BP.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"egfr\" name=\"CONCAT(IFNULL(EGFR.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(EGFR.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last GFR\" primary=\"false\" />\n									\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) &gt; 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} ) AND ( IFNULL(BILL.service_date, 0) = 0 ) AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPGRP.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%d-%m-%Y\' )\" title=\"Dx Date\" primary=\"false\" />					\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%d-%m-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" />	\n			<column id=\"acpgrp\" name=\"IFNULL(DATE_FORMAT(ACPGRP.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Allied or grp Visit\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n 		 	<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"phone\" name=\"d.phone\" title=\"Phone\" primary=\"false\" />\n\n			<column id=\"bloodPressure\" name=\"CONCAT(IFNULL(BP.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(BP.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last BP\" primary=\"false\" />\n			<column id=\"egfr\" name=\"CONCAT(IFNULL(EGFR.dataField,0), &quot; (&quot;, IFNULL(DATE_FORMAT( DATE(EGFR.dateObserved), \'%d-%m-%Y\' ),0), &quot;)&quot;)\" title=\"Last GFR\" primary=\"false\" />\n									\n			<column id=\"billStatus\" name=\"CASE WHEN IFNULL(EXCLUDE_BILL.billing_code,0) &gt; 0\n				THEN \'palliative\' \n				WHEN ( ABS( DATEDIFF( dxr.start_date, ${today} ) ) &gt;= ${daysanniversary} ) AND ( IFNULL(BILL.service_date, 0) = 0 ) AND ( (IFNULL(EXCLUDE_DX.code1,0) = 0) AND (IFNULL(EXCLUDE_DX.code2,0) = 0) ) \n				THEN CASE \n							WHEN IFNULL(VISITS.qualifier,0) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL(VISITS.qualifier,0) + IFNULL(PHONE.qualifier,0) ) = ${visitsqualifier}\n							THEN \'billable\'\n							WHEN ( IFNULL( VISITS.qualifier, 0 ) + IFNULL( ACPGRP.qualifier, 0 ) ) = ${visitsqualifier}\n							THEN \'billable\'\n							ELSE \'recall\'\n					 END\n				ELSE \'-\'\n				END\" title=\"CDM Status\" primary=\"false\" />\n			<column id=\"dxDate\" name=\"DATE_FORMAT( dxr.start_date , \'%d-%m-%Y\' )\" title=\"Dx Date\" primary=\"false\" />					\n			<column id=\"lastBillDate\" name=\"IFNULL( DATE_FORMAT( DATE(BILL.service_date), \'%d-%m-%Y\' ), 0)\" title=\"Last Bill\" primary=\"false\" />				\n			<column id=\"visitDate\" name=\"IFNULL( DATE_FORMAT(VISITS.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last MD Visit\" primary=\"false\" />\n			<column id=\"phoneDate\" name=\"IFNULL(DATE_FORMAT(PHONE.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Phone\" primary=\"false\" />	\n			<column id=\"acpgrp\" name=\"IFNULL(DATE_FORMAT(ACPGRP.service, \'%d-%m-%Y\' ), \'\')\" title=\"Last Allied or grp Visit\" primary=\"false\" />\n			<column id=\"age\" name=\"TIMESTAMPDIFF(YEAR, DATE( CONCAT(year_of_birth,\'-\',month_of_birth,\'-\',date_of_birth) ), CURDATE() )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n		</exportColumns>\n		<query>\n			<!-- Drilldown SQL Query here -->\n			SELECT *\n			FROM demographic d \n			INNER JOIN dxresearch dxr \n			ON ( d.demographic_no = dxr.demographic_no ) \n				LEFT JOIN (\n					SELECT bm.demographic_no, bm.billingstatus, bm.billing_code, bm.service_date\n					FROM billingmaster bm\n					INNER JOIN (\n						SELECT MAX(service_date) AS service, demographic_no AS demographic\n						FROM billingmaster\n						WHERE billing_code = ${bonusBillingcode}\n						AND billingstatus NOT IN ${excludeBillingStatus}\n						AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n						GROUP BY demographic_no\n					) current\n					ON ( current.demographic = bm.demographic_no AND current.service = bm.service_date ) \n					WHERE bm.billing_code = ${bonusBillingcode}\n				) BILL\n				ON(BILL.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\',\n							CASE \n								WHEN COUNT(demographic_no) = 1\n								THEN 1\n								WHEN COUNT(demographic_no) > 1\n								THEN 2\n								ELSE 0\n							END AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code IN ${visitBillingcode} \n					GROUP BY demographic_no\n				) VISITS\n				ON (VISITS.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) > 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE( service_date ) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}	\n					AND billing_code IN ${phoneBillingcode} \n					GROUP BY demographic_no\n				) PHONE\n				ON (PHONE.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	COUNT(demographic_no) AS \'count\', \n							IF( COUNT(demographic_no) &gt; 0, 1, 0) AS \'qualifier\',\n							demographic_no, \n							MAX(service_date) AS service\n					FROM billingmaster\n					WHERE billingstatus LIKE ${billingStatus}\n					AND DATE(service_date) BETWEEN DATE_SUB( ${today}, INTERVAL ${daysanniversary} DAY ) AND ${today}\n					AND billing_code = ${acpBillingcode} OR billing_code BETWEEN ${lowerLimit.groupBillingcode} AND ${upperLimit.groupBillingcode}	\n					GROUP BY demographic_no\n				) ACPGRP\n				ON ( ACPGRP.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT mbp.demographicNo, mbp.dataField, mbp.dateObserved\n					FROM measurements mbp\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${bloodpressureType}\n						GROUP BY demographicNo\n					) currentbp\n					ON ( currentbp.demographic = mbp.demographicNo AND currentbp.observed = mbp.dateObserved AND currentbp.id = mbp.id )	\n				) BP\n				ON(BP.demographicNo = d.demographic_no)					\n				LEFT JOIN (\n					SELECT megfr.demographicNo, megfr.dataField, megfr.dateObserved\n					FROM measurements megfr\n					INNER JOIN(\n						SELECT MAX(id) AS id, MAX(dateObserved) AS observed, MAX(demographicNo) AS demographic\n						FROM measurements\n						WHERE demographicNo > 0\n						AND type LIKE ${egfrType}\n						GROUP BY demographicNo\n					) currentegfr\n					ON ( currentegfr.demographic = megfr.demographicNo AND currentegfr.observed = megfr.dateObserved AND currentegfr.id = megfr.id)	\n				) EGFR\n				ON(EGFR.demographicNo = d.demographic_no)\n				LEFT JOIN (\n					SELECT 	IFNULL( MIN(dxresearch_code), 0) AS code1, \n							IF( IFNULL( MIN(dxresearch_code), 0) != IFNULL( MAX(dxresearch_code),0 ), MAX(dxresearch_code), 0) AS code2, \n							demographic_no\n					FROM dxresearch\n					WHERE dxresearch_code IN ${excludeDxCode}\n					AND `status` LIKE ${dxcodestatus} \n					GROUP BY demographic_no\n				) EXCLUDE_DX\n				ON ( EXCLUDE_DX.demographic_no = d.demographic_no)\n				LEFT JOIN (\n					SELECT billing_code, demographic_no\n					FROM billingmaster bm\n					WHERE billingstatus LIKE ${billingStatus}\n					AND billing_code LIKE ${excludeBillingcode}	\n					GROUP BY demographic_no HAVING COUNT(demographic_no) > -1\n				) EXCLUDE_BILL\n				ON(EXCLUDE_BILL.demographic_no = d.demographic_no )\n			WHERE d.patient_status LIKE ${pstatus} \n			AND dxr.dxresearch_code LIKE ${dxcode} \n			AND dxr.`status` LIKE ${dxcodestatus} \n			AND d.demographic_no > 0 \n			AND d.last_name NOT IN ${patientNameExclude}\n			AND d.provider_no LIKE ${provider}\n			ORDER BY `CDM Status` DESC				\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>\n','','\0',0,NULL,NULL);
INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'Prevention (14066) – 100/yr','Billing','Total/Year: 14066, 14076, 14078 ','GP Services Committee','2016-01-01','Limit 100 Prevention (14066) billings available per MD per calendar year','\n			Details here: https://sgp.bc.ca/fee/personal-health-risk-assessment/\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>Total/Year: 14066, 14076, 14078 </subCategory>\n		<name>Prevention (14066) – 100/yr</name>\n		<definition>Limit 100 Prevention (14066) billings available per MD per calendar year</definition>\n		<framework>GP Services Committee</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Details here: https://sgp.bc.ca/fee/personal-health-risk-assessment/\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>18-11-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"billingcode\" name=\"billing_code\" value=\"14066\" />\n			<parameter id=\"billinglimit\" name=\"billing_limit\" value=\"100\" />\n			<parameter id=\"status\" name=\"billingstatus\" value=\"\'S\'\" />\n		</params>\n\n		<query>\n			SELECT \n				ROUND( IFNULL( SUM( IF(bm.billingmaster_no IS NOT NULL AND bm.billingmaster_no > 0, 1, 0) ), 0),1) AS \'# Billed\',	\n				ROUND( ${billinglimit} - IFNULL( SUM( IF(bm.billingmaster_no IS NOT NULL AND bm.billingmaster_no > 0, 1, 0) ), 0),1 ) AS \'# Remaining\'\n			FROM billingmaster bm\n			LEFT JOIN provider p\n			ON(p.ohip_no = bm.practitioner_no)\n			WHERE billing_code = ${billingcode}\n			AND YEAR(NOW()) = YEAR(createdate)\n			AND billingstatus LIKE ${status}\n			AND p.provider_no IS NOT NULL\n			AND p.provider_no = ${provider}\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>18-11-2017</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"billingcode\" name=\"billing_code\" value=\"14066\" />\n			<parameter id=\"billinglimit\" name=\"billing_limit\" value=\"100\" />\n			<parameter id=\"status\" name=\"billingstatus\" value=\"\'S\'\" />\n		</params>\n\n		<displayColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n			<column id=\"lastbill\" name=\"IFNULL( DATE_FORMAT( DATE(bm.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill (m-d-y)\" primary=\"false\" />\n			<column id=\"billingcode\" name=\"bm.billing_code\" title=\"Billing Code\" primary=\"false\" />\n			<column id=\"payee\" name=\"bm.payee_no\" title=\"Payee\" primary=\"false\" />\n			<column id=\"billingprovider\" name=\"bm.practitioner_no\" title=\"Billing Provider\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n			<column id=\"lastbill\" name=\"IFNULL( DATE_FORMAT( DATE(bm.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill (m-d-y)\" primary=\"false\" />\n			<column id=\"billingcode\" name=\"bm.billing_code\" title=\"Billing Code\" primary=\"false\" />\n			<column id=\"payee\" name=\"bm.payee_no\" title=\"Payee\" primary=\"false\" />\n			<column id=\"billingprovider\" name=\"bm.practitioner_no\" title=\"Billing Provider\" primary=\"false\" />\n		</exportColumns>\n		\n		<query>\n			SELECT *\n			FROM billingmaster bm\n			LEFT JOIN provider p\n			ON ( p.ohip_no = bm.practitioner_no )\n			JOIN demographic d\n			ON ( d.demographic_no = bm.demographic_no )\n			WHERE billing_code = ${billingcode}\n			AND YEAR( NOW() ) = YEAR( createdate )\n			AND billingstatus LIKE ${status}\n			AND p.provider_no = ${provider}\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>','','\0',0,NULL,NULL);
INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'Telephone Management (14076) – 1500/yr','Billing','Total/Year: 14066, 14076, 14078 ','GP Services Committee','2016-01-01','Limit 1500 Telephone Management (14076) billings available per MD per calendar year','\n			Details here: https://sgp.bc.ca/fee/personal-health-risk-assessment/\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>Total/Year: 14066, 14076, 14078 </subCategory>\n		<name>Telephone Management (14076) – 1500/yr</name>\n		<definition>Limit 1500 Telephone Management (14076) billings available per MD per calendar year</definition>\n		<framework>GP Services Committee</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Details here: https://sgp.bc.ca/fee/personal-health-risk-assessment/\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>27-11-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"billingcode\" name=\"billing_code\" value=\"14076\" />\n			<parameter id=\"billinglimit\" name=\"billing_limit\" value=\"1500\" />\n			<parameter id=\"status\" name=\"billingstatus\" value=\"\'S\'\" />\n		</params>\n\n		<query>\n			SELECT \n				ROUND( IFNULL( SUM( IF(bm.billingmaster_no IS NOT NULL AND bm.billingmaster_no > 0, 1, 0) ), 0),1) AS \'# Billed\',	\n				ROUND( ${billinglimit} - IFNULL( SUM( IF(bm.billingmaster_no IS NOT NULL AND bm.billingmaster_no > 0, 1, 0) ), 0),1 ) AS \'# Remaining\'\n			FROM billingmaster bm\n			LEFT JOIN provider p\n			ON(p.ohip_no = bm.practitioner_no)\n			WHERE billing_code = ${billingcode}\n			AND YEAR(NOW()) = YEAR(createdate)\n			AND billingstatus LIKE ${status}\n			AND p.provider_no IS NOT NULL\n			AND p.provider_no = ${provider}\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>27-11-2017</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"billingcode\" name=\"billing_code\" value=\"14076\" />\n			<parameter id=\"billinglimit\" name=\"billing_limit\" value=\"1500\" />\n			<parameter id=\"status\" name=\"billingstatus\" value=\"\'S\'\" />\n		</params>\n\n		<displayColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n			<column id=\"lastbill\" name=\"IFNULL( DATE_FORMAT( DATE(bm.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill (m-d-y)\" primary=\"false\" />\n			<column id=\"billingcode\" name=\"bm.billing_code\" title=\"Billing Code\" primary=\"false\" />\n			<column id=\"payee\" name=\"bm.payee_no\" title=\"Payee\" primary=\"false\" />\n			<column id=\"billingprovider\" name=\"bm.practitioner_no\" title=\"Billing Provider\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n			<column id=\"lastbill\" name=\"IFNULL( DATE_FORMAT( DATE(bm.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill (m-d-y)\" primary=\"false\" />\n			<column id=\"billingcode\" name=\"bm.billing_code\" title=\"Billing Code\" primary=\"false\" />\n			<column id=\"payee\" name=\"bm.payee_no\" title=\"Payee\" primary=\"false\" />\n			<column id=\"billingprovider\" name=\"bm.practitioner_no\" title=\"Billing Provider\" primary=\"false\" />\n		</exportColumns>\n		\n		<query>\n			SELECT *\n			FROM billingmaster bm\n			LEFT JOIN provider p\n			ON ( p.ohip_no = bm.practitioner_no )\n			JOIN demographic d\n			ON ( d.demographic_no = bm.demographic_no )\n			WHERE billing_code = ${billingcode}\n			AND YEAR( NOW() ) = YEAR( createdate )\n			AND billingstatus LIKE ${status}\n			AND p.provider_no = ${provider}\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>','','\0',0,NULL,NULL);
INSERT INTO `indicatorTemplate` (`dashboardId`, `name`, `category`, `subCategory`, `framework`, `frameworkVersion`, `definition`, `notes`, `template`, `active`, `locked`, `shared`, `metricSetName`, `metricLabel`) VALUES (@dashboardId,'Email/Text/Telephone (14078) – 200/yr','Billing','Total/Year: 14066, 14076, 14078 ','GP Services Committee','2016-01-01','Limit 200 Email/Text/Telephone Medical Advice Relay Fee (14078) billings available per MD per calendar year','\n			Details here: https://sgp.bc.ca/fee/personal-health-risk-assessment/\n		','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<indicatorTemplateXML>\n	<author>Colcamex Resources Inc. for Oscar BC</author>\n	<uid></uid>\n	<heading>\n		<category>Billing</category>\n		<subCategory>Total/Year: 14066, 14076, 14078 </subCategory>\n		<name>Email/Text/Telephone (14078) – 200/yr</name>\n		<definition>Limit 200 Email/Text/Telephone Medical Advice Relay Fee (14078) billings available per MD per calendar year</definition>\n		<framework>GP Services Committee</framework>\n		<frameworkVersion>01-01-2016</frameworkVersion>\n		<notes>\n			Details here: https://sgp.bc.ca/fee/personal-health-risk-assessment/\n		</notes>\n	</heading>\n	<indicatorQuery>\n		<version>27-11-2017</version>\n		<params>\n			<!-- \n				Required parameter provider. Value options are: \n					[ an individual providerNo, or provider range ] ie: value=\"370, 1001\" \n					\"all\" ie: value=\"all\" including null.\n					\"loggedInProvider\" ie:\n				Default is \"loggedInProvider\"\n				Use this parameter in the query as \'${provider}\'\n				This parameter should be used for fetching patient\'s assigned to a MRP.\n				ie: WHERE demographic.provider_no = ${provider}\n			-->\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"billingcode\" name=\"billing_code\" value=\"14078\" />\n			<parameter id=\"billinglimit\" name=\"billing_limit\" value=\"200\" />\n			<parameter id=\"status\" name=\"billingstatus\" value=\"\'S\'\" />\n		</params>\n\n		<query>\n			SELECT \n				ROUND( IFNULL( SUM( IF(bm.billingmaster_no IS NOT NULL AND bm.billingmaster_no > 0, 1, 0) ), 0),1) AS \'# Billed\',	\n				ROUND( ${billinglimit} - IFNULL( SUM( IF(bm.billingmaster_no IS NOT NULL AND bm.billingmaster_no > 0, 1, 0) ), 0),1 ) AS \'# Remaining\'\n			FROM billingmaster bm\n			LEFT JOIN provider p\n			ON(p.ohip_no = bm.practitioner_no)\n			WHERE billing_code = ${billingcode}\n			AND YEAR(NOW()) = YEAR(createdate)\n			AND billingstatus LIKE ${status}\n			AND p.provider_no IS NOT NULL\n			AND p.provider_no = ${provider}\n		</query>\n	</indicatorQuery>\n	<drillDownQuery>\n		<version>27-11-2017</version>\n		<params>\n			<parameter id=\"provider\" name=\"provider_no\" value=\"loggedInProvider\" />\n			<parameter id=\"billingcode\" name=\"billing_code\" value=\"14078\" />\n			<parameter id=\"billinglimit\" name=\"billing_limit\" value=\"200\" />\n			<parameter id=\"status\" name=\"billingstatus\" value=\"\'S\'\" />\n		</params>\n\n		<displayColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n			<column id=\"lastbill\" name=\"IFNULL( DATE_FORMAT( DATE(bm.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill (m-d-y)\" primary=\"false\" />\n			<column id=\"billingcode\" name=\"bm.billing_code\" title=\"Billing Code\" primary=\"false\" />\n			<column id=\"payee\" name=\"bm.payee_no\" title=\"Payee\" primary=\"false\" />\n			<column id=\"billingprovider\" name=\"bm.practitioner_no\" title=\"Billing Provider\" primary=\"false\" />\n		</displayColumns>\n		<exportColumns>\n			<column id=\"demographicNo\" name=\"d.demographic_no\" title=\"Id\" primary=\"true\" />\n			<column id=\"name\" name=\"CONCAT( d.last_name, \', \',d.first_name )\" title=\"Name\" primary=\"false\" />\n			<column id=\"age\" name=\"FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,\'-\',d.month_of_birth,\'-\',d.date_of_birth) ), NOW() ) ) / 365.25 )\" title=\"Age\" primary=\"false\" />\n			<column id=\"gender\" name=\"d.sex\" title=\"Gender\" primary=\"false\" />\n			<column id=\"lastbill\" name=\"IFNULL( DATE_FORMAT( DATE(bm.service_date), \'%m-%d-%Y\' ), 0)\" title=\"Last Bill (m-d-y)\" primary=\"false\" />\n			<column id=\"billingcode\" name=\"bm.billing_code\" title=\"Billing Code\" primary=\"false\" />\n			<column id=\"payee\" name=\"bm.payee_no\" title=\"Payee\" primary=\"false\" />\n			<column id=\"billingprovider\" name=\"bm.practitioner_no\" title=\"Billing Provider\" primary=\"false\" />\n		</exportColumns>\n		\n		<query>\n			SELECT *\n			FROM billingmaster bm\n			LEFT JOIN provider p\n			ON ( p.ohip_no = bm.practitioner_no )\n			JOIN demographic d\n			ON ( d.demographic_no = bm.demographic_no )\n			WHERE billing_code = ${billingcode}\n			AND YEAR( NOW() ) = YEAR( createdate )\n			AND billingstatus LIKE ${status}\n			AND p.provider_no = ${provider}\n		</query>\n	</drillDownQuery>\n	<shared>false</shared>\n	<sharedMetricSetName></sharedMetricSetName>\n	<sharedMetricDataId></sharedMetricDataId>\n	<sharedMappings>\n		<sharedMapping fromLabel=\"\" toLabel=\"\"/>\n	</sharedMappings>\n</indicatorTemplateXML>','','\0',0,NULL,NULL);
